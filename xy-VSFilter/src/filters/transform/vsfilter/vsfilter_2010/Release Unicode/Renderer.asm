; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	E:\GitHub\codesandnotes\xy-vsfilter\src\subtitles\libssf\Renderer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4Renderer@ssf@@6B@				; ssf::Renderer::`RTTI Complete Object Locator'
PUBLIC	??_R3Renderer@ssf@@8				; ssf::Renderer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Renderer@ssf@@8				; ssf::Renderer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Renderer@ssf@@8			; ssf::Renderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVRenderer@ssf@@@8			; ssf::Renderer `RTTI Type Descriptor'
PUBLIC	??_R4?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@	; ssf::Cache<ssf::RenderedSubtitle *>::`RTTI Complete Object Locator'
PUBLIC	??_R4RenderedSubtitleCache@ssf@@6B@		; ssf::RenderedSubtitleCache::`RTTI Complete Object Locator'
PUBLIC	??_R3RenderedSubtitleCache@ssf@@8		; ssf::RenderedSubtitleCache::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RenderedSubtitleCache@ssf@@8		; ssf::RenderedSubtitleCache::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8 ; ssf::Cache<ssf::RenderedSubtitle *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8	; ssf::Cache<ssf::RenderedSubtitle *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8	; ssf::Cache<ssf::RenderedSubtitle *>::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@@8 ; ssf::Cache<ssf::RenderedSubtitle *> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@RenderedSubtitleCache@ssf@@8	; ssf::RenderedSubtitleCache::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVRenderedSubtitleCache@ssf@@@8		; ssf::RenderedSubtitleCache `RTTI Type Descriptor'
PUBLIC	??_R4RenderedSubtitle@ssf@@6B@			; ssf::RenderedSubtitle::`RTTI Complete Object Locator'
PUBLIC	??_R3RenderedSubtitle@ssf@@8			; ssf::RenderedSubtitle::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RenderedSubtitle@ssf@@8			; ssf::RenderedSubtitle::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RenderedSubtitle@ssf@@8		; ssf::RenderedSubtitle::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVRenderedSubtitle@ssf@@@8		; ssf::RenderedSubtitle `RTTI Type Descriptor'
PUBLIC	??_R4?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@	; ssf::Cache<ssf::GlyphPath *>::`RTTI Complete Object Locator'
PUBLIC	??_R4GlyphPathCache@ssf@@6B@			; ssf::GlyphPathCache::`RTTI Complete Object Locator'
PUBLIC	??_R3GlyphPathCache@ssf@@8			; ssf::GlyphPathCache::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GlyphPathCache@ssf@@8			; ssf::GlyphPathCache::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Cache@PAVGlyphPath@ssf@@@ssf@@8	; ssf::Cache<ssf::GlyphPath *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$Cache@PAVGlyphPath@ssf@@@ssf@@8		; ssf::Cache<ssf::GlyphPath *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Cache@PAVGlyphPath@ssf@@@ssf@@8		; ssf::Cache<ssf::GlyphPath *>::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$Cache@PAVGlyphPath@ssf@@@ssf@@@8	; ssf::Cache<ssf::GlyphPath *> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@GlyphPathCache@ssf@@8		; ssf::GlyphPathCache::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVGlyphPathCache@ssf@@@8			; ssf::GlyphPathCache `RTTI Type Descriptor'
PUBLIC	??_R4?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@	; ssf::Cache<ssf::FontWrapper *>::`RTTI Complete Object Locator'
PUBLIC	??_R4FontCache@ssf@@6B@				; ssf::FontCache::`RTTI Complete Object Locator'
PUBLIC	??_R3FontCache@ssf@@8				; ssf::FontCache::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FontCache@ssf@@8				; ssf::FontCache::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Cache@PAVFontWrapper@ssf@@@ssf@@8 ; ssf::Cache<ssf::FontWrapper *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$Cache@PAVFontWrapper@ssf@@@ssf@@8	; ssf::Cache<ssf::FontWrapper *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Cache@PAVFontWrapper@ssf@@@ssf@@8	; ssf::Cache<ssf::FontWrapper *>::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$Cache@PAVFontWrapper@ssf@@@ssf@@@8	; ssf::Cache<ssf::FontWrapper *> `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@FontCache@ssf@@8			; ssf::FontCache::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVFontCache@ssf@@@8			; ssf::FontCache `RTTI Type Descriptor'
PUBLIC	??_R4GlyphPath@ssf@@6B@				; ssf::GlyphPath::`RTTI Complete Object Locator'
PUBLIC	??_R3GlyphPath@ssf@@8				; ssf::GlyphPath::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GlyphPath@ssf@@8				; ssf::GlyphPath::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GlyphPath@ssf@@8			; ssf::GlyphPath::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVGlyphPath@ssf@@@8			; ssf::GlyphPath `RTTI Type Descriptor'
PUBLIC	?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXMMM_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::SetOptimalLoad
PUBLIC	??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@IMMMI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
PUBLIC	??0?$StringMap@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??0?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??0?$Cache@PAVFontWrapper@ssf@@@ssf@@QAE@I@Z	; ssf::Cache<ssf::FontWrapper *>::Cache<ssf::FontWrapper *>
PUBLIC	??_GFontCache@ssf@@UAEPAXI@Z			; ssf::FontCache::`scalar deleting destructor'
PUBLIC	??0FontCache@ssf@@QAE@XZ			; ssf::FontCache::FontCache
PUBLIC	?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXMMM_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::SetOptimalLoad
PUBLIC	??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@IMMMI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
PUBLIC	??0?$StringMap@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??0?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??0?$Cache@PAVGlyphPath@ssf@@@ssf@@QAE@I@Z	; ssf::Cache<ssf::GlyphPath *>::Cache<ssf::GlyphPath *>
PUBLIC	??_GGlyphPathCache@ssf@@UAEPAXI@Z		; ssf::GlyphPathCache::`scalar deleting destructor'
PUBLIC	??0GlyphPathCache@ssf@@QAE@XZ			; ssf::GlyphPathCache::GlyphPathCache
PUBLIC	?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXMMM_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::SetOptimalLoad
PUBLIC	??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@IMMMI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
PUBLIC	??0?$StringMap@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??0?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??0?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAE@I@Z ; ssf::Cache<ssf::RenderedSubtitle *>::Cache<ssf::RenderedSubtitle *>
PUBLIC	??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z	; ssf::RenderedSubtitleCache::`scalar deleting destructor'
PUBLIC	??0RenderedSubtitleCache@ssf@@QAE@XZ		; ssf::RenderedSubtitleCache::RenderedSubtitleCache
PUBLIC	?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXMMM_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::SetOptimalLoad
PUBLIC	??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@IMMMI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >
PUBLIC	??0?$StringMap@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??0?$StringMapW@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??0SubRectAllocator@ssf@@QAE@XZ			; ssf::SubRectAllocator::SubRectAllocator
PUBLIC	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
PUBLIC	??1?$StringMap@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??1?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::EnableAutoRehash
PUBLIC	?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::DisableAutoRehash
PUBLIC	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveAll
PUBLIC	?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBE_NXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::IsEmpty
PUBLIC	?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetStartPosition
PUBLIC	?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FindNextNode
PUBLIC	?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEAAPAVFontWrapper@ssf@@AAPAU__POSITION@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNextValue
PUBLIC	?RemoveAll@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::FontWrapper *>::RemoveAll
PUBLIC	??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z	; ssf::Cache<ssf::FontWrapper *>::`scalar deleting destructor'
PUBLIC	??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ	; ssf::Cache<ssf::FontWrapper *>::~Cache<ssf::FontWrapper *>
PUBLIC	??1FontCache@ssf@@UAE@XZ			; ssf::FontCache::~FontCache
PUBLIC	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
PUBLIC	??1?$StringMap@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??1?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::EnableAutoRehash
PUBLIC	?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::DisableAutoRehash
PUBLIC	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveAll
PUBLIC	?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBE_NXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::IsEmpty
PUBLIC	?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetStartPosition
PUBLIC	?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FindNextNode
PUBLIC	?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEAAPAVGlyphPath@ssf@@AAPAU__POSITION@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNextValue
PUBLIC	?RemoveAll@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::GlyphPath *>::RemoveAll
PUBLIC	??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z	; ssf::Cache<ssf::GlyphPath *>::`scalar deleting destructor'
PUBLIC	??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ	; ssf::Cache<ssf::GlyphPath *>::~Cache<ssf::GlyphPath *>
PUBLIC	??1GlyphPathCache@ssf@@UAE@XZ			; ssf::GlyphPathCache::~GlyphPathCache
PUBLIC	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
PUBLIC	??1?$StringMap@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??1?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::EnableAutoRehash
PUBLIC	?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::DisableAutoRehash
PUBLIC	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveAll
PUBLIC	?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBE_NXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::IsEmpty
PUBLIC	?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetStartPosition
PUBLIC	?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FindNextNode
PUBLIC	?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEAAPAVRenderedSubtitle@ssf@@AAPAU__POSITION@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNextValue
PUBLIC	?RemoveAll@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::RenderedSubtitle *>::RemoveAll
PUBLIC	??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z ; ssf::Cache<ssf::RenderedSubtitle *>::`scalar deleting destructor'
PUBLIC	??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ ; ssf::Cache<ssf::RenderedSubtitle *>::~Cache<ssf::RenderedSubtitle *>
PUBLIC	??1RenderedSubtitleCache@ssf@@UAE@XZ		; ssf::RenderedSubtitleCache::~RenderedSubtitleCache
PUBLIC	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >
PUBLIC	??1?$StringMap@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??1?$StringMapW@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??1SubRectAllocator@ssf@@QAE@XZ			; ssf::SubRectAllocator::~SubRectAllocator
PUBLIC	??_GRenderer@ssf@@UAEPAXI@Z			; ssf::Renderer::`scalar deleting destructor'
PUBLIC	?GetNextKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@2@AAPAU__POSITION@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNextKey
PUBLIC	?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEPAVCPair@12@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::Lookup
PUBLIC	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::GetNode
PUBLIC	??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@IAE@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CPair::CPair
PUBLIC	??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@PB_WI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::CNode
PUBLIC	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::NewNode
PUBLIC	?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CreateNode
PUBLIC	??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEAA_NPB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::operator[]
PUBLIC	?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXMMM_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::SetOptimalLoad
PUBLIC	??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@IMMMI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >
PUBLIC	??0?$StringMap@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??0?$StringMapW@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::EnableAutoRehash
PUBLIC	?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::DisableAutoRehash
PUBLIC	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::InitHashTable
PUBLIC	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::UpdateRehashThresholds
PUBLIC	?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QBEIXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::GetHash
PUBLIC	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::Rehash
PUBLIC	?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABE_NXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::IsLocked
PUBLIC	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::PickSize
PUBLIC	??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CPair::~CPair
PUBLIC	??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::~CNode
PUBLIC	??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEPAXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::`scalar deleting destructor'
PUBLIC	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::FreeNode
PUBLIC	?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::FreePlexes
PUBLIC	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::RemoveAll
PUBLIC	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >
PUBLIC	??1?$StringMap@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	??1?$StringMapW@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ; ssf::StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
PUBLIC	?GetNext@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QBEABV?$CAutoPtr@VSubtitle@ssf@@@2@AAPAU__POSITION@@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::GetNext
PUBLIC	??YCPoint@@QAEXUtagSIZE@@@Z			; CPoint::operator+=
PUBLIC	?InflateRect@CRect@@QAEXHH@Z			; CRect::InflateRect
PUBLIC	?Append@?$CAtlArray@EV?$CElementTraits@E@ATL@@@ATL@@QAEIABV12@@Z ; ATL::CAtlArray<unsigned char,ATL::CElementTraits<unsigned char> >::Append
PUBLIC	?CopyElements@?$CElementTraitsBase@UtagPOINT@@@ATL@@SAXPAUtagPOINT@@PBU3@I@Z ; ATL::CElementTraitsBase<tagPOINT>::CopyElements
PUBLIC	?Append@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEIABV12@@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::Append
PUBLIC	??BFontWrapper@ssf@@QBEPAUHFONT__@@XZ		; ssf::FontWrapper::operator HFONT__ *
PUBLIC	?GetTextMetric@FontWrapper@ssf@@QAEABUtagTEXTMETRICW@@XZ ; ssf::FontWrapper::GetTextMetric
PUBLIC	??4Background@ssf@@QAEAAU01@ABU01@@Z		; ssf::Background::operator=
PUBLIC	?CopyElements@?$CElementTraitsBase@UPoint@ssf@@@ATL@@SAXPAUPoint@ssf@@PBU34@I@Z ; ATL::CElementTraitsBase<ssf::Point>::CopyElements
PUBLIC	?RelocateElements@?$CElementTraitsBase@UPoint@ssf@@@ATL@@SAXPAUPoint@ssf@@0I@Z ; ATL::CElementTraitsBase<ssf::Point>::RelocateElements
PUBLIC	?GrowBuffer@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@AAE_NI@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::GrowBuffer
PUBLIC	?CallConstructors@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@CAXPAUPoint@ssf@@I@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::CallConstructors
PUBLIC	?SetCount@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAE_NIH@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::SetCount
PUBLIC	?Copy@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAEXABV12@@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::Copy
PUBLIC	??4Path@ssf@@QAEAAV01@ABV01@@Z			; ssf::Path::operator=
PUBLIC	??4Placement@ssf@@QAEAAU01@ABU01@@Z		; ssf::Placement::operator=
PUBLIC	??4Font@ssf@@QAEAAU01@ABU01@@Z			; ssf::Font::operator=
PUBLIC	??4Style@ssf@@QAEAAU01@ABU01@@Z			; ssf::Style::operator=
PUBLIC	?IsEmpty@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBE_NXZ ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::IsEmpty
PUBLIC	?GetHead@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@XZ ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetHead
PUBLIC	?GetHeadPosition@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEPAU__POSITION@@XZ ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetHeadPosition
PUBLIC	?GetNext@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@AAPAU__POSITION@@@Z ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetNext
PUBLIC	?GetAt@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@PAU__POSITION@@@Z ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetAt
PUBLIC	?IsEmpty@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBE_NXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::IsEmpty
PUBLIC	?GetHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetHead
PUBLIC	?GetTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetTail
PUBLIC	?RemoveHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE?AV?$CAutoPtr@VGlyph@ssf@@@2@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveHead
PUBLIC	?RemoveTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE?AV?$CAutoPtr@VGlyph@ssf@@@2@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveTail
PUBLIC	?RemoveHeadNoReturn@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveHeadNoReturn
PUBLIC	?AddTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::AddTail
PUBLIC	?GetPrev@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetPrev
PUBLIC	??0Row@ssf@@QAE@XZ				; ssf::Row::Row
PUBLIC	??0?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@I@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >
PUBLIC	??0?$CAutoPtrList@VGlyph@ssf@@@ATL@@QAE@I@Z	; ATL::CAutoPtrList<ssf::Glyph>::CAutoPtrList<ssf::Glyph>
PUBLIC	??1RenderedSubtitle@ssf@@UAE@XZ			; ssf::RenderedSubtitle::~RenderedSubtitle
PUBLIC	??_GRenderedSubtitle@ssf@@UAEPAXI@Z		; ssf::RenderedSubtitle::`scalar deleting destructor'
PUBLIC	??0RenderedSubtitle@ssf@@QAE@ABVCRect@@0@Z	; ssf::RenderedSubtitle::RenderedSubtitle
PUBLIC	?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Lookup
PUBLIC	?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreePlexes
PUBLIC	??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::~CNode
PUBLIC	??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEPAXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::`scalar deleting destructor'
PUBLIC	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreeNode
PUBLIC	?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveNode
PUBLIC	?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NPB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveKey
PUBLIC	?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::RenderedSubtitle *>::Flush
PUBLIC	?Add@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVRenderedSubtitle@2@_N@Z ; ssf::Cache<ssf::RenderedSubtitle *>::Add
PUBLIC	?Lookup@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAE_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVRenderedSubtitle@2@@Z ; ssf::Cache<ssf::RenderedSubtitle *>::Lookup
PUBLIC	?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBE_NPB_WAAPAVRenderedSubtitle@ssf@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Lookup
PUBLIC	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
PUBLIC	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::InitHashTable
PUBLIC	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::UpdateRehashThresholds
PUBLIC	?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBEIXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::GetHash
PUBLIC	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Rehash
PUBLIC	?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABE_NXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::IsLocked
PUBLIC	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::PickSize
PUBLIC	??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@IAE@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CPair::CPair
PUBLIC	??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CPair::~CPair
PUBLIC	??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@PB_WI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::CNode
PUBLIC	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::NewNode
PUBLIC	?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CreateNode
PUBLIC	??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEAAPAVRenderedSubtitle@ssf@@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::operator[]
PUBLIC	?Invalidate@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; ssf::Cache<ssf::RenderedSubtitle *>::Invalidate
PUBLIC	??$wcscpy_s@$0CA@@@YAHAAY0CA@_WPB_W@Z		; wcscpy_s<32>
PUBLIC	??0?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@PAVGlyph@ssf@@@Z ; ATL::CAutoPtr<ssf::Glyph>::CAutoPtr<ssf::Glyph>
PUBLIC	??C?$CAutoPtr@VGlyph@ssf@@@ATL@@QBEPAVGlyph@ssf@@XZ ; ATL::CAutoPtr<ssf::Glyph>::operator->
PUBLIC	?IsEmpty@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QBE_NXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::IsEmpty
PUBLIC	?GetHead@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetHead
PUBLIC	?GetTail@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetTail
PUBLIC	?AddTail@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VRow@ssf@@@2@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::AddTail
PUBLIC	?InsertBefore@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@PAU3@AAV?$CAutoPtr@VRow@ssf@@@2@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::InsertBefore
PUBLIC	??0?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@I@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >
PUBLIC	??0?$CAutoPtrList@VRow@ssf@@@ATL@@QAE@I@Z	; ATL::CAutoPtrList<ssf::Row>::CAutoPtrList<ssf::Row>
PUBLIC	??1?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::~CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >
PUBLIC	??1?$CAutoPtrList@VRow@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtrList<ssf::Row>::~CAutoPtrList<ssf::Row>
PUBLIC	??0?$CAutoPtr@VRow@ssf@@@ATL@@QAE@XZ		; ATL::CAutoPtr<ssf::Row>::CAutoPtr<ssf::Row>
PUBLIC	??B?$CAutoPtr@VRow@ssf@@@ATL@@QBEPAVRow@ssf@@XZ	; ATL::CAutoPtr<ssf::Row>::operator ssf::Row *
PUBLIC	??C?$CAutoPtr@VRow@ssf@@@ATL@@QBEPAVRow@ssf@@XZ	; ATL::CAutoPtr<ssf::Row>::operator->
PUBLIC	?Attach@?$CAutoPtr@VRow@ssf@@@ATL@@QAEXPAVRow@ssf@@@Z ; ATL::CAutoPtr<ssf::Row>::Attach
PUBLIC	??0?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@I@Z ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >
PUBLIC	?IsEmpty@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QBE_NXZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::IsEmpty
PUBLIC	?RemoveTail@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAVGlyph@ssf@@XZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::RemoveTail
PUBLIC	?GetFreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXXZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::GetFreeNode
PUBLIC	??0CNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@ABQAVGlyph@ssf@@@Z ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CNode::CNode
PUBLIC	?NewNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEPAVCNode@12@ABQAVGlyph@ssf@@PAV312@1@Z ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::NewNode
PUBLIC	?AddTail@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAU__POSITION@@ABQAVGlyph@ssf@@@Z ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::AddTail
PUBLIC	??1CNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@XZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CNode::~CNode
PUBLIC	??_GCNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAXI@Z ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CNode::`scalar deleting destructor'
PUBLIC	?FreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::FreeNode
PUBLIC	?RemoveAll@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEXXZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::RemoveAll
PUBLIC	??1?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@XZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::~CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >
PUBLIC	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetFreeNode
PUBLIC	?Detach@?$CAutoPtr@VRow@ssf@@@ATL@@QAEPAVRow@ssf@@XZ ; ATL::CAutoPtr<ssf::Row>::Detach
PUBLIC	??0?$CAutoPtr@VRow@ssf@@@ATL@@QAE@AAV01@@Z	; ATL::CAutoPtr<ssf::Row>::CAutoPtr<ssf::Row>
PUBLIC	??0CNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@AAV?$CAutoPtr@VRow@ssf@@@2@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CNode::CNode
PUBLIC	?NewNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEPAVCNode@12@AAV?$CAutoPtr@VRow@ssf@@@2@PAV312@1@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::NewNode
PUBLIC	?AddHead@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VRow@ssf@@@2@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::AddHead
PUBLIC	?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetHeadPosition
PUBLIC	?GetNext@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@AAPAU__POSITION@@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetNext
PUBLIC	?GetAt@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@PAU__POSITION@@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetAt
PUBLIC	?RemoveAll@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAll
PUBLIC	??1?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::~CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >
PUBLIC	??1?$CAutoPtrList@VGlyph@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtrList<ssf::Glyph>::~CAutoPtrList<ssf::Glyph>
PUBLIC	??1Row@ssf@@QAE@XZ				; ssf::Row::~Row
PUBLIC	??_GRow@ssf@@QAEPAXI@Z				; ssf::Row::`scalar deleting destructor'
PUBLIC	?Free@?$CAutoPtr@VRow@ssf@@@ATL@@QAEXXZ		; ATL::CAutoPtr<ssf::Row>::Free
PUBLIC	??1?$CAutoPtr@VRow@ssf@@@ATL@@QAE@XZ		; ATL::CAutoPtr<ssf::Row>::~CAutoPtr<ssf::Row>
PUBLIC	??1CNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CNode::~CNode
PUBLIC	??_GCNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAXI@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CNode::`scalar deleting destructor'
PUBLIC	?FreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::FreeNode
PUBLIC	?RemoveAt@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAt
PUBLIC	??$ReverseList@V?$CAutoPtrList@VRow@ssf@@@ATL@@@ssf@@YAXAAV?$CAutoPtrList@VRow@ssf@@@ATL@@@Z ; ssf::ReverseList<ATL::CAutoPtrList<ssf::Row> >
PUBLIC	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode
PUBLIC	?Detach@?$CAutoPtr@VGlyph@ssf@@@ATL@@QAEPAVGlyph@ssf@@XZ ; ATL::CAutoPtr<ssf::Glyph>::Detach
PUBLIC	??0?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@AAV01@@Z	; ATL::CAutoPtr<ssf::Glyph>::CAutoPtr<ssf::Glyph>
PUBLIC	??0CNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CNode::CNode
PUBLIC	?NewNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEPAVCNode@12@AAV?$CAutoPtr@VGlyph@ssf@@@2@PAV312@1@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::NewNode
PUBLIC	?AddHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::AddHead
PUBLIC	?GetNext@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetNext
PUBLIC	?GetAt@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@PAU__POSITION@@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetAt
PUBLIC	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
PUBLIC	??1Background@ssf@@QAE@XZ			; ssf::Background::~Background
PUBLIC	?CallDestructors@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@CAXPAUPoint@ssf@@I@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::CallDestructors
PUBLIC	??1?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAE@XZ ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::~CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >
PUBLIC	??1Path@ssf@@QAE@XZ				; ssf::Path::~Path
PUBLIC	??1Placement@ssf@@QAE@XZ			; ssf::Placement::~Placement
PUBLIC	??1Font@ssf@@QAE@XZ				; ssf::Font::~Font
PUBLIC	??1Style@ssf@@QAE@XZ				; ssf::Style::~Style
PUBLIC	?CallDestructors@?$CAtlArray@USplineCoeffs@Glyph@ssf@@V?$CElementTraits@USplineCoeffs@Glyph@ssf@@@ATL@@@ATL@@CAXPAUSplineCoeffs@Glyph@ssf@@I@Z ; ATL::CAtlArray<ssf::Glyph::SplineCoeffs,ATL::CElementTraits<ssf::Glyph::SplineCoeffs> >::CallDestructors
PUBLIC	??1?$CAtlArray@USplineCoeffs@Glyph@ssf@@V?$CElementTraits@USplineCoeffs@Glyph@ssf@@@ATL@@@ATL@@QAE@XZ ; ATL::CAtlArray<ssf::Glyph::SplineCoeffs,ATL::CElementTraits<ssf::Glyph::SplineCoeffs> >::~CAtlArray<ssf::Glyph::SplineCoeffs,ATL::CElementTraits<ssf::Glyph::SplineCoeffs> >
PUBLIC	??1Glyph@ssf@@QAE@XZ				; ssf::Glyph::~Glyph
PUBLIC	??_GGlyph@ssf@@QAEPAXI@Z			; ssf::Glyph::`scalar deleting destructor'
PUBLIC	?Free@?$CAutoPtr@VGlyph@ssf@@@ATL@@QAEXXZ	; ATL::CAutoPtr<ssf::Glyph>::Free
PUBLIC	??1?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@XZ		; ATL::CAutoPtr<ssf::Glyph>::~CAutoPtr<ssf::Glyph>
PUBLIC	??1CNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CNode::~CNode
PUBLIC	??_GCNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAXI@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CNode::`scalar deleting destructor'
PUBLIC	?FreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::FreeNode
PUBLIC	?RemoveAt@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAt
PUBLIC	??$ReverseList@VRow@ssf@@@ssf@@YAXAAVRow@0@@Z	; ssf::ReverseList<ssf::Row>
PUBLIC	?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetHeadPosition
PUBLIC	?GetNext@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBEABV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetNext
PUBLIC	??B?$CAutoPtr@VGlyph@ssf@@@ATL@@QBEPAVGlyph@ssf@@XZ ; ATL::CAutoPtr<ssf::Glyph>::operator ssf::Glyph *
PUBLIC	?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::EnableAutoRehash
PUBLIC	?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::DisableAutoRehash
PUBLIC	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveAll
PUBLIC	?InflateRect@CRect@@QAEXHHHH@Z			; CRect::InflateRect
PUBLIC	?DeflateRect@CRect@@QAEXHHHH@Z			; CRect::DeflateRect
PUBLIC	??0SubRect@ssf@@QAE@ABVCRect@@M@Z		; ssf::SubRect::SubRect
PUBLIC	?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::Lookup
PUBLIC	?RemoveAtPos@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveAtPos
PUBLIC	??0SubRect@ssf@@QAE@XZ				; ssf::SubRect::SubRect
PUBLIC	??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@IAE@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CPair::CPair
PUBLIC	??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@PB_WI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::CNode
PUBLIC	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::NewNode
PUBLIC	?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CreateNode
PUBLIC	?SetAt@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAU__POSITION@@PB_WABVSubRect@ssf@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::SetAt
PUBLIC	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNode
PUBLIC	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::InitHashTable
PUBLIC	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::UpdateRehashThresholds
PUBLIC	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::Rehash
PUBLIC	?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABE_NXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::IsLocked
PUBLIC	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::PickSize
PUBLIC	?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreePlexes
PUBLIC	??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CPair::~CPair
PUBLIC	??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::~CNode
PUBLIC	??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::`scalar deleting destructor'
PUBLIC	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode
PUBLIC	?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveNode
PUBLIC	?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NPB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveKey
PUBLIC	?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBE_NXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::IsEmpty
PUBLIC	?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetStartPosition
PUBLIC	?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEIXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::GetHash
PUBLIC	?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FindNextNode
PUBLIC	?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEAAVSubRect@ssf@@AAPAU__POSITION@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNextValue
PUBLIC	?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBE_NPB_WAAPAVFontWrapper@ssf@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Lookup
PUBLIC	?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Lookup
PUBLIC	??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@IAE@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CPair::CPair
PUBLIC	??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@PB_WI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::CNode
PUBLIC	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::NewNode
PUBLIC	?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CreateNode
PUBLIC	??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEAAPAVFontWrapper@ssf@@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::operator[]
PUBLIC	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode
PUBLIC	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::InitHashTable
PUBLIC	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::UpdateRehashThresholds
PUBLIC	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Rehash
PUBLIC	?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABE_NXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::IsLocked
PUBLIC	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::PickSize
PUBLIC	?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreePlexes
PUBLIC	??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CPair::~CPair
PUBLIC	??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::~CNode
PUBLIC	??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEPAXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::`scalar deleting destructor'
PUBLIC	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreeNode
PUBLIC	?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBEIXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::GetHash
PUBLIC	?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveNode
PUBLIC	?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NPB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveKey
PUBLIC	?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ	; ssf::Cache<ssf::FontWrapper *>::Flush
PUBLIC	?Add@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVFontWrapper@2@_N@Z ; ssf::Cache<ssf::FontWrapper *>::Add
PUBLIC	??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z ; ATL::operator+
PUBLIC	??0?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE@XZ ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >
PUBLIC	??1?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE@XZ ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::~CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >
PUBLIC	??1GlyphPath@ssf@@UAE@XZ			; ssf::GlyphPath::~GlyphPath
PUBLIC	??_GGlyphPath@ssf@@UAEPAXI@Z			; ssf::GlyphPath::`scalar deleting destructor'
PUBLIC	??0GlyphPath@ssf@@QAE@XZ			; ssf::GlyphPath::GlyphPath
PUBLIC	?RelocateElements@?$CElementTraitsBase@UtagPOINT@@@ATL@@SAXPAUtagPOINT@@0I@Z ; ATL::CElementTraitsBase<tagPOINT>::RelocateElements
PUBLIC	?GrowBuffer@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@AAE_NI@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::GrowBuffer
PUBLIC	?CallConstructors@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@CAXPAUtagPOINT@@I@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CallConstructors
PUBLIC	?CallDestructors@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@CAXPAUtagPOINT@@I@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CallDestructors
PUBLIC	?SetCount@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE_NIH@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::SetCount
PUBLIC	?GetData@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEPAUtagPOINT@@XZ ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::GetData
PUBLIC	??BFontWrapper@ssf@@QBEPB_WXZ			; ssf::FontWrapper::operator wchar_t const *
PUBLIC	?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBE_NPB_WAAPAVGlyphPath@ssf@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Lookup
PUBLIC	?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Lookup
PUBLIC	??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@IAE@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CPair::CPair
PUBLIC	??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@PB_WI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::CNode
PUBLIC	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::NewNode
PUBLIC	?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CreateNode
PUBLIC	??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEAAPAVGlyphPath@ssf@@PB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::operator[]
PUBLIC	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode
PUBLIC	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::InitHashTable
PUBLIC	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::UpdateRehashThresholds
PUBLIC	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Rehash
PUBLIC	?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABE_NXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::IsLocked
PUBLIC	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::PickSize
PUBLIC	?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreePlexes
PUBLIC	??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CPair::~CPair
PUBLIC	??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::~CNode
PUBLIC	??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEPAXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::`scalar deleting destructor'
PUBLIC	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreeNode
PUBLIC	?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBEIXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::GetHash
PUBLIC	?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveNode
PUBLIC	?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NPB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveKey
PUBLIC	?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ	; ssf::Cache<ssf::GlyphPath *>::Flush
PUBLIC	?Add@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVGlyphPath@2@_N@Z ; ssf::Cache<ssf::GlyphPath *>::Add
PUBLIC	??_C@_19GMDMNN@?$AAd?$AAo?$AAw?$AAn?$AA?$AA@	; `string'
PUBLIC	??_C@_15HOONGCLC@?$AAu?$AAp?$AA?$AA@		; `string'
PUBLIC	??_C@_19MCEENOHD@?$AAe?$AAv?$AAe?$AAn?$AA?$AA@	; `string'
PUBLIC	??_C@_19CHDFCHBM@?$AAc?$AAh?$AAa?$AAr?$AA?$AA@	; `string'
PUBLIC	??_C@_19PDIFHHOB@?$AAw?$AAo?$AAr?$AAd?$AA?$AA@	; `string'
PUBLIC	??_C@_1BA@NHBGAPMB@?$AAo?$AAu?$AAt?$AAl?$AAi?$AAn?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@PDBLNOGL@?$AAe?$AAn?$AAl?$AAa?$AAr?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_17FPDKLCKM@?$AAb?$AAo?$AAx?$AA?$AA@	; `string'
PUBLIC	??_C@_1BI@PHGAHBDA@?$AA?$CF?$AAs?$AA?0?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$AA@ ; `string'
PUBLIC	?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z@4QBIB ; `ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::PickSize'::`2'::s_anPrimes
PUBLIC	?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z@4QBIB ; `ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::PickSize'::`2'::s_anPrimes
PUBLIC	?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z@4QBIB ; `ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::PickSize'::`2'::s_anPrimes
PUBLIC	?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z@4QBIB ; `ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::PickSize'::`2'::s_anPrimes
PUBLIC	?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z@4QBIB ; `ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::PickSize'::`2'::s_anPrimes
PUBLIC	??_7GlyphPath@ssf@@6B@				; ssf::GlyphPath::`vftable'
PUBLIC	??_7FontCache@ssf@@6B@				; ssf::FontCache::`vftable'
PUBLIC	??_7?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@	; ssf::Cache<ssf::FontWrapper *>::`vftable'
PUBLIC	??_7GlyphPathCache@ssf@@6B@			; ssf::GlyphPathCache::`vftable'
PUBLIC	??_7?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@		; ssf::Cache<ssf::GlyphPath *>::`vftable'
PUBLIC	??_7RenderedSubtitle@ssf@@6B@			; ssf::RenderedSubtitle::`vftable'
PUBLIC	??_7RenderedSubtitleCache@ssf@@6B@		; ssf::RenderedSubtitleCache::`vftable'
PUBLIC	??_7?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@	; ssf::Cache<ssf::RenderedSubtitle *>::`vftable'
PUBLIC	??_7Renderer@ssf@@6B@				; ssf::Renderer::`vftable'
EXTRN	??_EFontCache@ssf@@UAEPAXI@Z:PROC		; ssf::FontCache::`vector deleting destructor'
EXTRN	??_EGlyphPathCache@ssf@@UAEPAXI@Z:PROC		; ssf::GlyphPathCache::`vector deleting destructor'
EXTRN	??_ERenderedSubtitleCache@ssf@@UAEPAXI@Z:PROC	; ssf::RenderedSubtitleCache::`vector deleting destructor'
EXTRN	??_E?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z:PROC ; ssf::Cache<ssf::FontWrapper *>::`vector deleting destructor'
EXTRN	??_E?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z:PROC ; ssf::Cache<ssf::GlyphPath *>::`vector deleting destructor'
EXTRN	??_E?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z:PROC ; ssf::Cache<ssf::RenderedSubtitle *>::`vector deleting destructor'
EXTRN	??_ERenderer@ssf@@UAEPAXI@Z:PROC		; ssf::Renderer::`vector deleting destructor'
EXTRN	??_ERenderedSubtitle@ssf@@UAEPAXI@Z:PROC	; ssf::RenderedSubtitle::`vector deleting destructor'
EXTRN	??_EGlyphPath@ssf@@UAEPAXI@Z:PROC		; ssf::GlyphPath::`vector deleting destructor'
;	COMDAT ??_7Renderer@ssf@@6B@
CONST	SEGMENT
??_7Renderer@ssf@@6B@ DD FLAT:??_R4Renderer@ssf@@6B@	; ssf::Renderer::`vftable'
	DD	FLAT:??_ERenderer@ssf@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4Renderer@ssf@@6B@
rdata$r	SEGMENT
??_R4Renderer@ssf@@6B@ DD 00H				; ssf::Renderer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRenderer@ssf@@@8
	DD	FLAT:??_R3Renderer@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R3Renderer@ssf@@8
rdata$r	SEGMENT
??_R3Renderer@ssf@@8 DD 00H				; ssf::Renderer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Renderer@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R2Renderer@ssf@@8
rdata$r	SEGMENT
??_R2Renderer@ssf@@8 DD FLAT:??_R1A@?0A@EA@Renderer@ssf@@8 ; ssf::Renderer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Renderer@ssf@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Renderer@ssf@@8 DD FLAT:??_R0?AVRenderer@ssf@@@8 ; ssf::Renderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Renderer@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRenderer@ssf@@@8
_DATA	SEGMENT
??_R0?AVRenderer@ssf@@@8 DD FLAT:??_7type_info@@6B@	; ssf::Renderer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRenderer@ssf@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@
CONST	SEGMENT
??_7?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@ DD FLAT:??_R4?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@ ; ssf::Cache<ssf::RenderedSubtitle *>::`vftable'
	DD	FLAT:??_E?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@
rdata$r	SEGMENT
??_R4?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@ DD 00H	; ssf::Cache<ssf::RenderedSubtitle *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@@8
	DD	FLAT:??_R3?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_7RenderedSubtitleCache@ssf@@6B@
CONST	SEGMENT
??_7RenderedSubtitleCache@ssf@@6B@ DD FLAT:??_R4RenderedSubtitleCache@ssf@@6B@ ; ssf::RenderedSubtitleCache::`vftable'
	DD	FLAT:??_ERenderedSubtitleCache@ssf@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4RenderedSubtitleCache@ssf@@6B@
rdata$r	SEGMENT
??_R4RenderedSubtitleCache@ssf@@6B@ DD 00H		; ssf::RenderedSubtitleCache::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRenderedSubtitleCache@ssf@@@8
	DD	FLAT:??_R3RenderedSubtitleCache@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R3RenderedSubtitleCache@ssf@@8
rdata$r	SEGMENT
??_R3RenderedSubtitleCache@ssf@@8 DD 00H		; ssf::RenderedSubtitleCache::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RenderedSubtitleCache@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R2RenderedSubtitleCache@ssf@@8
rdata$r	SEGMENT
??_R2RenderedSubtitleCache@ssf@@8 DD FLAT:??_R1A@?0A@EA@RenderedSubtitleCache@ssf@@8 ; ssf::RenderedSubtitleCache::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8 DD FLAT:??_R0?AV?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@@8 ; ssf::Cache<ssf::RenderedSubtitle *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R3?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8
rdata$r	SEGMENT
??_R3?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8 DD 00H	; ssf::Cache<ssf::RenderedSubtitle *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8
rdata$r	SEGMENT
??_R2?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8 DD FLAT:??_R1A@?0A@EA@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@8 ; ssf::Cache<ssf::RenderedSubtitle *>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@@8
_DATA	SEGMENT
??_R0?AV?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@@8 DD FLAT:??_7type_info@@6B@ ; ssf::Cache<ssf::RenderedSubtitle *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@RenderedSubtitleCache@ssf@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RenderedSubtitleCache@ssf@@8 DD FLAT:??_R0?AVRenderedSubtitleCache@ssf@@@8 ; ssf::RenderedSubtitleCache::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RenderedSubtitleCache@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRenderedSubtitleCache@ssf@@@8
_DATA	SEGMENT
??_R0?AVRenderedSubtitleCache@ssf@@@8 DD FLAT:??_7type_info@@6B@ ; ssf::RenderedSubtitleCache `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRenderedSubtitleCache@ssf@@', 00H
_DATA	ENDS
;	COMDAT ??_7RenderedSubtitle@ssf@@6B@
CONST	SEGMENT
??_7RenderedSubtitle@ssf@@6B@ DD FLAT:??_R4RenderedSubtitle@ssf@@6B@ ; ssf::RenderedSubtitle::`vftable'
	DD	FLAT:??_ERenderedSubtitle@ssf@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4RenderedSubtitle@ssf@@6B@
rdata$r	SEGMENT
??_R4RenderedSubtitle@ssf@@6B@ DD 00H			; ssf::RenderedSubtitle::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRenderedSubtitle@ssf@@@8
	DD	FLAT:??_R3RenderedSubtitle@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R3RenderedSubtitle@ssf@@8
rdata$r	SEGMENT
??_R3RenderedSubtitle@ssf@@8 DD 00H			; ssf::RenderedSubtitle::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2RenderedSubtitle@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R2RenderedSubtitle@ssf@@8
rdata$r	SEGMENT
??_R2RenderedSubtitle@ssf@@8 DD FLAT:??_R1A@?0A@EA@RenderedSubtitle@ssf@@8 ; ssf::RenderedSubtitle::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RenderedSubtitle@ssf@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RenderedSubtitle@ssf@@8 DD FLAT:??_R0?AVRenderedSubtitle@ssf@@@8 ; ssf::RenderedSubtitle::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RenderedSubtitle@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRenderedSubtitle@ssf@@@8
_DATA	SEGMENT
??_R0?AVRenderedSubtitle@ssf@@@8 DD FLAT:??_7type_info@@6B@ ; ssf::RenderedSubtitle `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRenderedSubtitle@ssf@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@
CONST	SEGMENT
??_7?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@ DD FLAT:??_R4?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@ ; ssf::Cache<ssf::GlyphPath *>::`vftable'
	DD	FLAT:??_E?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@
rdata$r	SEGMENT
??_R4?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@ DD 00H		; ssf::Cache<ssf::GlyphPath *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$Cache@PAVGlyphPath@ssf@@@ssf@@@8
	DD	FLAT:??_R3?$Cache@PAVGlyphPath@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_7GlyphPathCache@ssf@@6B@
CONST	SEGMENT
??_7GlyphPathCache@ssf@@6B@ DD FLAT:??_R4GlyphPathCache@ssf@@6B@ ; ssf::GlyphPathCache::`vftable'
	DD	FLAT:??_EGlyphPathCache@ssf@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4GlyphPathCache@ssf@@6B@
rdata$r	SEGMENT
??_R4GlyphPathCache@ssf@@6B@ DD 00H			; ssf::GlyphPathCache::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGlyphPathCache@ssf@@@8
	DD	FLAT:??_R3GlyphPathCache@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R3GlyphPathCache@ssf@@8
rdata$r	SEGMENT
??_R3GlyphPathCache@ssf@@8 DD 00H			; ssf::GlyphPathCache::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2GlyphPathCache@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R2GlyphPathCache@ssf@@8
rdata$r	SEGMENT
??_R2GlyphPathCache@ssf@@8 DD FLAT:??_R1A@?0A@EA@GlyphPathCache@ssf@@8 ; ssf::GlyphPathCache::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$Cache@PAVGlyphPath@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$Cache@PAVGlyphPath@ssf@@@ssf@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Cache@PAVGlyphPath@ssf@@@ssf@@8 DD FLAT:??_R0?AV?$Cache@PAVGlyphPath@ssf@@@ssf@@@8 ; ssf::Cache<ssf::GlyphPath *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Cache@PAVGlyphPath@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R3?$Cache@PAVGlyphPath@ssf@@@ssf@@8
rdata$r	SEGMENT
??_R3?$Cache@PAVGlyphPath@ssf@@@ssf@@8 DD 00H		; ssf::Cache<ssf::GlyphPath *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Cache@PAVGlyphPath@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Cache@PAVGlyphPath@ssf@@@ssf@@8
rdata$r	SEGMENT
??_R2?$Cache@PAVGlyphPath@ssf@@@ssf@@8 DD FLAT:??_R1A@?0A@EA@?$Cache@PAVGlyphPath@ssf@@@ssf@@8 ; ssf::Cache<ssf::GlyphPath *>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Cache@PAVGlyphPath@ssf@@@ssf@@@8
_DATA	SEGMENT
??_R0?AV?$Cache@PAVGlyphPath@ssf@@@ssf@@@8 DD FLAT:??_7type_info@@6B@ ; ssf::Cache<ssf::GlyphPath *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Cache@PAVGlyphPath@ssf@@@ssf@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@GlyphPathCache@ssf@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GlyphPathCache@ssf@@8 DD FLAT:??_R0?AVGlyphPathCache@ssf@@@8 ; ssf::GlyphPathCache::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GlyphPathCache@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGlyphPathCache@ssf@@@8
_DATA	SEGMENT
??_R0?AVGlyphPathCache@ssf@@@8 DD FLAT:??_7type_info@@6B@ ; ssf::GlyphPathCache `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGlyphPathCache@ssf@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@
CONST	SEGMENT
??_7?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@ DD FLAT:??_R4?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@ ; ssf::Cache<ssf::FontWrapper *>::`vftable'
	DD	FLAT:??_E?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@
rdata$r	SEGMENT
??_R4?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@ DD 00H	; ssf::Cache<ssf::FontWrapper *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$Cache@PAVFontWrapper@ssf@@@ssf@@@8
	DD	FLAT:??_R3?$Cache@PAVFontWrapper@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_7FontCache@ssf@@6B@
CONST	SEGMENT
??_7FontCache@ssf@@6B@ DD FLAT:??_R4FontCache@ssf@@6B@	; ssf::FontCache::`vftable'
	DD	FLAT:??_EFontCache@ssf@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4FontCache@ssf@@6B@
rdata$r	SEGMENT
??_R4FontCache@ssf@@6B@ DD 00H				; ssf::FontCache::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFontCache@ssf@@@8
	DD	FLAT:??_R3FontCache@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R3FontCache@ssf@@8
rdata$r	SEGMENT
??_R3FontCache@ssf@@8 DD 00H				; ssf::FontCache::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2FontCache@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R2FontCache@ssf@@8
rdata$r	SEGMENT
??_R2FontCache@ssf@@8 DD FLAT:??_R1A@?0A@EA@FontCache@ssf@@8 ; ssf::FontCache::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$Cache@PAVFontWrapper@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$Cache@PAVFontWrapper@ssf@@@ssf@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Cache@PAVFontWrapper@ssf@@@ssf@@8 DD FLAT:??_R0?AV?$Cache@PAVFontWrapper@ssf@@@ssf@@@8 ; ssf::Cache<ssf::FontWrapper *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Cache@PAVFontWrapper@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R3?$Cache@PAVFontWrapper@ssf@@@ssf@@8
rdata$r	SEGMENT
??_R3?$Cache@PAVFontWrapper@ssf@@@ssf@@8 DD 00H		; ssf::Cache<ssf::FontWrapper *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Cache@PAVFontWrapper@ssf@@@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Cache@PAVFontWrapper@ssf@@@ssf@@8
rdata$r	SEGMENT
??_R2?$Cache@PAVFontWrapper@ssf@@@ssf@@8 DD FLAT:??_R1A@?0A@EA@?$Cache@PAVFontWrapper@ssf@@@ssf@@8 ; ssf::Cache<ssf::FontWrapper *>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Cache@PAVFontWrapper@ssf@@@ssf@@@8
_DATA	SEGMENT
??_R0?AV?$Cache@PAVFontWrapper@ssf@@@ssf@@@8 DD FLAT:??_7type_info@@6B@ ; ssf::Cache<ssf::FontWrapper *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Cache@PAVFontWrapper@ssf@@@ssf@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@FontCache@ssf@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FontCache@ssf@@8 DD FLAT:??_R0?AVFontCache@ssf@@@8 ; ssf::FontCache::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FontCache@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFontCache@ssf@@@8
_DATA	SEGMENT
??_R0?AVFontCache@ssf@@@8 DD FLAT:??_7type_info@@6B@	; ssf::FontCache `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFontCache@ssf@@', 00H
_DATA	ENDS
;	COMDAT ??_7GlyphPath@ssf@@6B@
CONST	SEGMENT
??_7GlyphPath@ssf@@6B@ DD FLAT:??_R4GlyphPath@ssf@@6B@	; ssf::GlyphPath::`vftable'
	DD	FLAT:??_EGlyphPath@ssf@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4GlyphPath@ssf@@6B@
rdata$r	SEGMENT
??_R4GlyphPath@ssf@@6B@ DD 00H				; ssf::GlyphPath::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGlyphPath@ssf@@@8
	DD	FLAT:??_R3GlyphPath@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R3GlyphPath@ssf@@8
rdata$r	SEGMENT
??_R3GlyphPath@ssf@@8 DD 00H				; ssf::GlyphPath::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2GlyphPath@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R2GlyphPath@ssf@@8
rdata$r	SEGMENT
??_R2GlyphPath@ssf@@8 DD FLAT:??_R1A@?0A@EA@GlyphPath@ssf@@8 ; ssf::GlyphPath::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GlyphPath@ssf@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GlyphPath@ssf@@8 DD FLAT:??_R0?AVGlyphPath@ssf@@@8 ; ssf::GlyphPath::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GlyphPath@ssf@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGlyphPath@ssf@@@8
_DATA	SEGMENT
??_R0?AVGlyphPath@ssf@@@8 DD FLAT:??_7type_info@@6B@	; ssf::GlyphPath `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGlyphPath@ssf@@', 00H
_DATA	ENDS
;	COMDAT ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z@4QBIB
CONST	SEGMENT
?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z@4QBIB DD 011H ; `ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::PickSize'::`2'::s_anPrimes
	DD	017H
	DD	01dH
	DD	025H
	DD	029H
	DD	035H
	DD	043H
	DD	053H
	DD	067H
	DD	083H
	DD	0a3H
	DD	0d3H
	DD	0101H
	DD	014bH
	DD	0199H
	DD	0209H
	DD	0287H
	DD	0335H
	DD	0407H
	DD	050bH
	DD	065bH
	DD	0805H
	DD	0a1fH
	DD	0cb3H
	DD	01003H
	DD	0142fH
	DD	01979H
	DD	02011H
	DD	0285bH
	DD	032cfH
	DD	0401bH
	DD	050b7H
	DD	065a1H
	DD	08003H
	DD	0a153H
	DD	0cb35H
	DD	010001H
	DD	01428bH
	DD	019661H
	DD	02001dH
	DD	028529H
	DD	032cc3H
	DD	040003H
	DD	050a2fH
	DD	065993H
	DD	080015H
	DD	0a1453H
	DD	0cb323H
	DD	0100007H
	DD	01428b3H
	DD	019661fH
	DD	0200011H
	DD	0285151H
	DD	032cbffH
	DD	040000fH
	DD	050a28dH
	DD	0659801H
	DD	0800009H
	DD	0a14521H
	DD	0cb2ff9H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z@4QBIB
CONST	SEGMENT
?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z@4QBIB DD 011H ; `ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::PickSize'::`2'::s_anPrimes
	DD	017H
	DD	01dH
	DD	025H
	DD	029H
	DD	035H
	DD	043H
	DD	053H
	DD	067H
	DD	083H
	DD	0a3H
	DD	0d3H
	DD	0101H
	DD	014bH
	DD	0199H
	DD	0209H
	DD	0287H
	DD	0335H
	DD	0407H
	DD	050bH
	DD	065bH
	DD	0805H
	DD	0a1fH
	DD	0cb3H
	DD	01003H
	DD	0142fH
	DD	01979H
	DD	02011H
	DD	0285bH
	DD	032cfH
	DD	0401bH
	DD	050b7H
	DD	065a1H
	DD	08003H
	DD	0a153H
	DD	0cb35H
	DD	010001H
	DD	01428bH
	DD	019661H
	DD	02001dH
	DD	028529H
	DD	032cc3H
	DD	040003H
	DD	050a2fH
	DD	065993H
	DD	080015H
	DD	0a1453H
	DD	0cb323H
	DD	0100007H
	DD	01428b3H
	DD	019661fH
	DD	0200011H
	DD	0285151H
	DD	032cbffH
	DD	040000fH
	DD	050a28dH
	DD	0659801H
	DD	0800009H
	DD	0a14521H
	DD	0cb2ff9H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z@4QBIB
CONST	SEGMENT
?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z@4QBIB DD 011H ; `ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::PickSize'::`2'::s_anPrimes
	DD	017H
	DD	01dH
	DD	025H
	DD	029H
	DD	035H
	DD	043H
	DD	053H
	DD	067H
	DD	083H
	DD	0a3H
	DD	0d3H
	DD	0101H
	DD	014bH
	DD	0199H
	DD	0209H
	DD	0287H
	DD	0335H
	DD	0407H
	DD	050bH
	DD	065bH
	DD	0805H
	DD	0a1fH
	DD	0cb3H
	DD	01003H
	DD	0142fH
	DD	01979H
	DD	02011H
	DD	0285bH
	DD	032cfH
	DD	0401bH
	DD	050b7H
	DD	065a1H
	DD	08003H
	DD	0a153H
	DD	0cb35H
	DD	010001H
	DD	01428bH
	DD	019661H
	DD	02001dH
	DD	028529H
	DD	032cc3H
	DD	040003H
	DD	050a2fH
	DD	065993H
	DD	080015H
	DD	0a1453H
	DD	0cb323H
	DD	0100007H
	DD	01428b3H
	DD	019661fH
	DD	0200011H
	DD	0285151H
	DD	032cbffH
	DD	040000fH
	DD	050a28dH
	DD	0659801H
	DD	0800009H
	DD	0a14521H
	DD	0cb2ff9H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z@4QBIB
CONST	SEGMENT
?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z@4QBIB DD 011H ; `ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::PickSize'::`2'::s_anPrimes
	DD	017H
	DD	01dH
	DD	025H
	DD	029H
	DD	035H
	DD	043H
	DD	053H
	DD	067H
	DD	083H
	DD	0a3H
	DD	0d3H
	DD	0101H
	DD	014bH
	DD	0199H
	DD	0209H
	DD	0287H
	DD	0335H
	DD	0407H
	DD	050bH
	DD	065bH
	DD	0805H
	DD	0a1fH
	DD	0cb3H
	DD	01003H
	DD	0142fH
	DD	01979H
	DD	02011H
	DD	0285bH
	DD	032cfH
	DD	0401bH
	DD	050b7H
	DD	065a1H
	DD	08003H
	DD	0a153H
	DD	0cb35H
	DD	010001H
	DD	01428bH
	DD	019661H
	DD	02001dH
	DD	028529H
	DD	032cc3H
	DD	040003H
	DD	050a2fH
	DD	065993H
	DD	080015H
	DD	0a1453H
	DD	0cb323H
	DD	0100007H
	DD	01428b3H
	DD	019661fH
	DD	0200011H
	DD	0285151H
	DD	032cbffH
	DD	040000fH
	DD	050a28dH
	DD	0659801H
	DD	0800009H
	DD	0a14521H
	DD	0cb2ff9H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z@4QBIB
CONST	SEGMENT
?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z@4QBIB DD 011H ; `ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::PickSize'::`2'::s_anPrimes
	DD	017H
	DD	01dH
	DD	025H
	DD	029H
	DD	035H
	DD	043H
	DD	053H
	DD	067H
	DD	083H
	DD	0a3H
	DD	0d3H
	DD	0101H
	DD	014bH
	DD	0199H
	DD	0209H
	DD	0287H
	DD	0335H
	DD	0407H
	DD	050bH
	DD	065bH
	DD	0805H
	DD	0a1fH
	DD	0cb3H
	DD	01003H
	DD	0142fH
	DD	01979H
	DD	02011H
	DD	0285bH
	DD	032cfH
	DD	0401bH
	DD	050b7H
	DD	065a1H
	DD	08003H
	DD	0a153H
	DD	0cb35H
	DD	010001H
	DD	01428bH
	DD	019661H
	DD	02001dH
	DD	028529H
	DD	032cc3H
	DD	040003H
	DD	050a2fH
	DD	065993H
	DD	080015H
	DD	0a1453H
	DD	0cb323H
	DD	0100007H
	DD	01428b3H
	DD	019661fH
	DD	0200011H
	DD	0285151H
	DD	032cbffH
	DD	040000fH
	DD	050a28dH
	DD	0659801H
	DD	0800009H
	DD	0a14521H
	DD	0cb2ff9H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ??_C@_1BI@PHGAHBDA@?$AA?$CF?$AAs?$AA?0?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@PHGAHBDA@?$AA?$CF?$AAs?$AA?0?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$AA@ DB '%'
	DB	00H, 's', 00H, ',', 00H, '%', 00H, 'd', 00H, ',', 00H, '%', 00H
	DB	'd', 00H, ',', 00H, '%', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17FPDKLCKM@?$AAb?$AAo?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_17FPDKLCKM@?$AAb?$AAo?$AAx?$AA?$AA@ DB 'b', 00H, 'o', 00H, 'x', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@PDBLNOGL@?$AAe?$AAn?$AAl?$AAa?$AAr?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@PDBLNOGL@?$AAe?$AAn?$AAl?$AAa?$AAr?$AAg?$AAe?$AA?$AA@ DB 'e', 00H
	DB	'n', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@NHBGAPMB@?$AAo?$AAu?$AAt?$AAl?$AAi?$AAn?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@NHBGAPMB@?$AAo?$AAu?$AAt?$AAl?$AAi?$AAn?$AAe?$AA?$AA@ DB 'o', 00H
	DB	'u', 00H, 't', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_19PDIFHHOB@?$AAw?$AAo?$AAr?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_19PDIFHHOB@?$AAw?$AAo?$AAr?$AAd?$AA?$AA@ DB 'w', 00H, 'o', 00H, 'r', 00H
	DB	'd', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19CHDFCHBM@?$AAc?$AAh?$AAa?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_19CHDFCHBM@?$AAc?$AAh?$AAa?$AAr?$AA?$AA@ DB 'c', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19MCEENOHD@?$AAe?$AAv?$AAe?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_19MCEENOHD@?$AAe?$AAv?$AAe?$AAn?$AA?$AA@ DB 'e', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_15HOONGCLC@?$AAu?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_15HOONGCLC@?$AAu?$AAp?$AA?$AA@ DB 'u', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_19GMDMNN@?$AAd?$AAo?$AAw?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_19GMDMNN@?$AAd?$AAo?$AAw?$AAn?$AA?$AA@ DB 'd', 00H, 'o', 00H, 'w', 00H
	DB	'n', 00H, 00H, 00H				; `string'
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atltypes.inl
;	COMDAT ??YCPoint@@QAEXUtagSIZE@@@Z
_TEXT	SEGMENT
_size$ = 8						; size = 8
??YCPoint@@QAEXUtagSIZE@@@Z PROC			; CPoint::operator+=, COMDAT
; _this$ = eax

; 193  : {

	push	ebp
	mov	ebp, esp

; 194  : 	x += size.cx;

	mov	ecx, DWORD PTR _size$[ebp]

; 195  : 	y += size.cy;

	mov	edx, DWORD PTR _size$[ebp+4]
	add	DWORD PTR [eax], ecx
	add	DWORD PTR [eax+4], edx

; 196  : }

	pop	ebp
	ret	8
??YCPoint@@QAEXUtagSIZE@@@Z ENDP			; CPoint::operator+=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?InflateRect@CRect@@QAEXHH@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?InflateRect@CRect@@QAEXHH@Z PROC			; CRect::InflateRect, COMDAT
; _this$ = ecx

; 411  : {

	push	ebp
	mov	ebp, esp

; 412  : 	::InflateRect(this, x, y);

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
	push	eax
	push	edx
	push	ecx
	call	DWORD PTR __imp__InflateRect@12

; 413  : }

	pop	ebp
	ret	8
?InflateRect@CRect@@QAEXHH@Z ENDP			; CRect::InflateRect
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?InflateRect@CRect@@QAEXHHHH@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_r$ = 12						; size = 4
_b$ = 16						; size = 4
?InflateRect@CRect@@QAEXHHHH@Z PROC			; CRect::InflateRect, COMDAT
; _this$ = eax
; _l$ = ecx

; 637  : {

	push	ebp
	mov	ebp, esp

; 638  : 	left -= l;
; 639  : 	top -= t;

	mov	edx, DWORD PTR _t$[ebp]
	sub	DWORD PTR [eax], ecx
	sub	DWORD PTR [eax+4], edx

; 640  : 	right += r;

	mov	ecx, DWORD PTR _r$[ebp]

; 641  : 	bottom += b;

	mov	edx, DWORD PTR _b$[ebp]
	add	DWORD PTR [eax+8], ecx
	add	DWORD PTR [eax+12], edx

; 642  : }

	pop	ebp
	ret	12					; 0000000cH
?InflateRect@CRect@@QAEXHHHH@Z ENDP			; CRect::InflateRect
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?DeflateRect@CRect@@QAEXHHHH@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_r$ = 12						; size = 4
_b$ = 16						; size = 4
?DeflateRect@CRect@@QAEXHHHH@Z PROC			; CRect::DeflateRect, COMDAT
; _this$ = eax
; _l$ = ecx

; 657  : {

	push	ebp
	mov	ebp, esp

; 658  : 	left += l;
; 659  : 	top += t;

	mov	edx, DWORD PTR _t$[ebp]
	add	DWORD PTR [eax], ecx
	add	DWORD PTR [eax+4], edx

; 660  : 	right -= r;

	mov	ecx, DWORD PTR _r$[ebp]

; 661  : 	bottom -= b;

	mov	edx, DWORD PTR _b$[ebp]
	sub	DWORD PTR [eax+8], ecx
	sub	DWORD PTR [eax+12], edx

; 662  : }

	pop	ebp
	ret	12					; 0000000cH
?DeflateRect@CRect@@QAEXHHHH@Z ENDP			; CRect::DeflateRect
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
_TEXT	ENDS
;	COMDAT ?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
tv143 = -12						; size = 8
tv136 = -12						; size = 8
tv153 = -8						; size = 4
tv145 = -8						; size = 4
tv138 = -8						; size = 4
tv131 = -4						; size = 4
tv150 = -2						; size = 2
tv141 = -2						; size = 2
?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::UpdateRehashThresholds, COMDAT
; _this$ = ecx

; 2587 : {

	push	ebp
	mov	ebp, esp

; 2588 : 	m_nHiRehashThreshold = size_t( m_fHiThreshold*m_nBins );

	mov	eax, DWORD PTR [ecx+8]
	fild	DWORD PTR [ecx+8]
	sub	esp, 12					; 0000000cH
	test	eax, eax
	jns	SHORT $LN4@UpdateReha
	fadd	DWORD PTR __real@4f800000
$LN4@UpdateReha:
	fstp	DWORD PTR tv131[ebp]
	fld	DWORD PTR [ecx+20]
	fld	DWORD PTR tv131[ebp]
	fnstcw	WORD PTR tv150[ebp]
	movzx	eax, WORD PTR tv150[ebp]
	fld	ST(0)
	or	eax, 3072				; 00000c00H
	fmulp	ST(2), ST(0)
	mov	DWORD PTR tv145[ebp], eax
	fxch	ST(1)
	fldcw	WORD PTR tv145[ebp]
	fistp	QWORD PTR tv143[ebp]
	mov	edx, DWORD PTR tv143[ebp]
	mov	DWORD PTR [ecx+24], edx
	fldcw	WORD PTR tv150[ebp]

; 2589 : 	m_nLoRehashThreshold = size_t( m_fLoThreshold*m_nBins );

	fmul	DWORD PTR [ecx+16]
	fnstcw	WORD PTR tv141[ebp]
	movzx	eax, WORD PTR tv141[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv138[ebp], eax
	fldcw	WORD PTR tv138[ebp]
	fistp	QWORD PTR tv136[ebp]
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR [ecx+28], eax
	fldcw	WORD PTR tv141[ebp]

; 2590 : 	if( m_nLoRehashThreshold < 17 )

	cmp	eax, 17					; 00000011H
	jae	SHORT $LN1@UpdateReha

; 2591 : 	{
; 2592 : 		m_nLoRehashThreshold = 0;

	mov	DWORD PTR [ecx+28], 0
$LN1@UpdateReha:

; 2593 : 	}
; 2594 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::UpdateRehashThresholds
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z
_TEXT	SEGMENT
tv195 = -12						; size = 8
tv202 = -8						; size = 4
tv197 = -8						; size = 4
tv200 = -2						; size = 2
?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::PickSize, COMDAT
; _this$ = ecx
; _nElements$ = eax

; 2415 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2416 : 	// List of primes such that s_anPrimes[i] is the smallest prime greater than 2^(5+i/3)
; 2417 : 	static const UINT s_anPrimes[] =
; 2418 : 	{
; 2419 : 		17, 23, 29, 37, 41, 53, 67, 83, 103, 131, 163, 211, 257, 331, 409, 521, 647, 821,
; 2420 : 		1031, 1291, 1627, 2053, 2591, 3251, 4099, 5167, 6521, 8209, 10331,
; 2421 : 		13007, 16411, 20663, 26017, 32771, 41299, 52021, 65537, 82571, 104033,
; 2422 : 		131101, 165161, 208067, 262147, 330287, 416147, 524309, 660563,
; 2423 : 		832291, 1048583, 1321139, 1664543, 2097169, 2642257, 3329023, 4194319,
; 2424 : 		5284493, 6658049, 8388617, 10568993, 13316089, UINT_MAX
; 2425 : 	};
; 2426 : 
; 2427 : 	size_t nBins = (size_t)(nElements/m_fOptimalLoad);

	mov	DWORD PTR tv202[ebp], eax
	fild	DWORD PTR tv202[ebp]
	test	eax, eax
	jns	SHORT $LN11@PickSize
	fadd	DWORD PTR __real@4f800000
$LN11@PickSize:
	fdiv	DWORD PTR [ecx+12]
	fnstcw	WORD PTR tv200[ebp]
	movzx	eax, WORD PTR tv200[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv197[ebp], eax
	fldcw	WORD PTR tv197[ebp]
	fistp	QWORD PTR tv195[ebp]
	mov	eax, DWORD PTR tv195[ebp]
	fldcw	WORD PTR tv200[ebp]

; 2428 : 	UINT nBinsEstimate = UINT(  UINT_MAX < nBins ? UINT_MAX : nBins );

	cmp	eax, -1
	jbe	SHORT $LN7@PickSize
	or	eax, -1
$LN7@PickSize:

; 2429 : 
; 2430 : 	// Find the smallest prime greater than our estimate
; 2431 : 	int iPrime = 0;

	xor	ecx, ecx

; 2432 : 	while( nBinsEstimate > s_anPrimes[iPrime] )

	cmp	eax, 17					; 00000011H
	jbe	SHORT $LN3@PickSize
$LL4@PickSize:

; 2433 : 	{
; 2434 : 		iPrime++;

	inc	ecx
	cmp	eax, DWORD PTR ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z@4QBIB[ecx*4]
	ja	SHORT $LL4@PickSize
$LN3@PickSize:

; 2435 : 	}
; 2436 : 
; 2437 : 	if( s_anPrimes[iPrime] == UINT_MAX )

	mov	ecx, DWORD PTR ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z@4QBIB[ecx*4]
	cmp	ecx, -1

; 2438 : 	{
; 2439 : 		return( nBinsEstimate );

	je	SHORT $LN1@PickSize

; 2440 : 	}
; 2441 : 	else
; 2442 : 	{
; 2443 : 		return( s_anPrimes[iPrime] );

	mov	eax, ecx
$LN1@PickSize:

; 2444 : 	}
; 2445 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::PickSize
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABE_NXZ
_TEXT	SEGMENT
?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABE_NXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::IsLocked, COMDAT
; _this$ = ecx

; 2410 : 	return( m_nLockCount != 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+32], eax
	setne	al

; 2411 : }

	ret	0
?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABE_NXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::IsLocked
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::DisableAutoRehash, COMDAT
; _this$ = eax

; 2397 : 	m_nLockCount++;

	inc	DWORD PTR [eax+32]

; 2398 : }

	ret	0
?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::DisableAutoRehash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::EnableAutoRehash, COMDAT
; _this$ = eax

; 2403 : 	ATLASSUME( m_nLockCount > 0 );
; 2404 : 	m_nLockCount--;

	dec	DWORD PTR [eax+32]

; 2405 : }

	ret	0
?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::EnableAutoRehash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
tv143 = -12						; size = 8
tv136 = -12						; size = 8
tv153 = -8						; size = 4
tv145 = -8						; size = 4
tv138 = -8						; size = 4
tv131 = -4						; size = 4
tv150 = -2						; size = 2
tv141 = -2						; size = 2
?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::UpdateRehashThresholds, COMDAT
; _this$ = ecx

; 2587 : {

	push	ebp
	mov	ebp, esp

; 2588 : 	m_nHiRehashThreshold = size_t( m_fHiThreshold*m_nBins );

	mov	eax, DWORD PTR [ecx+8]
	fild	DWORD PTR [ecx+8]
	sub	esp, 12					; 0000000cH
	test	eax, eax
	jns	SHORT $LN4@UpdateReha@2
	fadd	DWORD PTR __real@4f800000
$LN4@UpdateReha@2:
	fstp	DWORD PTR tv131[ebp]
	fld	DWORD PTR [ecx+20]
	fld	DWORD PTR tv131[ebp]
	fnstcw	WORD PTR tv150[ebp]
	movzx	eax, WORD PTR tv150[ebp]
	fld	ST(0)
	or	eax, 3072				; 00000c00H
	fmulp	ST(2), ST(0)
	mov	DWORD PTR tv145[ebp], eax
	fxch	ST(1)
	fldcw	WORD PTR tv145[ebp]
	fistp	QWORD PTR tv143[ebp]
	mov	edx, DWORD PTR tv143[ebp]
	mov	DWORD PTR [ecx+24], edx
	fldcw	WORD PTR tv150[ebp]

; 2589 : 	m_nLoRehashThreshold = size_t( m_fLoThreshold*m_nBins );

	fmul	DWORD PTR [ecx+16]
	fnstcw	WORD PTR tv141[ebp]
	movzx	eax, WORD PTR tv141[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv138[ebp], eax
	fldcw	WORD PTR tv138[ebp]
	fistp	QWORD PTR tv136[ebp]
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR [ecx+28], eax
	fldcw	WORD PTR tv141[ebp]

; 2590 : 	if( m_nLoRehashThreshold < 17 )

	cmp	eax, 17					; 00000011H
	jae	SHORT $LN1@UpdateReha@2

; 2591 : 	{
; 2592 : 		m_nLoRehashThreshold = 0;

	mov	DWORD PTR [ecx+28], 0
$LN1@UpdateReha@2:

; 2593 : 	}
; 2594 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::UpdateRehashThresholds
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
tv143 = -12						; size = 8
tv136 = -12						; size = 8
tv153 = -8						; size = 4
tv145 = -8						; size = 4
tv138 = -8						; size = 4
tv131 = -4						; size = 4
tv150 = -2						; size = 2
tv141 = -2						; size = 2
?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::UpdateRehashThresholds, COMDAT
; _this$ = ecx

; 2587 : {

	push	ebp
	mov	ebp, esp

; 2588 : 	m_nHiRehashThreshold = size_t( m_fHiThreshold*m_nBins );

	mov	eax, DWORD PTR [ecx+8]
	fild	DWORD PTR [ecx+8]
	sub	esp, 12					; 0000000cH
	test	eax, eax
	jns	SHORT $LN4@UpdateReha@3
	fadd	DWORD PTR __real@4f800000
$LN4@UpdateReha@3:
	fstp	DWORD PTR tv131[ebp]
	fld	DWORD PTR [ecx+20]
	fld	DWORD PTR tv131[ebp]
	fnstcw	WORD PTR tv150[ebp]
	movzx	eax, WORD PTR tv150[ebp]
	fld	ST(0)
	or	eax, 3072				; 00000c00H
	fmulp	ST(2), ST(0)
	mov	DWORD PTR tv145[ebp], eax
	fxch	ST(1)
	fldcw	WORD PTR tv145[ebp]
	fistp	QWORD PTR tv143[ebp]
	mov	edx, DWORD PTR tv143[ebp]
	mov	DWORD PTR [ecx+24], edx
	fldcw	WORD PTR tv150[ebp]

; 2589 : 	m_nLoRehashThreshold = size_t( m_fLoThreshold*m_nBins );

	fmul	DWORD PTR [ecx+16]
	fnstcw	WORD PTR tv141[ebp]
	movzx	eax, WORD PTR tv141[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv138[ebp], eax
	fldcw	WORD PTR tv138[ebp]
	fistp	QWORD PTR tv136[ebp]
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR [ecx+28], eax
	fldcw	WORD PTR tv141[ebp]

; 2590 : 	if( m_nLoRehashThreshold < 17 )

	cmp	eax, 17					; 00000011H
	jae	SHORT $LN1@UpdateReha@3

; 2591 : 	{
; 2592 : 		m_nLoRehashThreshold = 0;

	mov	DWORD PTR [ecx+28], 0
$LN1@UpdateReha@3:

; 2593 : 	}
; 2594 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::UpdateRehashThresholds
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
tv143 = -12						; size = 8
tv136 = -12						; size = 8
tv153 = -8						; size = 4
tv145 = -8						; size = 4
tv138 = -8						; size = 4
tv131 = -4						; size = 4
tv150 = -2						; size = 2
tv141 = -2						; size = 2
?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::UpdateRehashThresholds, COMDAT
; _this$ = ecx

; 2587 : {

	push	ebp
	mov	ebp, esp

; 2588 : 	m_nHiRehashThreshold = size_t( m_fHiThreshold*m_nBins );

	mov	eax, DWORD PTR [ecx+8]
	fild	DWORD PTR [ecx+8]
	sub	esp, 12					; 0000000cH
	test	eax, eax
	jns	SHORT $LN4@UpdateReha@4
	fadd	DWORD PTR __real@4f800000
$LN4@UpdateReha@4:
	fstp	DWORD PTR tv131[ebp]
	fld	DWORD PTR [ecx+20]
	fld	DWORD PTR tv131[ebp]
	fnstcw	WORD PTR tv150[ebp]
	movzx	eax, WORD PTR tv150[ebp]
	fld	ST(0)
	or	eax, 3072				; 00000c00H
	fmulp	ST(2), ST(0)
	mov	DWORD PTR tv145[ebp], eax
	fxch	ST(1)
	fldcw	WORD PTR tv145[ebp]
	fistp	QWORD PTR tv143[ebp]
	mov	edx, DWORD PTR tv143[ebp]
	mov	DWORD PTR [ecx+24], edx
	fldcw	WORD PTR tv150[ebp]

; 2589 : 	m_nLoRehashThreshold = size_t( m_fLoThreshold*m_nBins );

	fmul	DWORD PTR [ecx+16]
	fnstcw	WORD PTR tv141[ebp]
	movzx	eax, WORD PTR tv141[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv138[ebp], eax
	fldcw	WORD PTR tv138[ebp]
	fistp	QWORD PTR tv136[ebp]
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR [ecx+28], eax
	fldcw	WORD PTR tv141[ebp]

; 2590 : 	if( m_nLoRehashThreshold < 17 )

	cmp	eax, 17					; 00000011H
	jae	SHORT $LN1@UpdateReha@4

; 2591 : 	{
; 2592 : 		m_nLoRehashThreshold = 0;

	mov	DWORD PTR [ecx+28], 0
$LN1@UpdateReha@4:

; 2593 : 	}
; 2594 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::UpdateRehashThresholds
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
tv143 = -12						; size = 8
tv136 = -12						; size = 8
tv153 = -8						; size = 4
tv145 = -8						; size = 4
tv138 = -8						; size = 4
tv131 = -4						; size = 4
tv150 = -2						; size = 2
tv141 = -2						; size = 2
?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::UpdateRehashThresholds, COMDAT
; _this$ = ecx

; 2587 : {

	push	ebp
	mov	ebp, esp

; 2588 : 	m_nHiRehashThreshold = size_t( m_fHiThreshold*m_nBins );

	mov	eax, DWORD PTR [ecx+8]
	fild	DWORD PTR [ecx+8]
	sub	esp, 12					; 0000000cH
	test	eax, eax
	jns	SHORT $LN4@UpdateReha@5
	fadd	DWORD PTR __real@4f800000
$LN4@UpdateReha@5:
	fstp	DWORD PTR tv131[ebp]
	fld	DWORD PTR [ecx+20]
	fld	DWORD PTR tv131[ebp]
	fnstcw	WORD PTR tv150[ebp]
	movzx	eax, WORD PTR tv150[ebp]
	fld	ST(0)
	or	eax, 3072				; 00000c00H
	fmulp	ST(2), ST(0)
	mov	DWORD PTR tv145[ebp], eax
	fxch	ST(1)
	fldcw	WORD PTR tv145[ebp]
	fistp	QWORD PTR tv143[ebp]
	mov	edx, DWORD PTR tv143[ebp]
	mov	DWORD PTR [ecx+24], edx
	fldcw	WORD PTR tv150[ebp]

; 2589 : 	m_nLoRehashThreshold = size_t( m_fLoThreshold*m_nBins );

	fmul	DWORD PTR [ecx+16]
	fnstcw	WORD PTR tv141[ebp]
	movzx	eax, WORD PTR tv141[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv138[ebp], eax
	fldcw	WORD PTR tv138[ebp]
	fistp	QWORD PTR tv136[ebp]
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR [ecx+28], eax
	fldcw	WORD PTR tv141[ebp]

; 2590 : 	if( m_nLoRehashThreshold < 17 )

	cmp	eax, 17					; 00000011H
	jae	SHORT $LN1@UpdateReha@5

; 2591 : 	{
; 2592 : 		m_nLoRehashThreshold = 0;

	mov	DWORD PTR [ecx+28], 0
$LN1@UpdateReha@5:

; 2593 : 	}
; 2594 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::UpdateRehashThresholds
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ?Detach@?$CAutoPtr@VRow@ssf@@@ATL@@QAEPAVRow@ssf@@XZ
_TEXT	SEGMENT
?Detach@?$CAutoPtr@VRow@ssf@@@ATL@@QAEPAVRow@ssf@@XZ PROC ; ATL::CAutoPtr<ssf::Row>::Detach, COMDAT
; _this$ = ecx

; 877  : 		T* p;
; 878  : 
; 879  : 		p = m_p;

	mov	eax, DWORD PTR [ecx]

; 880  : 		m_p = NULL;

	mov	DWORD PTR [ecx], 0

; 881  : 
; 882  : 		return( p );
; 883  : 	}

	ret	0
?Detach@?$CAutoPtr@VRow@ssf@@@ATL@@QAEPAVRow@ssf@@XZ ENDP ; ATL::CAutoPtr<ssf::Row>::Detach
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAutoPtr@VRow@ssf@@@ATL@@QAE@AAV01@@Z
_TEXT	SEGMENT
??0?$CAutoPtr@VRow@ssf@@@ATL@@QAE@AAV01@@Z PROC		; ATL::CAutoPtr<ssf::Row>::CAutoPtr<ssf::Row>, COMDAT
; _this$ = eax
; _p$ = ecx

; 785  : 	{
; 786  : 		m_p = p.Detach();  // Transfer ownership

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [eax], edx

; 787  : 	}

	ret	0
??0?$CAutoPtr@VRow@ssf@@@ATL@@QAE@AAV01@@Z ENDP		; ATL::CAutoPtr<ssf::Row>::CAutoPtr<ssf::Row>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
_TEXT	ENDS
;	COMDAT ??1CNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@XZ PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CNode::~CNode, COMDAT

; 1190 : 		}

	ret	0
??1CNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CNode::~CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@ABQAVGlyph@ssf@@@Z
_TEXT	SEGMENT
??0CNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@ABQAVGlyph@ssf@@@Z PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CNode::CNode, COMDAT
; _this$ = eax
; _element$ = ecx

; 1186 : 		{

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx

; 1187 : 		}

	ret	0
??0CNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@ABQAVGlyph@ssf@@@Z ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CNode::CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QBEIXZ
_TEXT	SEGMENT
?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QBEIXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::GetHash, COMDAT
; _this$ = eax

; 2137 : 			return( m_nHash );

	mov	eax, DWORD PTR [eax+12]

; 2138 : 		}

	ret	0
?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QBEIXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::GetHash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBEIXZ
_TEXT	SEGMENT
?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBEIXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::GetHash, COMDAT
; _this$ = eax

; 2137 : 			return( m_nHash );

	mov	eax, DWORD PTR [eax+12]

; 2138 : 		}

	ret	0
?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBEIXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::GetHash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBEIXZ
_TEXT	SEGMENT
?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBEIXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::GetHash, COMDAT
; _this$ = eax

; 2137 : 			return( m_nHash );

	mov	eax, DWORD PTR [eax+12]

; 2138 : 		}

	ret	0
?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBEIXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::GetHash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBEIXZ
_TEXT	SEGMENT
?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBEIXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::GetHash, COMDAT
; _this$ = eax

; 2137 : 			return( m_nHash );

	mov	eax, DWORD PTR [eax+12]

; 2138 : 		}

	ret	0
?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBEIXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::GetHash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GCNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAXI@Z PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CNode::`scalar deleting destructor', COMDAT
; _this$ = eax
	ret	0
??_GCNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAXI@Z ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CNode::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z
_TEXT	SEGMENT
tv195 = -12						; size = 8
tv202 = -8						; size = 4
tv197 = -8						; size = 4
tv200 = -2						; size = 2
?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::PickSize, COMDAT
; _this$ = ecx
; _nElements$ = eax

; 2415 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2416 : 	// List of primes such that s_anPrimes[i] is the smallest prime greater than 2^(5+i/3)
; 2417 : 	static const UINT s_anPrimes[] =
; 2418 : 	{
; 2419 : 		17, 23, 29, 37, 41, 53, 67, 83, 103, 131, 163, 211, 257, 331, 409, 521, 647, 821,
; 2420 : 		1031, 1291, 1627, 2053, 2591, 3251, 4099, 5167, 6521, 8209, 10331,
; 2421 : 		13007, 16411, 20663, 26017, 32771, 41299, 52021, 65537, 82571, 104033,
; 2422 : 		131101, 165161, 208067, 262147, 330287, 416147, 524309, 660563,
; 2423 : 		832291, 1048583, 1321139, 1664543, 2097169, 2642257, 3329023, 4194319,
; 2424 : 		5284493, 6658049, 8388617, 10568993, 13316089, UINT_MAX
; 2425 : 	};
; 2426 : 
; 2427 : 	size_t nBins = (size_t)(nElements/m_fOptimalLoad);

	mov	DWORD PTR tv202[ebp], eax
	fild	DWORD PTR tv202[ebp]
	test	eax, eax
	jns	SHORT $LN11@PickSize@2
	fadd	DWORD PTR __real@4f800000
$LN11@PickSize@2:
	fdiv	DWORD PTR [ecx+12]
	fnstcw	WORD PTR tv200[ebp]
	movzx	eax, WORD PTR tv200[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv197[ebp], eax
	fldcw	WORD PTR tv197[ebp]
	fistp	QWORD PTR tv195[ebp]
	mov	eax, DWORD PTR tv195[ebp]
	fldcw	WORD PTR tv200[ebp]

; 2428 : 	UINT nBinsEstimate = UINT(  UINT_MAX < nBins ? UINT_MAX : nBins );

	cmp	eax, -1
	jbe	SHORT $LN7@PickSize@2
	or	eax, -1
$LN7@PickSize@2:

; 2429 : 
; 2430 : 	// Find the smallest prime greater than our estimate
; 2431 : 	int iPrime = 0;

	xor	ecx, ecx

; 2432 : 	while( nBinsEstimate > s_anPrimes[iPrime] )

	cmp	eax, 17					; 00000011H
	jbe	SHORT $LN3@PickSize@2
$LL4@PickSize@2:

; 2433 : 	{
; 2434 : 		iPrime++;

	inc	ecx
	cmp	eax, DWORD PTR ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z@4QBIB[ecx*4]
	ja	SHORT $LL4@PickSize@2
$LN3@PickSize@2:

; 2435 : 	}
; 2436 : 
; 2437 : 	if( s_anPrimes[iPrime] == UINT_MAX )

	mov	ecx, DWORD PTR ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z@4QBIB[ecx*4]
	cmp	ecx, -1

; 2438 : 	{
; 2439 : 		return( nBinsEstimate );

	je	SHORT $LN1@PickSize@2

; 2440 : 	}
; 2441 : 	else
; 2442 : 	{
; 2443 : 		return( s_anPrimes[iPrime] );

	mov	eax, ecx
$LN1@PickSize@2:

; 2444 : 	}
; 2445 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::PickSize
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABE_NXZ
_TEXT	SEGMENT
?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABE_NXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::IsLocked, COMDAT
; _this$ = ecx

; 2410 : 	return( m_nLockCount != 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+32], eax
	setne	al

; 2411 : }

	ret	0
?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABE_NXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::IsLocked
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::DisableAutoRehash, COMDAT
; _this$ = eax

; 2397 : 	m_nLockCount++;

	inc	DWORD PTR [eax+32]

; 2398 : }

	ret	0
?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::DisableAutoRehash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::EnableAutoRehash, COMDAT
; _this$ = eax

; 2403 : 	ATLASSUME( m_nLockCount > 0 );
; 2404 : 	m_nLockCount--;

	dec	DWORD PTR [eax+32]

; 2405 : }

	ret	0
?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::EnableAutoRehash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBE_NXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::IsEmpty, COMDAT
; _this$ = ecx

; 2306 : 	return( m_nElements == 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+4], eax
	sete	al

; 2307 : }

	ret	0
?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBE_NXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::IsEmpty
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z
_TEXT	SEGMENT
?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FindNextNode, COMDAT
; _this$ = edi
; _pNode$ = eax

; 3089 : 	CNode* pNext;
; 3090 : 
; 3091 : 	if(pNode == NULL)

	test	eax, eax
	jne	SHORT $LN6@FindNextNo

; 3119 : }

	ret	0
$LN6@FindNextNo:

; 3092 : 	{
; 3093 : 		ATLASSERT(FALSE);
; 3094 : 		return NULL;
; 3095 : 	}
; 3096 : 
; 3097 : 	if( pNode->m_pNext != NULL )

	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx

; 3098 : 	{
; 3099 : 		pNext = pNode->m_pNext;
; 3100 : 	}
; 3101 : 	else

	jne	SHORT $LN2@FindNextNo

; 3102 : 	{
; 3103 : 		UINT iBin;
; 3104 : 
; 3105 : 		pNext = NULL;
; 3106 : 		iBin = (pNode->GetHash()%m_nBins)+1;

	mov	eax, DWORD PTR [eax+12]
	push	esi
	mov	esi, DWORD PTR [edi+8]
	xor	edx, edx
	div	esi
	inc	edx
$LL3@FindNextNo:

; 3107 : 		while( (pNext == NULL) && (iBin < m_nBins) )

	cmp	edx, esi
	jae	SHORT $LN13@FindNextNo
	mov	eax, DWORD PTR [edi]

; 3108 : 		{
; 3109 : 			if( m_ppBins[iBin] != NULL )

	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN1@FindNextNo

; 3110 : 			{
; 3111 : 				pNext = m_ppBins[iBin];

	mov	ecx, DWORD PTR [eax]
$LN1@FindNextNo:

; 3112 : 			}
; 3113 : 
; 3114 : 			iBin++;

	inc	edx
	test	ecx, ecx
	je	SHORT $LL3@FindNextNo
$LN13@FindNextNo:
	pop	esi
$LN2@FindNextNo:

; 3115 : 		}
; 3116 : 	}
; 3117 : 
; 3118 : 	return( pNext );

	mov	eax, ecx

; 3119 : }

	ret	0
?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FindNextNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z
_TEXT	SEGMENT
tv195 = -12						; size = 8
tv202 = -8						; size = 4
tv197 = -8						; size = 4
tv200 = -2						; size = 2
?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::PickSize, COMDAT
; _this$ = ecx
; _nElements$ = eax

; 2415 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2416 : 	// List of primes such that s_anPrimes[i] is the smallest prime greater than 2^(5+i/3)
; 2417 : 	static const UINT s_anPrimes[] =
; 2418 : 	{
; 2419 : 		17, 23, 29, 37, 41, 53, 67, 83, 103, 131, 163, 211, 257, 331, 409, 521, 647, 821,
; 2420 : 		1031, 1291, 1627, 2053, 2591, 3251, 4099, 5167, 6521, 8209, 10331,
; 2421 : 		13007, 16411, 20663, 26017, 32771, 41299, 52021, 65537, 82571, 104033,
; 2422 : 		131101, 165161, 208067, 262147, 330287, 416147, 524309, 660563,
; 2423 : 		832291, 1048583, 1321139, 1664543, 2097169, 2642257, 3329023, 4194319,
; 2424 : 		5284493, 6658049, 8388617, 10568993, 13316089, UINT_MAX
; 2425 : 	};
; 2426 : 
; 2427 : 	size_t nBins = (size_t)(nElements/m_fOptimalLoad);

	mov	DWORD PTR tv202[ebp], eax
	fild	DWORD PTR tv202[ebp]
	test	eax, eax
	jns	SHORT $LN11@PickSize@3
	fadd	DWORD PTR __real@4f800000
$LN11@PickSize@3:
	fdiv	DWORD PTR [ecx+12]
	fnstcw	WORD PTR tv200[ebp]
	movzx	eax, WORD PTR tv200[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv197[ebp], eax
	fldcw	WORD PTR tv197[ebp]
	fistp	QWORD PTR tv195[ebp]
	mov	eax, DWORD PTR tv195[ebp]
	fldcw	WORD PTR tv200[ebp]

; 2428 : 	UINT nBinsEstimate = UINT(  UINT_MAX < nBins ? UINT_MAX : nBins );

	cmp	eax, -1
	jbe	SHORT $LN7@PickSize@3
	or	eax, -1
$LN7@PickSize@3:

; 2429 : 
; 2430 : 	// Find the smallest prime greater than our estimate
; 2431 : 	int iPrime = 0;

	xor	ecx, ecx

; 2432 : 	while( nBinsEstimate > s_anPrimes[iPrime] )

	cmp	eax, 17					; 00000011H
	jbe	SHORT $LN3@PickSize@3
$LL4@PickSize@3:

; 2433 : 	{
; 2434 : 		iPrime++;

	inc	ecx
	cmp	eax, DWORD PTR ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z@4QBIB[ecx*4]
	ja	SHORT $LL4@PickSize@3
$LN3@PickSize@3:

; 2435 : 	}
; 2436 : 
; 2437 : 	if( s_anPrimes[iPrime] == UINT_MAX )

	mov	ecx, DWORD PTR ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z@4QBIB[ecx*4]
	cmp	ecx, -1

; 2438 : 	{
; 2439 : 		return( nBinsEstimate );

	je	SHORT $LN1@PickSize@3

; 2440 : 	}
; 2441 : 	else
; 2442 : 	{
; 2443 : 		return( s_anPrimes[iPrime] );

	mov	eax, ecx
$LN1@PickSize@3:

; 2444 : 	}
; 2445 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::PickSize
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABE_NXZ
_TEXT	SEGMENT
?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABE_NXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::IsLocked, COMDAT
; _this$ = ecx

; 2410 : 	return( m_nLockCount != 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+32], eax
	setne	al

; 2411 : }

	ret	0
?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABE_NXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::IsLocked
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::DisableAutoRehash, COMDAT
; _this$ = eax

; 2397 : 	m_nLockCount++;

	inc	DWORD PTR [eax+32]

; 2398 : }

	ret	0
?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::DisableAutoRehash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::EnableAutoRehash, COMDAT
; _this$ = eax

; 2403 : 	ATLASSUME( m_nLockCount > 0 );
; 2404 : 	m_nLockCount--;

	dec	DWORD PTR [eax+32]

; 2405 : }

	ret	0
?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::EnableAutoRehash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBE_NXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::IsEmpty, COMDAT
; _this$ = ecx

; 2306 : 	return( m_nElements == 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+4], eax
	sete	al

; 2307 : }

	ret	0
?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBE_NXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::IsEmpty
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z
_TEXT	SEGMENT
?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FindNextNode, COMDAT
; _this$ = edi
; _pNode$ = eax

; 3089 : 	CNode* pNext;
; 3090 : 
; 3091 : 	if(pNode == NULL)

	test	eax, eax
	jne	SHORT $LN6@FindNextNo@2

; 3119 : }

	ret	0
$LN6@FindNextNo@2:

; 3092 : 	{
; 3093 : 		ATLASSERT(FALSE);
; 3094 : 		return NULL;
; 3095 : 	}
; 3096 : 
; 3097 : 	if( pNode->m_pNext != NULL )

	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx

; 3098 : 	{
; 3099 : 		pNext = pNode->m_pNext;
; 3100 : 	}
; 3101 : 	else

	jne	SHORT $LN2@FindNextNo@2

; 3102 : 	{
; 3103 : 		UINT iBin;
; 3104 : 
; 3105 : 		pNext = NULL;
; 3106 : 		iBin = (pNode->GetHash()%m_nBins)+1;

	mov	eax, DWORD PTR [eax+12]
	push	esi
	mov	esi, DWORD PTR [edi+8]
	xor	edx, edx
	div	esi
	inc	edx
$LL3@FindNextNo@2:

; 3107 : 		while( (pNext == NULL) && (iBin < m_nBins) )

	cmp	edx, esi
	jae	SHORT $LN13@FindNextNo@2
	mov	eax, DWORD PTR [edi]

; 3108 : 		{
; 3109 : 			if( m_ppBins[iBin] != NULL )

	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN1@FindNextNo@2

; 3110 : 			{
; 3111 : 				pNext = m_ppBins[iBin];

	mov	ecx, DWORD PTR [eax]
$LN1@FindNextNo@2:

; 3112 : 			}
; 3113 : 
; 3114 : 			iBin++;

	inc	edx
	test	ecx, ecx
	je	SHORT $LL3@FindNextNo@2
$LN13@FindNextNo@2:
	pop	esi
$LN2@FindNextNo@2:

; 3115 : 		}
; 3116 : 	}
; 3117 : 
; 3118 : 	return( pNext );

	mov	eax, ecx

; 3119 : }

	ret	0
?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FindNextNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z
_TEXT	SEGMENT
tv195 = -12						; size = 8
tv202 = -8						; size = 4
tv197 = -8						; size = 4
tv200 = -2						; size = 2
?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::PickSize, COMDAT
; _this$ = ecx
; _nElements$ = eax

; 2415 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2416 : 	// List of primes such that s_anPrimes[i] is the smallest prime greater than 2^(5+i/3)
; 2417 : 	static const UINT s_anPrimes[] =
; 2418 : 	{
; 2419 : 		17, 23, 29, 37, 41, 53, 67, 83, 103, 131, 163, 211, 257, 331, 409, 521, 647, 821,
; 2420 : 		1031, 1291, 1627, 2053, 2591, 3251, 4099, 5167, 6521, 8209, 10331,
; 2421 : 		13007, 16411, 20663, 26017, 32771, 41299, 52021, 65537, 82571, 104033,
; 2422 : 		131101, 165161, 208067, 262147, 330287, 416147, 524309, 660563,
; 2423 : 		832291, 1048583, 1321139, 1664543, 2097169, 2642257, 3329023, 4194319,
; 2424 : 		5284493, 6658049, 8388617, 10568993, 13316089, UINT_MAX
; 2425 : 	};
; 2426 : 
; 2427 : 	size_t nBins = (size_t)(nElements/m_fOptimalLoad);

	mov	DWORD PTR tv202[ebp], eax
	fild	DWORD PTR tv202[ebp]
	test	eax, eax
	jns	SHORT $LN11@PickSize@4
	fadd	DWORD PTR __real@4f800000
$LN11@PickSize@4:
	fdiv	DWORD PTR [ecx+12]
	fnstcw	WORD PTR tv200[ebp]
	movzx	eax, WORD PTR tv200[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv197[ebp], eax
	fldcw	WORD PTR tv197[ebp]
	fistp	QWORD PTR tv195[ebp]
	mov	eax, DWORD PTR tv195[ebp]
	fldcw	WORD PTR tv200[ebp]

; 2428 : 	UINT nBinsEstimate = UINT(  UINT_MAX < nBins ? UINT_MAX : nBins );

	cmp	eax, -1
	jbe	SHORT $LN7@PickSize@4
	or	eax, -1
$LN7@PickSize@4:

; 2429 : 
; 2430 : 	// Find the smallest prime greater than our estimate
; 2431 : 	int iPrime = 0;

	xor	ecx, ecx

; 2432 : 	while( nBinsEstimate > s_anPrimes[iPrime] )

	cmp	eax, 17					; 00000011H
	jbe	SHORT $LN3@PickSize@4
$LL4@PickSize@4:

; 2433 : 	{
; 2434 : 		iPrime++;

	inc	ecx
	cmp	eax, DWORD PTR ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z@4QBIB[ecx*4]
	ja	SHORT $LL4@PickSize@4
$LN3@PickSize@4:

; 2435 : 	}
; 2436 : 
; 2437 : 	if( s_anPrimes[iPrime] == UINT_MAX )

	mov	ecx, DWORD PTR ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z@4QBIB[ecx*4]
	cmp	ecx, -1

; 2438 : 	{
; 2439 : 		return( nBinsEstimate );

	je	SHORT $LN1@PickSize@4

; 2440 : 	}
; 2441 : 	else
; 2442 : 	{
; 2443 : 		return( s_anPrimes[iPrime] );

	mov	eax, ecx
$LN1@PickSize@4:

; 2444 : 	}
; 2445 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::PickSize
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABE_NXZ
_TEXT	SEGMENT
?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABE_NXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::IsLocked, COMDAT
; _this$ = ecx

; 2410 : 	return( m_nLockCount != 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+32], eax
	setne	al

; 2411 : }

	ret	0
?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABE_NXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::IsLocked
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::DisableAutoRehash, COMDAT
; _this$ = eax

; 2397 : 	m_nLockCount++;

	inc	DWORD PTR [eax+32]

; 2398 : }

	ret	0
?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::DisableAutoRehash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::EnableAutoRehash, COMDAT
; _this$ = eax

; 2403 : 	ATLASSUME( m_nLockCount > 0 );
; 2404 : 	m_nLockCount--;

	dec	DWORD PTR [eax+32]

; 2405 : }

	ret	0
?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::EnableAutoRehash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBE_NXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::IsEmpty, COMDAT
; _this$ = ecx

; 2306 : 	return( m_nElements == 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+4], eax
	sete	al

; 2307 : }

	ret	0
?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBE_NXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::IsEmpty
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z
_TEXT	SEGMENT
?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FindNextNode, COMDAT
; _this$ = edi
; _pNode$ = eax

; 3089 : 	CNode* pNext;
; 3090 : 
; 3091 : 	if(pNode == NULL)

	test	eax, eax
	jne	SHORT $LN6@FindNextNo@3

; 3119 : }

	ret	0
$LN6@FindNextNo@3:

; 3092 : 	{
; 3093 : 		ATLASSERT(FALSE);
; 3094 : 		return NULL;
; 3095 : 	}
; 3096 : 
; 3097 : 	if( pNode->m_pNext != NULL )

	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx

; 3098 : 	{
; 3099 : 		pNext = pNode->m_pNext;
; 3100 : 	}
; 3101 : 	else

	jne	SHORT $LN2@FindNextNo@3

; 3102 : 	{
; 3103 : 		UINT iBin;
; 3104 : 
; 3105 : 		pNext = NULL;
; 3106 : 		iBin = (pNode->GetHash()%m_nBins)+1;

	mov	eax, DWORD PTR [eax+12]
	push	esi
	mov	esi, DWORD PTR [edi+8]
	xor	edx, edx
	div	esi
	inc	edx
$LL3@FindNextNo@3:

; 3107 : 		while( (pNext == NULL) && (iBin < m_nBins) )

	cmp	edx, esi
	jae	SHORT $LN13@FindNextNo@3
	mov	eax, DWORD PTR [edi]

; 3108 : 		{
; 3109 : 			if( m_ppBins[iBin] != NULL )

	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN1@FindNextNo@3

; 3110 : 			{
; 3111 : 				pNext = m_ppBins[iBin];

	mov	ecx, DWORD PTR [eax]
$LN1@FindNextNo@3:

; 3112 : 			}
; 3113 : 
; 3114 : 			iBin++;

	inc	edx
	test	ecx, ecx
	je	SHORT $LL3@FindNextNo@3
$LN13@FindNextNo@3:
	pop	esi
$LN2@FindNextNo@3:

; 3115 : 		}
; 3116 : 	}
; 3117 : 
; 3118 : 	return( pNext );

	mov	eax, ecx

; 3119 : }

	ret	0
?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FindNextNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z
_TEXT	SEGMENT
tv195 = -12						; size = 8
tv202 = -8						; size = 4
tv197 = -8						; size = 4
tv200 = -2						; size = 2
?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::PickSize, COMDAT
; _this$ = ecx
; _nElements$ = eax

; 2415 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2416 : 	// List of primes such that s_anPrimes[i] is the smallest prime greater than 2^(5+i/3)
; 2417 : 	static const UINT s_anPrimes[] =
; 2418 : 	{
; 2419 : 		17, 23, 29, 37, 41, 53, 67, 83, 103, 131, 163, 211, 257, 331, 409, 521, 647, 821,
; 2420 : 		1031, 1291, 1627, 2053, 2591, 3251, 4099, 5167, 6521, 8209, 10331,
; 2421 : 		13007, 16411, 20663, 26017, 32771, 41299, 52021, 65537, 82571, 104033,
; 2422 : 		131101, 165161, 208067, 262147, 330287, 416147, 524309, 660563,
; 2423 : 		832291, 1048583, 1321139, 1664543, 2097169, 2642257, 3329023, 4194319,
; 2424 : 		5284493, 6658049, 8388617, 10568993, 13316089, UINT_MAX
; 2425 : 	};
; 2426 : 
; 2427 : 	size_t nBins = (size_t)(nElements/m_fOptimalLoad);

	mov	DWORD PTR tv202[ebp], eax
	fild	DWORD PTR tv202[ebp]
	test	eax, eax
	jns	SHORT $LN11@PickSize@5
	fadd	DWORD PTR __real@4f800000
$LN11@PickSize@5:
	fdiv	DWORD PTR [ecx+12]
	fnstcw	WORD PTR tv200[ebp]
	movzx	eax, WORD PTR tv200[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv197[ebp], eax
	fldcw	WORD PTR tv197[ebp]
	fistp	QWORD PTR tv195[ebp]
	mov	eax, DWORD PTR tv195[ebp]
	fldcw	WORD PTR tv200[ebp]

; 2428 : 	UINT nBinsEstimate = UINT(  UINT_MAX < nBins ? UINT_MAX : nBins );

	cmp	eax, -1
	jbe	SHORT $LN7@PickSize@5
	or	eax, -1
$LN7@PickSize@5:

; 2429 : 
; 2430 : 	// Find the smallest prime greater than our estimate
; 2431 : 	int iPrime = 0;

	xor	ecx, ecx

; 2432 : 	while( nBinsEstimate > s_anPrimes[iPrime] )

	cmp	eax, 17					; 00000011H
	jbe	SHORT $LN3@PickSize@5
$LL4@PickSize@5:

; 2433 : 	{
; 2434 : 		iPrime++;

	inc	ecx
	cmp	eax, DWORD PTR ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z@4QBIB[ecx*4]
	ja	SHORT $LL4@PickSize@5
$LN3@PickSize@5:

; 2435 : 	}
; 2436 : 
; 2437 : 	if( s_anPrimes[iPrime] == UINT_MAX )

	mov	ecx, DWORD PTR ?s_anPrimes@?1??PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z@4QBIB[ecx*4]
	cmp	ecx, -1

; 2438 : 	{
; 2439 : 		return( nBinsEstimate );

	je	SHORT $LN1@PickSize@5

; 2440 : 	}
; 2441 : 	else
; 2442 : 	{
; 2443 : 		return( s_anPrimes[iPrime] );

	mov	eax, ecx
$LN1@PickSize@5:

; 2444 : 	}
; 2445 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::PickSize
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABE_NXZ
_TEXT	SEGMENT
?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABE_NXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::IsLocked, COMDAT
; _this$ = ecx

; 2410 : 	return( m_nLockCount != 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+32], eax
	setne	al

; 2411 : }

	ret	0
?IsLocked@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABE_NXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::IsLocked
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::DisableAutoRehash, COMDAT
; _this$ = eax

; 2397 : 	m_nLockCount++;

	inc	DWORD PTR [eax+32]

; 2398 : }

	ret	0
?DisableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::DisableAutoRehash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::EnableAutoRehash, COMDAT
; _this$ = eax

; 2403 : 	ATLASSUME( m_nLockCount > 0 );
; 2404 : 	m_nLockCount--;

	dec	DWORD PTR [eax+32]

; 2405 : }

	ret	0
?EnableAutoRehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::EnableAutoRehash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBE_NXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::IsEmpty, COMDAT
; _this$ = ecx

; 2306 : 	return( m_nElements == 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+4], eax
	sete	al

; 2307 : }

	ret	0
?IsEmpty@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBE_NXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::IsEmpty
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CallDestructors@?$CAtlArray@USplineCoeffs@Glyph@ssf@@V?$CElementTraits@USplineCoeffs@Glyph@ssf@@@ATL@@@ATL@@CAXPAUSplineCoeffs@Glyph@ssf@@I@Z
_TEXT	SEGMENT
?CallDestructors@?$CAtlArray@USplineCoeffs@Glyph@ssf@@V?$CElementTraits@USplineCoeffs@Glyph@ssf@@@ATL@@@ATL@@CAXPAUSplineCoeffs@Glyph@ssf@@I@Z PROC ; ATL::CAtlArray<ssf::Glyph::SplineCoeffs,ATL::CElementTraits<ssf::Glyph::SplineCoeffs> >::CallDestructors, COMDAT

; 1161 : 	(pElements);
; 1162 : 	
; 1163 : 	for( size_t iElement = 0; iElement < nElements; iElement++ )
; 1164 : 	{
; 1165 : 		pElements[iElement].~E();
; 1166 : 	}
; 1167 : }

	ret	0
?CallDestructors@?$CAtlArray@USplineCoeffs@Glyph@ssf@@V?$CElementTraits@USplineCoeffs@Glyph@ssf@@@ATL@@@ATL@@CAXPAUSplineCoeffs@Glyph@ssf@@I@Z ENDP ; ATL::CAtlArray<ssf::Glyph::SplineCoeffs,ATL::CElementTraits<ssf::Glyph::SplineCoeffs> >::CallDestructors
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CallDestructors@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@CAXPAUPoint@ssf@@I@Z
_TEXT	SEGMENT
?CallDestructors@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@CAXPAUPoint@ssf@@I@Z PROC ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::CallDestructors, COMDAT

; 1161 : 	(pElements);
; 1162 : 	
; 1163 : 	for( size_t iElement = 0; iElement < nElements; iElement++ )
; 1164 : 	{
; 1165 : 		pElements[iElement].~E();
; 1166 : 	}
; 1167 : }

	ret	0
?CallDestructors@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@CAXPAUPoint@ssf@@I@Z ENDP ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::CallDestructors
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CallDestructors@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@CAXPAUtagPOINT@@I@Z
_TEXT	SEGMENT
?CallDestructors@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@CAXPAUtagPOINT@@I@Z PROC ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CallDestructors, COMDAT

; 1161 : 	(pElements);
; 1162 : 	
; 1163 : 	for( size_t iElement = 0; iElement < nElements; iElement++ )
; 1164 : 	{
; 1165 : 		pElements[iElement].~E();
; 1166 : 	}
; 1167 : }

	ret	0
?CallDestructors@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@CAXPAUtagPOINT@@I@Z ENDP ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CallDestructors
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEIXZ
_TEXT	SEGMENT
?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEIXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::GetHash, COMDAT
; _this$ = eax

; 2137 : 			return( m_nHash );

	mov	eax, DWORD PTR [eax+28]

; 2138 : 		}

	ret	0
?GetHash@CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEIXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::GetHash
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CopyElements@?$CElementTraitsBase@UPoint@ssf@@@ATL@@SAXPAUPoint@ssf@@PBU34@I@Z
_TEXT	SEGMENT
_pSrc$ = 8						; size = 4
?CopyElements@?$CElementTraitsBase@UPoint@ssf@@@ATL@@SAXPAUPoint@ssf@@PBU34@I@Z PROC ; ATL::CElementTraitsBase<ssf::Point>::CopyElements, COMDAT
; _pDest$ = eax
; _nElements$ = edx

; 123  : 	{		

	push	ebp
	mov	ebp, esp

; 124  : 		for( size_t iElement = 0; iElement < nElements; iElement++ )

	test	edx, edx
	je	SHORT $LN1@CopyElemen
	mov	ecx, DWORD PTR _pSrc$[ebp]
	sub	ecx, eax
	push	esi
	npad	3
$LL3@CopyElemen:

; 125  : 		{
; 126  : 			pDest[iElement] = pSrc[iElement];

	mov	esi, DWORD PTR [ecx+eax]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	dec	edx
	jne	SHORT $LL3@CopyElemen
	pop	esi
$LN1@CopyElemen:

; 127  : 		}
; 128  : 	}

	pop	ebp
	ret	0
?CopyElements@?$CElementTraitsBase@UPoint@ssf@@@ATL@@SAXPAUPoint@ssf@@PBU34@I@Z ENDP ; ATL::CElementTraitsBase<ssf::Point>::CopyElements
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CopyElements@?$CElementTraitsBase@UtagPOINT@@@ATL@@SAXPAUtagPOINT@@PBU3@I@Z
_TEXT	SEGMENT
_pSrc$ = 8						; size = 4
?CopyElements@?$CElementTraitsBase@UtagPOINT@@@ATL@@SAXPAUtagPOINT@@PBU3@I@Z PROC ; ATL::CElementTraitsBase<tagPOINT>::CopyElements, COMDAT
; _pDest$ = eax
; _nElements$ = edx

; 123  : 	{		

	push	ebp
	mov	ebp, esp

; 124  : 		for( size_t iElement = 0; iElement < nElements; iElement++ )

	test	edx, edx
	je	SHORT $LN1@CopyElemen@2
	mov	ecx, DWORD PTR _pSrc$[ebp]
	sub	ecx, eax
	push	esi
	npad	3
$LL3@CopyElemen@2:

; 125  : 		{
; 126  : 			pDest[iElement] = pSrc[iElement];

	mov	esi, DWORD PTR [ecx+eax]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	dec	edx
	jne	SHORT $LL3@CopyElemen@2
	pop	esi
$LN1@CopyElemen@2:

; 127  : 		}
; 128  : 	}

	pop	ebp
	ret	0
?CopyElements@?$CElementTraitsBase@UtagPOINT@@@ATL@@SAXPAUtagPOINT@@PBU3@I@Z ENDP ; ATL::CElementTraitsBase<tagPOINT>::CopyElements
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QBE_NXZ PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::IsEmpty, COMDAT
; _this$ = ecx

; 1348 : 	return( m_nElements == 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+8], eax
	sete	al

; 1349 : }

	ret	0
?IsEmpty@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QBE_NXZ ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::IsEmpty
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@I@Z
_TEXT	SEGMENT
??0?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@I@Z PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >, COMDAT
; _this$ = eax

; 1473 : {

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], 10			; 0000000aH

; 1474 : 	ATLASSERT( nBlockSize > 0 );
; 1475 : }

	ret	0
??0?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@I@Z ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetHeadPosition, COMDAT
; _this$ = eax

; 1382 : 	return( POSITION( m_pHead ) );

	mov	eax, DWORD PTR [eax]

; 1383 : }

	ret	0
?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetHeadPosition
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QBE_NXZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::IsEmpty, COMDAT
; _this$ = ecx

; 1348 : 	return( m_nElements == 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+8], eax
	sete	al

; 1349 : }

	ret	0
?IsEmpty@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QBE_NXZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::IsEmpty
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@I@Z
_TEXT	SEGMENT
??0?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@I@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >, COMDAT
; _this$ = eax

; 1473 : {

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], 10			; 0000000aH

; 1474 : 	ATLASSERT( nBlockSize > 0 );
; 1475 : }

	ret	0
??0?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@I@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
_TEXT	ENDS
;	COMDAT ??$wcscpy_s@$0CA@@@YAHAAY0CA@_WPB_W@Z
_TEXT	SEGMENT
??$wcscpy_s@$0CA@@@YAHAAY0CA@_WPB_W@Z PROC		; wcscpy_s<32>, COMDAT
; __Dest$ = ecx
; __Source$ = eax

; 282  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1(errno_t, wcscpy_s, wchar_t, _Dest, _In_z_ const wchar_t *, _Source)

	push	eax
	push	32					; 00000020H
	push	ecx
	call	_wcscpy_s
	add	esp, 12					; 0000000cH
	ret	0
??$wcscpy_s@$0CA@@@YAHAAY0CA@_WPB_W@Z ENDP		; wcscpy_s<32>
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
_TEXT	ENDS
;	COMDAT ?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetStartPosition, COMDAT
; _this$ = ecx

; 2474 : 	if( IsEmpty() )
; 2475 : 	{
; 2476 : 		return( NULL );

	xor	eax, eax
	cmp	DWORD PTR [ecx+4], eax
	je	SHORT $LN6@GetStartPo

; 2477 : 	}
; 2478 : 
; 2479 : 	for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	mov	edx, DWORD PTR [ecx+8]
	push	esi
	test	edx, edx
	je	SHORT $LN2@GetStartPo
	mov	esi, DWORD PTR [ecx]
	mov	ecx, esi
$LL4@GetStartPo:

; 2480 : 	{
; 2481 : 		if( m_ppBins[iBin] != NULL )

	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN11@GetStartPo

; 2477 : 	}
; 2478 : 
; 2479 : 	for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	inc	eax
	add	ecx, 4
	cmp	eax, edx
	jb	SHORT $LL4@GetStartPo
$LN2@GetStartPo:

; 2484 : 		}
; 2485 : 	}
; 2486 : 	ATLASSERT( false );
; 2487 : 
; 2488 : 	return( NULL );

	xor	eax, eax
	pop	esi
$LN6@GetStartPo:

; 2489 : }

	ret	0
$LN11@GetStartPo:

; 2482 : 		{
; 2483 : 			return( POSITION( m_ppBins[iBin] ) );

	mov	eax, DWORD PTR [esi+eax*4]
	pop	esi

; 2489 : }

	ret	0
?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetStartPosition
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetStartPosition, COMDAT
; _this$ = ecx

; 2474 : 	if( IsEmpty() )
; 2475 : 	{
; 2476 : 		return( NULL );

	xor	eax, eax
	cmp	DWORD PTR [ecx+4], eax
	je	SHORT $LN6@GetStartPo@2

; 2477 : 	}
; 2478 : 
; 2479 : 	for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	mov	edx, DWORD PTR [ecx+8]
	push	esi
	test	edx, edx
	je	SHORT $LN2@GetStartPo@2
	mov	esi, DWORD PTR [ecx]
	mov	ecx, esi
$LL4@GetStartPo@2:

; 2480 : 	{
; 2481 : 		if( m_ppBins[iBin] != NULL )

	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN11@GetStartPo@2

; 2477 : 	}
; 2478 : 
; 2479 : 	for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	inc	eax
	add	ecx, 4
	cmp	eax, edx
	jb	SHORT $LL4@GetStartPo@2
$LN2@GetStartPo@2:

; 2484 : 		}
; 2485 : 	}
; 2486 : 	ATLASSERT( false );
; 2487 : 
; 2488 : 	return( NULL );

	xor	eax, eax
	pop	esi
$LN6@GetStartPo@2:

; 2489 : }

	ret	0
$LN11@GetStartPo@2:

; 2482 : 		{
; 2483 : 			return( POSITION( m_ppBins[iBin] ) );

	mov	eax, DWORD PTR [esi+eax*4]
	pop	esi

; 2489 : }

	ret	0
?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetStartPosition
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetHeadPosition, COMDAT
; _this$ = eax

; 1382 : 	return( POSITION( m_pHead ) );

	mov	eax, DWORD PTR [eax]

; 1383 : }

	ret	0
?GetHeadPosition@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetHeadPosition
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBE_NXZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::IsEmpty, COMDAT
; _this$ = ecx

; 1348 : 	return( m_nElements == 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+8], eax
	sete	al

; 1349 : }

	ret	0
?IsEmpty@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBE_NXZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::IsEmpty
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@I@Z
_TEXT	SEGMENT
??0?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@I@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >, COMDAT
; _this$ = eax

; 1473 : {

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], 10			; 0000000aH

; 1474 : 	ATLASSERT( nBlockSize > 0 );
; 1475 : }

	ret	0
??0?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@I@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetStartPosition, COMDAT
; _this$ = ecx

; 2474 : 	if( IsEmpty() )
; 2475 : 	{
; 2476 : 		return( NULL );

	xor	eax, eax
	cmp	DWORD PTR [ecx+4], eax
	je	SHORT $LN6@GetStartPo@3

; 2477 : 	}
; 2478 : 
; 2479 : 	for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	mov	edx, DWORD PTR [ecx+8]
	push	esi
	test	edx, edx
	je	SHORT $LN2@GetStartPo@3
	mov	esi, DWORD PTR [ecx]
	mov	ecx, esi
$LL4@GetStartPo@3:

; 2480 : 	{
; 2481 : 		if( m_ppBins[iBin] != NULL )

	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN11@GetStartPo@3

; 2477 : 	}
; 2478 : 
; 2479 : 	for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	inc	eax
	add	ecx, 4
	cmp	eax, edx
	jb	SHORT $LL4@GetStartPo@3
$LN2@GetStartPo@3:

; 2484 : 		}
; 2485 : 	}
; 2486 : 	ATLASSERT( false );
; 2487 : 
; 2488 : 	return( NULL );

	xor	eax, eax
	pop	esi
$LN6@GetStartPo@3:

; 2489 : }

	ret	0
$LN11@GetStartPo@3:

; 2482 : 		{
; 2483 : 			return( POSITION( m_ppBins[iBin] ) );

	mov	eax, DWORD PTR [esi+eax*4]
	pop	esi

; 2489 : }

	ret	0
?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetStartPosition
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetStartPosition, COMDAT
; _this$ = ecx

; 2474 : 	if( IsEmpty() )
; 2475 : 	{
; 2476 : 		return( NULL );

	xor	eax, eax
	cmp	DWORD PTR [ecx+4], eax
	je	SHORT $LN6@GetStartPo@4

; 2477 : 	}
; 2478 : 
; 2479 : 	for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	mov	edx, DWORD PTR [ecx+8]
	push	esi
	test	edx, edx
	je	SHORT $LN2@GetStartPo@4
	mov	esi, DWORD PTR [ecx]
	mov	ecx, esi
$LL4@GetStartPo@4:

; 2480 : 	{
; 2481 : 		if( m_ppBins[iBin] != NULL )

	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN11@GetStartPo@4

; 2477 : 	}
; 2478 : 
; 2479 : 	for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	inc	eax
	add	ecx, 4
	cmp	eax, edx
	jb	SHORT $LL4@GetStartPo@4
$LN2@GetStartPo@4:

; 2484 : 		}
; 2485 : 	}
; 2486 : 	ATLASSERT( false );
; 2487 : 
; 2488 : 	return( NULL );

	xor	eax, eax
	pop	esi
$LN6@GetStartPo@4:

; 2489 : }

	ret	0
$LN11@GetStartPo@4:

; 2482 : 		{
; 2483 : 			return( POSITION( m_ppBins[iBin] ) );

	mov	eax, DWORD PTR [esi+eax*4]
	pop	esi

; 2489 : }

	ret	0
?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetStartPosition
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$CAtlArray@USplineCoeffs@Glyph@ssf@@V?$CElementTraits@USplineCoeffs@Glyph@ssf@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAtlArray@USplineCoeffs@Glyph@ssf@@V?$CElementTraits@USplineCoeffs@Glyph@ssf@@@ATL@@@ATL@@QAE@XZ PROC ; ATL::CAtlArray<ssf::Glyph::SplineCoeffs,ATL::CElementTraits<ssf::Glyph::SplineCoeffs> >::~CAtlArray<ssf::Glyph::SplineCoeffs,ATL::CElementTraits<ssf::Glyph::SplineCoeffs> >, COMDAT
; _this$ = eax

; 794  : 	if( m_pData != NULL )

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN1@CAtlArray

; 795  : 	{
; 796  : 		CallDestructors( m_pData, m_nSize );
; 797  : 		free( m_pData );

	push	eax
	call	_free
	pop	ecx
$LN1@CAtlArray:

; 798  : 	}
; 799  : }

	ret	0
??1?$CAtlArray@USplineCoeffs@Glyph@ssf@@V?$CElementTraits@USplineCoeffs@Glyph@ssf@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CAtlArray<ssf::Glyph::SplineCoeffs,ATL::CElementTraits<ssf::Glyph::SplineCoeffs> >::~CAtlArray<ssf::Glyph::SplineCoeffs,ATL::CElementTraits<ssf::Glyph::SplineCoeffs> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHeadPosition@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
?GetHeadPosition@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEPAU__POSITION@@XZ PROC ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetHeadPosition, COMDAT
; _this$ = eax

; 1382 : 	return( POSITION( m_pHead ) );

	mov	eax, DWORD PTR [eax]

; 1383 : }

	ret	0
?GetHeadPosition@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEPAU__POSITION@@XZ ENDP ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetHeadPosition
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBE_NXZ PROC ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::IsEmpty, COMDAT
; _this$ = ecx

; 1348 : 	return( m_nElements == 0 );

	xor	eax, eax
	cmp	DWORD PTR [ecx+8], eax
	sete	al

; 1349 : }

	ret	0
?IsEmpty@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBE_NXZ ENDP ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::IsEmpty
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAE@XZ PROC ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::~CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >, COMDAT
; _this$ = eax

; 794  : 	if( m_pData != NULL )

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN1@CAtlArray@2

; 795  : 	{
; 796  : 		CallDestructors( m_pData, m_nSize );
; 797  : 		free( m_pData );

	push	eax
	call	_free
	pop	ecx
$LN1@CAtlArray@2:

; 798  : 	}
; 799  : }

	ret	0
??1?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::~CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE@XZ PROC ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::~CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >, COMDAT
; _this$ = eax

; 794  : 	if( m_pData != NULL )

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN1@CAtlArray@3

; 795  : 	{
; 796  : 		CallDestructors( m_pData, m_nSize );
; 797  : 		free( m_pData );

	push	eax
	call	_free
	pop	ecx
$LN1@CAtlArray@3:

; 798  : 	}
; 799  : }

	ret	0
??1?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::~CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetData@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEPAUtagPOINT@@XZ
_TEXT	SEGMENT
?GetData@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEPAUtagPOINT@@XZ PROC ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::GetData, COMDAT
; _this$ = eax

; 719  : 	return( m_pData );

	mov	eax, DWORD PTR [eax]

; 720  : }

	ret	0
?GetData@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEPAUtagPOINT@@XZ ENDP ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::GetData
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE@XZ PROC ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >, COMDAT
; _this$ = eax

; 788  : {

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 789  : }

	ret	0
??0?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1Path@ssf@@QAE@XZ
_TEXT	SEGMENT
??1Path@ssf@@QAE@XZ PROC				; ssf::Path::~Path, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@Path
	push	eax
	call	_free
	pop	ecx
$LN3@Path:
	ret	0
??1Path@ssf@@QAE@XZ ENDP				; ssf::Path::~Path
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1Placement@ssf@@QAE@XZ
_TEXT	SEGMENT
??1Placement@ssf@@QAE@XZ PROC				; ssf::Placement::~Placement, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax+84]
	test	eax, eax
	je	SHORT $LN5@Placement
	push	eax
	call	_free
	pop	ecx
$LN5@Placement:
	ret	0
??1Placement@ssf@@QAE@XZ ENDP				; ssf::Placement::~Placement
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ?Detach@?$CAutoPtr@VGlyph@ssf@@@ATL@@QAEPAVGlyph@ssf@@XZ
_TEXT	SEGMENT
?Detach@?$CAutoPtr@VGlyph@ssf@@@ATL@@QAEPAVGlyph@ssf@@XZ PROC ; ATL::CAutoPtr<ssf::Glyph>::Detach, COMDAT
; _this$ = ecx

; 877  : 		T* p;
; 878  : 
; 879  : 		p = m_p;

	mov	eax, DWORD PTR [ecx]

; 880  : 		m_p = NULL;

	mov	DWORD PTR [ecx], 0

; 881  : 
; 882  : 		return( p );
; 883  : 	}

	ret	0
?Detach@?$CAutoPtr@VGlyph@ssf@@@ATL@@QAEPAVGlyph@ssf@@XZ ENDP ; ATL::CAutoPtr<ssf::Glyph>::Detach
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Attach@?$CAutoPtr@VRow@ssf@@@ATL@@QAEXPAVRow@ssf@@@Z
_TEXT	SEGMENT
?Attach@?$CAutoPtr@VRow@ssf@@@ATL@@QAEXPAVRow@ssf@@@Z PROC ; ATL::CAutoPtr<ssf::Row>::Attach, COMDAT
; _this$ = eax
; _p$ = ecx

; 871  : 		ATLASSUME( m_p == NULL );
; 872  : 		m_p = p;

	mov	DWORD PTR [eax], ecx

; 873  : 	}

	ret	0
?Attach@?$CAutoPtr@VRow@ssf@@@ATL@@QAEXPAVRow@ssf@@@Z ENDP ; ATL::CAutoPtr<ssf::Row>::Attach
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??C?$CAutoPtr@VRow@ssf@@@ATL@@QBEPAVRow@ssf@@XZ
_TEXT	SEGMENT
??C?$CAutoPtr@VRow@ssf@@@ATL@@QBEPAVRow@ssf@@XZ PROC	; ATL::CAutoPtr<ssf::Row>::operator->, COMDAT
; _this$ = eax

; 864  : 		ATLASSUME( m_p != NULL );
; 865  : 		return( m_p );

	mov	eax, DWORD PTR [eax]

; 866  : 	}

	ret	0
??C?$CAutoPtr@VRow@ssf@@@ATL@@QBEPAVRow@ssf@@XZ ENDP	; ATL::CAutoPtr<ssf::Row>::operator->
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??B?$CAutoPtr@VRow@ssf@@@ATL@@QBEPAVRow@ssf@@XZ
_TEXT	SEGMENT
??B?$CAutoPtr@VRow@ssf@@@ATL@@QBEPAVRow@ssf@@XZ PROC	; ATL::CAutoPtr<ssf::Row>::operator ssf::Row *, COMDAT
; _this$ = eax

; 860  : 		return( m_p );

	mov	eax, DWORD PTR [eax]

; 861  : 	}

	ret	0
??B?$CAutoPtr@VRow@ssf@@@ATL@@QBEPAVRow@ssf@@XZ ENDP	; ATL::CAutoPtr<ssf::Row>::operator ssf::Row *
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAutoPtr@VRow@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CAutoPtr@VRow@ssf@@@ATL@@QAE@XZ PROC		; ATL::CAutoPtr<ssf::Row>::CAutoPtr<ssf::Row>, COMDAT
; _this$ = eax

; 777  : 	{

	mov	DWORD PTR [eax], 0

; 778  : 	}

	ret	0
??0?$CAutoPtr@VRow@ssf@@@ATL@@QAE@XZ ENDP		; ATL::CAutoPtr<ssf::Row>::CAutoPtr<ssf::Row>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??C?$CAutoPtr@VGlyph@ssf@@@ATL@@QBEPAVGlyph@ssf@@XZ
_TEXT	SEGMENT
??C?$CAutoPtr@VGlyph@ssf@@@ATL@@QBEPAVGlyph@ssf@@XZ PROC ; ATL::CAutoPtr<ssf::Glyph>::operator->, COMDAT
; _this$ = eax

; 864  : 		ATLASSUME( m_p != NULL );
; 865  : 		return( m_p );

	mov	eax, DWORD PTR [eax]

; 866  : 	}

	ret	0
??C?$CAutoPtr@VGlyph@ssf@@@ATL@@QBEPAVGlyph@ssf@@XZ ENDP ; ATL::CAutoPtr<ssf::Glyph>::operator->
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??B?$CAutoPtr@VGlyph@ssf@@@ATL@@QBEPAVGlyph@ssf@@XZ
_TEXT	SEGMENT
??B?$CAutoPtr@VGlyph@ssf@@@ATL@@QBEPAVGlyph@ssf@@XZ PROC ; ATL::CAutoPtr<ssf::Glyph>::operator ssf::Glyph *, COMDAT
; _this$ = eax

; 860  : 		return( m_p );

	mov	eax, DWORD PTR [eax]

; 861  : 	}

	ret	0
??B?$CAutoPtr@VGlyph@ssf@@@ATL@@QBEPAVGlyph@ssf@@XZ ENDP ; ATL::CAutoPtr<ssf::Glyph>::operator ssf::Glyph *
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@PAVGlyph@ssf@@@Z
_TEXT	SEGMENT
??0?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@PAVGlyph@ssf@@@Z PROC ; ATL::CAutoPtr<ssf::Glyph>::CAutoPtr<ssf::Glyph>, COMDAT
; _this$ = eax
; _p$ = ecx

; 790  : 	{

	mov	DWORD PTR [eax], ecx

; 791  : 	}

	ret	0
??0?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@PAVGlyph@ssf@@@Z ENDP ; ATL::CAutoPtr<ssf::Glyph>::CAutoPtr<ssf::Glyph>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@AAV01@@Z
_TEXT	SEGMENT
??0?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@AAV01@@Z PROC	; ATL::CAutoPtr<ssf::Glyph>::CAutoPtr<ssf::Glyph>, COMDAT
; _this$ = eax
; _p$ = ecx

; 785  : 	{
; 786  : 		m_p = p.Detach();  // Transfer ownership

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [eax], edx

; 787  : 	}

	ret	0
??0?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@AAV01@@Z ENDP	; ATL::CAutoPtr<ssf::Glyph>::CAutoPtr<ssf::Glyph>
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
_TEXT	ENDS
;	COMDAT ??0SubRect@ssf@@QAE@ABVCRect@@M@Z
_TEXT	SEGMENT
_l$ = 8							; size = 4
??0SubRect@ssf@@QAE@ABVCRect@@M@Z PROC			; ssf::SubRect::SubRect, COMDAT
; _this$ = eax
; _r$ = ecx

; 132  : 		SubRect(const CRect& r, float l) : rect(r), layer(l) {}

	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR [ecx]
	fld	DWORD PTR _l$[ebp]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	fstp	DWORD PTR [eax+16]
	mov	DWORD PTR [eax+12], ecx
	pop	ebp
	ret	4
??0SubRect@ssf@@QAE@ABVCRect@@M@Z ENDP			; ssf::SubRect::SubRect
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\fontwrapper.h
_TEXT	ENDS
;	COMDAT ?GetTextMetric@FontWrapper@ssf@@QAEABUtagTEXTMETRICW@@XZ
_TEXT	SEGMENT
?GetTextMetric@FontWrapper@ssf@@QAEABUtagTEXTMETRICW@@XZ PROC ; ssf::FontWrapper::GetTextMetric, COMDAT
; _this$ = eax

; 38   : 		const TEXTMETRIC& GetTextMetric() {return m_tm;}

	add	eax, 12					; 0000000cH
	ret	0
?GetTextMetric@FontWrapper@ssf@@QAEABUtagTEXTMETRICW@@XZ ENDP ; ssf::FontWrapper::GetTextMetric
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??BFontWrapper@ssf@@QBEPAUHFONT__@@XZ
_TEXT	SEGMENT
??BFontWrapper@ssf@@QBEPAUHFONT__@@XZ PROC		; ssf::FontWrapper::operator HFONT__ *, COMDAT
; _this$ = eax

; 36   : 		operator HFONT() const {return m_hFont;}

	mov	eax, DWORD PTR [eax+4]
	ret	0
??BFontWrapper@ssf@@QBEPAUHFONT__@@XZ ENDP		; ssf::FontWrapper::operator HFONT__ *
; Function compile flags: /Ogtp
;	COMDAT ??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CPair::~CPair, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN9@CPair
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN9@CPair:
	ret	0
??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CPair::~CPair
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::~CNode, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN11@CNode@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN11@CNode@2:
	ret	0
??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::~CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEPAXI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	eax, DWORD PTR [esi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN17@scalar@20
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN17@scalar@20:
	mov	eax, esi
	ret	0
??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEPAXI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
_TEXT	ENDS
;	COMDAT ?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::FreePlexes, COMDAT
; _this$ = edi

; 2760 : 	m_pFree = NULL;
; 2761 : 	if( m_pBlocks != NULL )

	mov	eax, DWORD PTR [edi+40]
	mov	DWORD PTR [edi+44], 0
	test	eax, eax
	je	SHORT $LN1@FreePlexes
	push	esi
	npad	1

; 2762 : 	{
; 2763 : 		m_pBlocks->FreeDataChain();

$LL5@FreePlexes:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, esi
	test	esi, esi
	jne	SHORT $LL5@FreePlexes

; 2764 : 		m_pBlocks = NULL;

	mov	DWORD PTR [edi+40], esi
	pop	esi
$LN1@FreePlexes:

; 2765 : 	}
; 2766 : }

	ret	0
?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::FreePlexes
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffecH
	DD	FLAT:__catch$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z$0
__tryblocktable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z$2
__ehfuncinfo$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z
_TEXT	SEGMENT
_e$163674 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_nBins$ = 12						; size = 4
_bAllocNow$ = 16					; size = 1
?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::InitHashTable, COMDAT

; 2598 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2599 : 	ATLASSUME( m_nElements == 0 );
; 2600 : 	ATLASSERT( nBins > 0 );
; 2601 : 
; 2602 : 	if( m_ppBins != NULL )

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR _nBins$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	eax, eax
	je	SHORT $LN14@InitHashTa

; 2603 : 	{
; 2604 : 		delete[] m_ppBins;

	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2605 : 		m_ppBins = NULL;

	mov	DWORD PTR [esi], 0
$LN14@InitHashTa:

; 2606 : 	}
; 2607 : 
; 2608 : 	if( bAllocNow )

	cmp	BYTE PTR _bAllocNow$[ebp], 0
	je	$LN13@InitHashTa

; 2609 : 	{
; 2610 : 		ATLTRY( m_ppBins = new CNode*[nBins] );

	xor	ecx, ecx
	mov	eax, edi
	mov	edx, 4
	mul	edx
	seto	cl
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN26@InitHashTa
__catch$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z$0:
	mov	ecx, DWORD PTR _e$163674[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN28@InitHashTa
	ret	0
$LN28@InitHashTa:
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _nBins$[ebp]
$LN26@InitHashTa:

; 2611 : 		if( m_ppBins == NULL )

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN10@InitHashTa

; 2612 : 		{
; 2613 : 			return false;

	xor	al, al

; 2622 : 
; 2623 : 	return true;
; 2624 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN10@InitHashTa:

; 2614 : 		}
; 2615 : 
; 2616 : 		ATLENSURE( UINT_MAX / sizeof( CNode* ) >= nBins );

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN9@InitHashTa
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN31@InitHashTa:
$LN9@InitHashTa:

; 2617 : 		memset( m_ppBins, 0, sizeof( CNode* )*nBins );

	lea	ecx, DWORD PTR [edi*4]
	push	ecx
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN13@InitHashTa:

; 2618 : 	}
; 2619 : 	m_nBins = nBins;
; 2620 : 
; 2621 : 	UpdateRehashThresholds();

	mov	ecx, esi
	mov	DWORD PTR [esi+8], edi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::UpdateRehashThresholds

; 2622 : 
; 2623 : 	return true;
; 2624 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	al, 1
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN30@InitHashTa:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::InitHashTable
; Function compile flags: /Ogtp
;	COMDAT ?CallConstructors@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@CAXPAUPoint@ssf@@I@Z
_TEXT	SEGMENT
?CallConstructors@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@CAXPAUPoint@ssf@@I@Z PROC ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::CallConstructors, COMDAT

; 1133 : 	size_t iElement = 0;
; 1134 : 
; 1135 : 	_ATLTRY
; 1136 : 	{
; 1137 : 		for( iElement = 0; iElement < nElements; iElement++ )
; 1138 : 		{
; 1139 : 			::new( pElements+iElement ) E;
; 1140 : 		}
; 1141 : 	}
; 1142 : 	_ATLCATCHALL()
; 1143 : 	{
; 1144 : 		while( iElement > 0 )
; 1145 : 		{
; 1146 : 			iElement--;
; 1147 : 			pElements[iElement].~E();
; 1148 : 		}
; 1149 : 
; 1150 : 		_ATLRETHROW;
; 1151 : 	}
; 1152 : }

	ret	0
?CallConstructors@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@CAXPAUPoint@ssf@@I@Z ENDP ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::CallConstructors
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CPair::~CPair, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN9@CPair@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN9@CPair@2:
	ret	0
??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CPair::~CPair
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CPair::~CPair, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN9@CPair@3
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN9@CPair@3:
	ret	0
??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CPair::~CPair
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CPair::~CPair, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN9@CPair@4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN9@CPair@4:
	ret	0
??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CPair::~CPair
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CPair::~CPair, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN9@CPair@5
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN9@CPair@5:
	ret	0
??1CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CPair::~CPair
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::~CNode, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN11@CNode@3
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN11@CNode@3:
	ret	0
??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::~CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::~CNode, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN11@CNode@4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN11@CNode@4:
	ret	0
??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::~CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::~CNode, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN11@CNode@5
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN11@CNode@5:
	ret	0
??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::~CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::~CNode, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN11@CNode@6
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN11@CNode@6:
	ret	0
??1CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::~CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAXI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	eax, DWORD PTR [esi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN17@scalar@21
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN17@scalar@21:
	mov	eax, esi
	ret	0
??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAXI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEPAXI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	eax, DWORD PTR [esi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN17@scalar@22
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN17@scalar@22:
	mov	eax, esi
	ret	0
??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEPAXI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEPAXI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	eax, DWORD PTR [esi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN17@scalar@23
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN17@scalar@23:
	mov	eax, esi
	ret	0
??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEPAXI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEPAXI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	eax, DWORD PTR [esi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN17@scalar@24
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN17@scalar@24:
	mov	eax, esi
	ret	0
??_GCNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEPAXI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAll, COMDAT
; _this$ = esi

; 1480 : 	while( m_nElements > 0 )

	cmp	DWORD PTR [esi+8], 0
	jbe	SHORT $LN7@RemoveAll
$LL19@RemoveAll:

; 1481 : 	{
; 1482 : 		CNode* pKill = m_pHead;

	mov	eax, DWORD PTR [esi]

; 1483 : 		ATLENSURE( pKill != NULL );

	test	eax, eax
	je	SHORT $LN111@RemoveAll

; 1484 : 
; 1485 : 		m_pHead = m_pHead->m_pNext;

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx

; 1486 : 		FreeNode( pKill );

	push	eax
	mov	ecx, esi
	call	?FreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::FreeNode
	cmp	DWORD PTR [esi+8], 0
	ja	SHORT $LL19@RemoveAll
$LN7@RemoveAll:

; 1487 : 	}
; 1488 : 
; 1489 : 	ATLASSUME( m_nElements == 0 );
; 1490 : 	m_pHead = NULL;
; 1491 : 	m_pTail = NULL;
; 1492 : 	m_pFree = NULL;
; 1493 : 
; 1494 : 	if( m_pBlocks != NULL )

	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+16], 0
	test	eax, eax
	je	SHORT $LN1@RemoveAll
	push	edi
	npad	6

; 1495 : 	{
; 1496 : 		m_pBlocks->FreeDataChain();

$LL106@RemoveAll:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL106@RemoveAll

; 1497 : 		m_pBlocks = NULL;

	mov	DWORD PTR [esi+12], edi
	pop	edi
$LN1@RemoveAll:

; 1498 : 	}
; 1499 : }

	ret	0
$LN111@RemoveAll:

; 1483 : 		ATLENSURE( pKill != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN115@RemoveAll:
$LN114@RemoveAll:
	int	3
?RemoveAll@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z
_TEXT	SEGMENT
?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FindNextNode, COMDAT
; _this$ = edi
; _pNode$ = eax

; 3089 : 	CNode* pNext;
; 3090 : 
; 3091 : 	if(pNode == NULL)

	test	eax, eax
	jne	SHORT $LN6@FindNextNo@5

; 3119 : }

	ret	0
$LN6@FindNextNo@5:

; 3092 : 	{
; 3093 : 		ATLASSERT(FALSE);
; 3094 : 		return NULL;
; 3095 : 	}
; 3096 : 
; 3097 : 	if( pNode->m_pNext != NULL )

	mov	ecx, DWORD PTR [eax+24]
	test	ecx, ecx

; 3098 : 	{
; 3099 : 		pNext = pNode->m_pNext;
; 3100 : 	}
; 3101 : 	else

	jne	SHORT $LN2@FindNextNo@5

; 3102 : 	{
; 3103 : 		UINT iBin;
; 3104 : 
; 3105 : 		pNext = NULL;
; 3106 : 		iBin = (pNode->GetHash()%m_nBins)+1;

	mov	eax, DWORD PTR [eax+28]
	push	esi
	mov	esi, DWORD PTR [edi+8]
	xor	edx, edx
	div	esi
	inc	edx
$LL3@FindNextNo@5:

; 3107 : 		while( (pNext == NULL) && (iBin < m_nBins) )

	cmp	edx, esi
	jae	SHORT $LN13@FindNextNo@5
	mov	eax, DWORD PTR [edi]

; 3108 : 		{
; 3109 : 			if( m_ppBins[iBin] != NULL )

	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN1@FindNextNo@5

; 3110 : 			{
; 3111 : 				pNext = m_ppBins[iBin];

	mov	ecx, DWORD PTR [eax]
$LN1@FindNextNo@5:

; 3112 : 			}
; 3113 : 
; 3114 : 			iBin++;

	inc	edx
	test	ecx, ecx
	je	SHORT $LL3@FindNextNo@5
$LN13@FindNextNo@5:
	pop	esi
$LN2@FindNextNo@5:

; 3115 : 		}
; 3116 : 	}
; 3117 : 
; 3118 : 	return( pNext );

	mov	eax, ecx

; 3119 : }

	ret	0
?FindNextNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PAV312@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FindNextNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreePlexes, COMDAT
; _this$ = edi

; 2760 : 	m_pFree = NULL;
; 2761 : 	if( m_pBlocks != NULL )

	mov	eax, DWORD PTR [edi+40]
	mov	DWORD PTR [edi+44], 0
	test	eax, eax
	je	SHORT $LN1@FreePlexes@2
	push	esi
	npad	1

; 2762 : 	{
; 2763 : 		m_pBlocks->FreeDataChain();

$LL5@FreePlexes@2:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, esi
	test	esi, esi
	jne	SHORT $LL5@FreePlexes@2

; 2764 : 		m_pBlocks = NULL;

	mov	DWORD PTR [edi+40], esi
	pop	esi
$LN1@FreePlexes@2:

; 2765 : 	}
; 2766 : }

	ret	0
?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreePlexes
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffecH
	DD	FLAT:__catch$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z$0
__tryblocktable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z$2
__ehfuncinfo$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z
_TEXT	SEGMENT
_e$162336 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_nBins$ = 12						; size = 4
_bAllocNow$ = 16					; size = 1
?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::InitHashTable, COMDAT

; 2598 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2599 : 	ATLASSUME( m_nElements == 0 );
; 2600 : 	ATLASSERT( nBins > 0 );
; 2601 : 
; 2602 : 	if( m_ppBins != NULL )

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR _nBins$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	eax, eax
	je	SHORT $LN14@InitHashTa@2

; 2603 : 	{
; 2604 : 		delete[] m_ppBins;

	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2605 : 		m_ppBins = NULL;

	mov	DWORD PTR [esi], 0
$LN14@InitHashTa@2:

; 2606 : 	}
; 2607 : 
; 2608 : 	if( bAllocNow )

	cmp	BYTE PTR _bAllocNow$[ebp], 0
	je	$LN13@InitHashTa@2

; 2609 : 	{
; 2610 : 		ATLTRY( m_ppBins = new CNode*[nBins] );

	xor	ecx, ecx
	mov	eax, edi
	mov	edx, 4
	mul	edx
	seto	cl
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN26@InitHashTa@2
__catch$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z$0:
	mov	ecx, DWORD PTR _e$162336[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN28@InitHashTa@2
	ret	0
$LN28@InitHashTa@2:
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _nBins$[ebp]
$LN26@InitHashTa@2:

; 2611 : 		if( m_ppBins == NULL )

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN10@InitHashTa@2

; 2612 : 		{
; 2613 : 			return false;

	xor	al, al

; 2622 : 
; 2623 : 	return true;
; 2624 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN10@InitHashTa@2:

; 2614 : 		}
; 2615 : 
; 2616 : 		ATLENSURE( UINT_MAX / sizeof( CNode* ) >= nBins );

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN9@InitHashTa@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN31@InitHashTa@2:
$LN9@InitHashTa@2:

; 2617 : 		memset( m_ppBins, 0, sizeof( CNode* )*nBins );

	lea	ecx, DWORD PTR [edi*4]
	push	ecx
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN13@InitHashTa@2:

; 2618 : 	}
; 2619 : 	m_nBins = nBins;
; 2620 : 
; 2621 : 	UpdateRehashThresholds();

	mov	ecx, esi
	mov	DWORD PTR [esi+8], edi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::UpdateRehashThresholds

; 2622 : 
; 2623 : 	return true;
; 2624 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	al, 1
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN30@InitHashTa@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::InitHashTable
; Function compile flags: /Ogtp
;	COMDAT ?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreePlexes, COMDAT
; _this$ = edi

; 2760 : 	m_pFree = NULL;
; 2761 : 	if( m_pBlocks != NULL )

	mov	eax, DWORD PTR [edi+40]
	mov	DWORD PTR [edi+44], 0
	test	eax, eax
	je	SHORT $LN1@FreePlexes@3
	push	esi
	npad	1

; 2762 : 	{
; 2763 : 		m_pBlocks->FreeDataChain();

$LL5@FreePlexes@3:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, esi
	test	esi, esi
	jne	SHORT $LL5@FreePlexes@3

; 2764 : 		m_pBlocks = NULL;

	mov	DWORD PTR [edi+40], esi
	pop	esi
$LN1@FreePlexes@3:

; 2765 : 	}
; 2766 : }

	ret	0
?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreePlexes
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffecH
	DD	FLAT:__catch$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z$0
__tryblocktable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z$2
__ehfuncinfo$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z
_TEXT	SEGMENT
_e$162040 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_nBins$ = 12						; size = 4
_bAllocNow$ = 16					; size = 1
?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::InitHashTable, COMDAT

; 2598 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2599 : 	ATLASSUME( m_nElements == 0 );
; 2600 : 	ATLASSERT( nBins > 0 );
; 2601 : 
; 2602 : 	if( m_ppBins != NULL )

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR _nBins$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	eax, eax
	je	SHORT $LN14@InitHashTa@3

; 2603 : 	{
; 2604 : 		delete[] m_ppBins;

	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2605 : 		m_ppBins = NULL;

	mov	DWORD PTR [esi], 0
$LN14@InitHashTa@3:

; 2606 : 	}
; 2607 : 
; 2608 : 	if( bAllocNow )

	cmp	BYTE PTR _bAllocNow$[ebp], 0
	je	$LN13@InitHashTa@3

; 2609 : 	{
; 2610 : 		ATLTRY( m_ppBins = new CNode*[nBins] );

	xor	ecx, ecx
	mov	eax, edi
	mov	edx, 4
	mul	edx
	seto	cl
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN26@InitHashTa@3
__catch$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z$0:
	mov	ecx, DWORD PTR _e$162040[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN28@InitHashTa@3
	ret	0
$LN28@InitHashTa@3:
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _nBins$[ebp]
$LN26@InitHashTa@3:

; 2611 : 		if( m_ppBins == NULL )

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN10@InitHashTa@3

; 2612 : 		{
; 2613 : 			return false;

	xor	al, al

; 2622 : 
; 2623 : 	return true;
; 2624 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN10@InitHashTa@3:

; 2614 : 		}
; 2615 : 
; 2616 : 		ATLENSURE( UINT_MAX / sizeof( CNode* ) >= nBins );

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN9@InitHashTa@3
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN31@InitHashTa@3:
$LN9@InitHashTa@3:

; 2617 : 		memset( m_ppBins, 0, sizeof( CNode* )*nBins );

	lea	ecx, DWORD PTR [edi*4]
	push	ecx
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN13@InitHashTa@3:

; 2618 : 	}
; 2619 : 	m_nBins = nBins;
; 2620 : 
; 2621 : 	UpdateRehashThresholds();

	mov	ecx, esi
	mov	DWORD PTR [esi+8], edi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::UpdateRehashThresholds

; 2622 : 
; 2623 : 	return true;
; 2624 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	al, 1
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN30@InitHashTa@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::InitHashTable
; Function compile flags: /Ogtp
;	COMDAT ?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreePlexes, COMDAT
; _this$ = edi

; 2760 : 	m_pFree = NULL;
; 2761 : 	if( m_pBlocks != NULL )

	mov	eax, DWORD PTR [edi+40]
	mov	DWORD PTR [edi+44], 0
	test	eax, eax
	je	SHORT $LN1@FreePlexes@4
	push	esi
	npad	1

; 2762 : 	{
; 2763 : 		m_pBlocks->FreeDataChain();

$LL5@FreePlexes@4:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, esi
	test	esi, esi
	jne	SHORT $LL5@FreePlexes@4

; 2764 : 		m_pBlocks = NULL;

	mov	DWORD PTR [edi+40], esi
	pop	esi
$LN1@FreePlexes@4:

; 2765 : 	}
; 2766 : }

	ret	0
?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreePlexes
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffecH
	DD	FLAT:__catch$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z$0
__tryblocktable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z$2
__ehfuncinfo$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z
_TEXT	SEGMENT
_e$161670 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_nBins$ = 12						; size = 4
_bAllocNow$ = 16					; size = 1
?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::InitHashTable, COMDAT

; 2598 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2599 : 	ATLASSUME( m_nElements == 0 );
; 2600 : 	ATLASSERT( nBins > 0 );
; 2601 : 
; 2602 : 	if( m_ppBins != NULL )

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR _nBins$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	eax, eax
	je	SHORT $LN14@InitHashTa@4

; 2603 : 	{
; 2604 : 		delete[] m_ppBins;

	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2605 : 		m_ppBins = NULL;

	mov	DWORD PTR [esi], 0
$LN14@InitHashTa@4:

; 2606 : 	}
; 2607 : 
; 2608 : 	if( bAllocNow )

	cmp	BYTE PTR _bAllocNow$[ebp], 0
	je	$LN13@InitHashTa@4

; 2609 : 	{
; 2610 : 		ATLTRY( m_ppBins = new CNode*[nBins] );

	xor	ecx, ecx
	mov	eax, edi
	mov	edx, 4
	mul	edx
	seto	cl
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN26@InitHashTa@4
__catch$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z$0:
	mov	ecx, DWORD PTR _e$161670[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN28@InitHashTa@4
	ret	0
$LN28@InitHashTa@4:
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _nBins$[ebp]
$LN26@InitHashTa@4:

; 2611 : 		if( m_ppBins == NULL )

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN10@InitHashTa@4

; 2612 : 		{
; 2613 : 			return false;

	xor	al, al

; 2622 : 
; 2623 : 	return true;
; 2624 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN10@InitHashTa@4:

; 2614 : 		}
; 2615 : 
; 2616 : 		ATLENSURE( UINT_MAX / sizeof( CNode* ) >= nBins );

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN9@InitHashTa@4
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN31@InitHashTa@4:
$LN9@InitHashTa@4:

; 2617 : 		memset( m_ppBins, 0, sizeof( CNode* )*nBins );

	lea	ecx, DWORD PTR [edi*4]
	push	ecx
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN13@InitHashTa@4:

; 2618 : 	}
; 2619 : 	m_nBins = nBins;
; 2620 : 
; 2621 : 	UpdateRehashThresholds();

	mov	ecx, esi
	mov	DWORD PTR [esi+8], edi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::UpdateRehashThresholds

; 2622 : 
; 2623 : 	return true;
; 2624 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	al, 1
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN30@InitHashTa@4:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::InitHashTable
; Function compile flags: /Ogtp
;	COMDAT ?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreePlexes, COMDAT
; _this$ = edi

; 2760 : 	m_pFree = NULL;
; 2761 : 	if( m_pBlocks != NULL )

	mov	eax, DWORD PTR [edi+40]
	mov	DWORD PTR [edi+44], 0
	test	eax, eax
	je	SHORT $LN1@FreePlexes@5
	push	esi
	npad	1

; 2762 : 	{
; 2763 : 		m_pBlocks->FreeDataChain();

$LL5@FreePlexes@5:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, esi
	test	esi, esi
	jne	SHORT $LL5@FreePlexes@5

; 2764 : 		m_pBlocks = NULL;

	mov	DWORD PTR [edi+40], esi
	pop	esi
$LN1@FreePlexes@5:

; 2765 : 	}
; 2766 : }

	ret	0
?FreePlexes@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreePlexes
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffecH
	DD	FLAT:__catch$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z$0
__tryblocktable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z$2
__ehfuncinfo$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z
_TEXT	SEGMENT
_e$161374 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_nBins$ = 12						; size = 4
_bAllocNow$ = 16					; size = 1
?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::InitHashTable, COMDAT

; 2598 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2599 : 	ATLASSUME( m_nElements == 0 );
; 2600 : 	ATLASSERT( nBins > 0 );
; 2601 : 
; 2602 : 	if( m_ppBins != NULL )

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR _nBins$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	eax, eax
	je	SHORT $LN14@InitHashTa@5

; 2603 : 	{
; 2604 : 		delete[] m_ppBins;

	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2605 : 		m_ppBins = NULL;

	mov	DWORD PTR [esi], 0
$LN14@InitHashTa@5:

; 2606 : 	}
; 2607 : 
; 2608 : 	if( bAllocNow )

	cmp	BYTE PTR _bAllocNow$[ebp], 0
	je	$LN13@InitHashTa@5

; 2609 : 	{
; 2610 : 		ATLTRY( m_ppBins = new CNode*[nBins] );

	xor	ecx, ecx
	mov	eax, edi
	mov	edx, 4
	mul	edx
	seto	cl
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN26@InitHashTa@5
__catch$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z$0:
	mov	ecx, DWORD PTR _e$161374[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN28@InitHashTa@5
	ret	0
$LN28@InitHashTa@5:
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _nBins$[ebp]
$LN26@InitHashTa@5:

; 2611 : 		if( m_ppBins == NULL )

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN10@InitHashTa@5

; 2612 : 		{
; 2613 : 			return false;

	xor	al, al

; 2622 : 
; 2623 : 	return true;
; 2624 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN10@InitHashTa@5:

; 2614 : 		}
; 2615 : 
; 2616 : 		ATLENSURE( UINT_MAX / sizeof( CNode* ) >= nBins );

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN9@InitHashTa@5
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN31@InitHashTa@5:
$LN9@InitHashTa@5:

; 2617 : 		memset( m_ppBins, 0, sizeof( CNode* )*nBins );

	lea	ecx, DWORD PTR [edi*4]
	push	ecx
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN13@InitHashTa@5:

; 2618 : 	}
; 2619 : 	m_nBins = nBins;
; 2620 : 
; 2621 : 	UpdateRehashThresholds();

	mov	ecx, esi
	mov	DWORD PTR [esi+8], edi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::UpdateRehashThresholds

; 2622 : 
; 2623 : 	return true;
; 2624 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	al, 1
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN30@InitHashTa@5:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::InitHashTable
; Function compile flags: /Ogtp
;	COMDAT ?CallConstructors@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@CAXPAUtagPOINT@@I@Z
_TEXT	SEGMENT
?CallConstructors@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@CAXPAUtagPOINT@@I@Z PROC ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CallConstructors, COMDAT

; 1133 : 	size_t iElement = 0;
; 1134 : 
; 1135 : 	_ATLTRY
; 1136 : 	{
; 1137 : 		for( iElement = 0; iElement < nElements; iElement++ )
; 1138 : 		{
; 1139 : 			::new( pElements+iElement ) E;
; 1140 : 		}
; 1141 : 	}
; 1142 : 	_ATLCATCHALL()
; 1143 : 	{
; 1144 : 		while( iElement > 0 )
; 1145 : 		{
; 1146 : 			iElement--;
; 1147 : 			pElements[iElement].~E();
; 1148 : 		}
; 1149 : 
; 1150 : 		_ATLRETHROW;
; 1151 : 	}
; 1152 : }

	ret	0
?CallConstructors@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@CAXPAUtagPOINT@@I@Z ENDP ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CallConstructors
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEXXZ PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::RemoveAll, COMDAT
; _this$ = esi

; 1480 : 	while( m_nElements > 0 )

	cmp	DWORD PTR [esi+8], 0
	jbe	SHORT $LN7@RemoveAll@2
$LL19@RemoveAll@2:

; 1481 : 	{
; 1482 : 		CNode* pKill = m_pHead;

	mov	eax, DWORD PTR [esi]

; 1483 : 		ATLENSURE( pKill != NULL );

	test	eax, eax
	je	SHORT $LN42@RemoveAll@2

; 1484 : 
; 1485 : 		m_pHead = m_pHead->m_pNext;

	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx

; 1486 : 		FreeNode( pKill );

	push	eax
	mov	ecx, esi
	call	?FreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::FreeNode
	cmp	DWORD PTR [esi+8], 0
	ja	SHORT $LL19@RemoveAll@2
$LN7@RemoveAll@2:

; 1487 : 	}
; 1488 : 
; 1489 : 	ATLASSUME( m_nElements == 0 );
; 1490 : 	m_pHead = NULL;
; 1491 : 	m_pTail = NULL;
; 1492 : 	m_pFree = NULL;
; 1493 : 
; 1494 : 	if( m_pBlocks != NULL )

	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+16], 0
	test	eax, eax
	je	SHORT $LN1@RemoveAll@2
	push	edi
	npad	6

; 1495 : 	{
; 1496 : 		m_pBlocks->FreeDataChain();

$LL37@RemoveAll@2:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL37@RemoveAll@2

; 1497 : 		m_pBlocks = NULL;

	mov	DWORD PTR [esi+12], edi
	pop	edi
$LN1@RemoveAll@2:

; 1498 : 	}
; 1499 : }

	ret	0
$LN42@RemoveAll@2:

; 1483 : 		ATLENSURE( pKill != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN46@RemoveAll@2:
$LN45@RemoveAll@2:
	int	3
?RemoveAll@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::~CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >, COMDAT
; _this$ = esi

; 1504 : 	RemoveAll();

	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAll
??1?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::~CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetAt@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@PAU__POSITION@@@Z
_TEXT	SEGMENT
?GetAt@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@PAU__POSITION@@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetAt, COMDAT
; _pos$ = eax

; 1442 : 	ATLENSURE( pos != NULL );

	test	eax, eax
	jne	SHORT $LN9@GetAt
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetAt:
$LN9@GetAt:

; 1443 : 	CNode* pNode = (CNode*)pos;
; 1444 : 	return( pNode->m_element );

	add	eax, 8

; 1445 : }

	ret	0
$LN13@GetAt:
?GetAt@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@PAU__POSITION@@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetAt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNext@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
?GetNext@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@AAPAU__POSITION@@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetNext, COMDAT
; _pos$ = ecx

; 1394 : 	CNode* pNode;
; 1395 : 
; 1396 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN9@GetNext
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetNext:
$LN9@GetNext:

; 1397 : 	pNode = (CNode*)pos;
; 1398 : 	pos = POSITION( pNode->m_pNext );

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 1399 : 
; 1400 : 	return( pNode->m_element );

	add	eax, 8

; 1401 : }

	ret	0
$LN13@GetNext:
?GetNext@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetNext
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetTail@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@XZ
_TEXT	SEGMENT
?GetTail@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetTail, COMDAT
; _this$ = eax

; 1368 : 	ATLENSURE( m_pTail != NULL );

	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	jne	SHORT $LN9@GetTail
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetTail:
$LN9@GetTail:

; 1369 : 	return( m_pTail->m_element );

	add	eax, 8

; 1370 : }

	ret	0
$LN13@GetTail:
?GetTail@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetTail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHead@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@XZ
_TEXT	SEGMENT
?GetHead@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetHead, COMDAT
; _this$ = eax

; 1354 : 	ATLENSURE( m_pHead != NULL );

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	jne	SHORT $LN9@GetHead
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetHead:
$LN9@GetHead:

; 1355 : 	return( m_pHead->m_element );

	add	eax, 8

; 1356 : }

	ret	0
$LN13@GetHead:
?GetHead@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VRow@ssf@@@2@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetHead
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNext@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QBEABV?$CAutoPtr@VSubtitle@ssf@@@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
?GetNext@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QBEABV?$CAutoPtr@VSubtitle@ssf@@@2@AAPAU__POSITION@@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::GetNext, COMDAT
; _pos$ = ecx

; 1406 : 	CNode* pNode;
; 1407 : 
; 1408 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN9@GetNext@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetNext@2:
$LN9@GetNext@2:

; 1409 : 	pNode = (CNode*)pos;
; 1410 : 	pos = POSITION( pNode->m_pNext );

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 1411 : 
; 1412 : 	return( pNode->m_element );

	add	eax, 8

; 1413 : }

	ret	0
$LN13@GetNext@2:
?GetNext@?$CAtlList@V?$CAutoPtr@VSubtitle@ssf@@@ATL@@V?$CAutoPtrElementTraits@VSubtitle@ssf@@@2@@ATL@@QBEABV?$CAutoPtr@VSubtitle@ssf@@@2@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Subtitle>,ATL::CAutoPtrElementTraits<ssf::Subtitle> >::GetNext
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEAAVSubRect@ssf@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEAAVSubRect@ssf@@AAPAU__POSITION@@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNextValue, COMDAT

; 3070 : {

	push	ebp
	mov	ebp, esp

; 3071 : 	CNode* pNode;
; 3072 : 	CNode* pNext;
; 3073 : 
; 3074 : 	ATLASSUME( m_ppBins != NULL );
; 3075 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR _pos$[ebp]
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	edi
	mov	edi, DWORD PTR [eax]
	test	edi, edi
	jne	SHORT $LN9@GetNextVal
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN34@GetNextVal:
$LN9@GetNextVal:

; 3076 : 
; 3077 : 	pNode = (CNode*)pos;
; 3078 : 	pNext = FindNextNode( pNode );

	mov	ecx, DWORD PTR [edi+24]
	test	ecx, ecx
	jne	SHORT $LN31@GetNextVal
	mov	eax, DWORD PTR [edi+28]
	push	esi
	mov	esi, DWORD PTR [ebx+8]
	xor	edx, edx
	div	esi
	inc	edx
	npad	2
$LL21@GetNextVal:
	cmp	edx, esi
	jae	SHORT $LN32@GetNextVal
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN19@GetNextVal
	mov	ecx, DWORD PTR [eax]
$LN19@GetNextVal:
	inc	edx
	test	ecx, ecx
	je	SHORT $LL21@GetNextVal
$LN32@GetNextVal:
	pop	esi
$LN31@GetNextVal:

; 3079 : 
; 3080 : 	pos = POSITION( pNext );

	mov	edx, DWORD PTR _pos$[ebp]

; 3081 : 
; 3082 : 	return( pNode->m_value );

	lea	eax, DWORD PTR [edi+4]
	pop	edi
	mov	DWORD PTR [edx], ecx
	pop	ebx

; 3083 : }

	pop	ebp
	ret	8
$LN33@GetNextVal:
?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEAAVSubRect@ssf@@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNextValue
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNextKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
?GetNextKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@2@AAPAU__POSITION@@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNextKey, COMDAT

; 3034 : {

	push	ebp
	mov	ebp, esp

; 3035 : 	CNode* pNode;
; 3036 : 	CNode* pNext;
; 3037 : 
; 3038 : 	ATLASSUME( m_ppBins != NULL );
; 3039 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR _pos$[ebp]
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	edi
	mov	edi, DWORD PTR [eax]
	test	edi, edi
	jne	SHORT $LN9@GetNextKey
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN34@GetNextKey:
$LN9@GetNextKey:

; 3040 : 
; 3041 : 	pNode = (CNode*)pos;
; 3042 : 	pNext = FindNextNode( pNode );

	mov	ecx, DWORD PTR [edi+24]
	test	ecx, ecx
	jne	SHORT $LN31@GetNextKey
	mov	eax, DWORD PTR [edi+28]
	push	esi
	mov	esi, DWORD PTR [ebx+8]
	xor	edx, edx
	div	esi
	inc	edx
	npad	2
$LL21@GetNextKey:
	cmp	edx, esi
	jae	SHORT $LN32@GetNextKey
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN19@GetNextKey
	mov	ecx, DWORD PTR [eax]
$LN19@GetNextKey:
	inc	edx
	test	ecx, ecx
	je	SHORT $LL21@GetNextKey
$LN32@GetNextKey:
	pop	esi
$LN31@GetNextKey:

; 3043 : 
; 3044 : 	pos = POSITION( pNext );

	mov	edx, DWORD PTR _pos$[ebp]

; 3045 : 
; 3046 : 	return( pNode->m_key );

	mov	eax, edi
	pop	edi
	mov	DWORD PTR [edx], ecx
	pop	ebx

; 3047 : }

	pop	ebp
	ret	8
$LN33@GetNextKey:
?GetNextKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@2@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNextKey
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEAAPAVRenderedSubtitle@ssf@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEAAPAVRenderedSubtitle@ssf@@AAPAU__POSITION@@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNextValue, COMDAT

; 3070 : {

	push	ebp
	mov	ebp, esp

; 3071 : 	CNode* pNode;
; 3072 : 	CNode* pNext;
; 3073 : 
; 3074 : 	ATLASSUME( m_ppBins != NULL );
; 3075 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR _pos$[ebp]
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	edi
	mov	edi, DWORD PTR [eax]
	test	edi, edi
	jne	SHORT $LN9@GetNextVal@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN34@GetNextVal@2:
$LN9@GetNextVal@2:

; 3076 : 
; 3077 : 	pNode = (CNode*)pos;
; 3078 : 	pNext = FindNextNode( pNode );

	mov	ecx, DWORD PTR [edi+8]
	test	ecx, ecx
	jne	SHORT $LN31@GetNextVal@2
	mov	eax, DWORD PTR [edi+12]
	push	esi
	mov	esi, DWORD PTR [ebx+8]
	xor	edx, edx
	div	esi
	inc	edx
	npad	2
$LL21@GetNextVal@2:
	cmp	edx, esi
	jae	SHORT $LN32@GetNextVal@2
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN19@GetNextVal@2
	mov	ecx, DWORD PTR [eax]
$LN19@GetNextVal@2:
	inc	edx
	test	ecx, ecx
	je	SHORT $LL21@GetNextVal@2
$LN32@GetNextVal@2:
	pop	esi
$LN31@GetNextVal@2:

; 3079 : 
; 3080 : 	pos = POSITION( pNext );

	mov	edx, DWORD PTR _pos$[ebp]

; 3081 : 
; 3082 : 	return( pNode->m_value );

	lea	eax, DWORD PTR [edi+4]
	pop	edi
	mov	DWORD PTR [edx], ecx
	pop	ebx

; 3083 : }

	pop	ebp
	ret	8
$LN33@GetNextVal@2:
?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEAAPAVRenderedSubtitle@ssf@@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNextValue
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetAt@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@PAU__POSITION@@@Z
_TEXT	SEGMENT
?GetAt@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@PAU__POSITION@@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetAt, COMDAT
; _pos$ = eax

; 1442 : 	ATLENSURE( pos != NULL );

	test	eax, eax
	jne	SHORT $LN9@GetAt@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetAt@2:
$LN9@GetAt@2:

; 1443 : 	CNode* pNode = (CNode*)pos;
; 1444 : 	return( pNode->m_element );

	add	eax, 8

; 1445 : }

	ret	0
$LN13@GetAt@2:
?GetAt@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@PAU__POSITION@@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetAt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetPrev@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
?GetPrev@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetPrev, COMDAT
; _pos$ = ecx

; 1418 : 	CNode* pNode;
; 1419 : 
; 1420 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN9@GetPrev
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetPrev:
$LN9@GetPrev:

; 1421 : 	pNode = (CNode*)pos;
; 1422 : 	pos = POSITION( pNode->m_pPrev );

	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], edx

; 1423 : 
; 1424 : 	return( pNode->m_element );

	add	eax, 8

; 1425 : }

	ret	0
$LN13@GetPrev:
?GetPrev@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetPrev
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNext@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
?GetNext@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetNext, COMDAT
; _pos$ = ecx

; 1394 : 	CNode* pNode;
; 1395 : 
; 1396 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN9@GetNext@3
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetNext@3:
$LN9@GetNext@3:

; 1397 : 	pNode = (CNode*)pos;
; 1398 : 	pos = POSITION( pNode->m_pNext );

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 1399 : 
; 1400 : 	return( pNode->m_element );

	add	eax, 8

; 1401 : }

	ret	0
$LN13@GetNext@3:
?GetNext@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetNext
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNext@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBEABV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
?GetNext@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBEABV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetNext, COMDAT
; _pos$ = ecx

; 1406 : 	CNode* pNode;
; 1407 : 
; 1408 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN9@GetNext@4
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetNext@4:
$LN9@GetNext@4:

; 1409 : 	pNode = (CNode*)pos;
; 1410 : 	pos = POSITION( pNode->m_pNext );

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 1411 : 
; 1412 : 	return( pNode->m_element );

	add	eax, 8

; 1413 : }

	ret	0
$LN13@GetNext@4:
?GetNext@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QBEABV?$CAutoPtr@VGlyph@ssf@@@2@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetNext
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@XZ
_TEXT	SEGMENT
?GetTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetTail, COMDAT
; _this$ = eax

; 1368 : 	ATLENSURE( m_pTail != NULL );

	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	jne	SHORT $LN9@GetTail@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetTail@2:
$LN9@GetTail@2:

; 1369 : 	return( m_pTail->m_element );

	add	eax, 8

; 1370 : }

	ret	0
$LN13@GetTail@2:
?GetTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetTail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@XZ
_TEXT	SEGMENT
?GetHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetHead, COMDAT
; _this$ = eax

; 1354 : 	ATLENSURE( m_pHead != NULL );

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	jne	SHORT $LN9@GetHead@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetHead@2:
$LN9@GetHead@2:

; 1355 : 	return( m_pHead->m_element );

	add	eax, 8

; 1356 : }

	ret	0
$LN13@GetHead@2:
?GetHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEAAV?$CAutoPtr@VGlyph@ssf@@@2@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetHead
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEAAPAVGlyphPath@ssf@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEAAPAVGlyphPath@ssf@@AAPAU__POSITION@@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNextValue, COMDAT

; 3070 : {

	push	ebp
	mov	ebp, esp

; 3071 : 	CNode* pNode;
; 3072 : 	CNode* pNext;
; 3073 : 
; 3074 : 	ATLASSUME( m_ppBins != NULL );
; 3075 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR _pos$[ebp]
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	edi
	mov	edi, DWORD PTR [eax]
	test	edi, edi
	jne	SHORT $LN9@GetNextVal@3
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN34@GetNextVal@3:
$LN9@GetNextVal@3:

; 3076 : 
; 3077 : 	pNode = (CNode*)pos;
; 3078 : 	pNext = FindNextNode( pNode );

	mov	ecx, DWORD PTR [edi+8]
	test	ecx, ecx
	jne	SHORT $LN31@GetNextVal@3
	mov	eax, DWORD PTR [edi+12]
	push	esi
	mov	esi, DWORD PTR [ebx+8]
	xor	edx, edx
	div	esi
	inc	edx
	npad	2
$LL21@GetNextVal@3:
	cmp	edx, esi
	jae	SHORT $LN32@GetNextVal@3
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN19@GetNextVal@3
	mov	ecx, DWORD PTR [eax]
$LN19@GetNextVal@3:
	inc	edx
	test	ecx, ecx
	je	SHORT $LL21@GetNextVal@3
$LN32@GetNextVal@3:
	pop	esi
$LN31@GetNextVal@3:

; 3079 : 
; 3080 : 	pos = POSITION( pNext );

	mov	edx, DWORD PTR _pos$[ebp]

; 3081 : 
; 3082 : 	return( pNode->m_value );

	lea	eax, DWORD PTR [edi+4]
	pop	edi
	mov	DWORD PTR [edx], ecx
	pop	ebx

; 3083 : }

	pop	ebp
	ret	8
$LN33@GetNextVal@3:
?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEAAPAVGlyphPath@ssf@@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNextValue
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEAAPAVFontWrapper@ssf@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEAAPAVFontWrapper@ssf@@AAPAU__POSITION@@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNextValue, COMDAT

; 3070 : {

	push	ebp
	mov	ebp, esp

; 3071 : 	CNode* pNode;
; 3072 : 	CNode* pNext;
; 3073 : 
; 3074 : 	ATLASSUME( m_ppBins != NULL );
; 3075 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR _pos$[ebp]
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	edi
	mov	edi, DWORD PTR [eax]
	test	edi, edi
	jne	SHORT $LN9@GetNextVal@4
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN34@GetNextVal@4:
$LN9@GetNextVal@4:

; 3076 : 
; 3077 : 	pNode = (CNode*)pos;
; 3078 : 	pNext = FindNextNode( pNode );

	mov	ecx, DWORD PTR [edi+8]
	test	ecx, ecx
	jne	SHORT $LN31@GetNextVal@4
	mov	eax, DWORD PTR [edi+12]
	push	esi
	mov	esi, DWORD PTR [ebx+8]
	xor	edx, edx
	div	esi
	inc	edx
	npad	2
$LL21@GetNextVal@4:
	cmp	edx, esi
	jae	SHORT $LN32@GetNextVal@4
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN19@GetNextVal@4
	mov	ecx, DWORD PTR [eax]
$LN19@GetNextVal@4:
	inc	edx
	test	ecx, ecx
	je	SHORT $LL21@GetNextVal@4
$LN32@GetNextVal@4:
	pop	esi
$LN31@GetNextVal@4:

; 3079 : 
; 3080 : 	pos = POSITION( pNext );

	mov	edx, DWORD PTR _pos$[ebp]

; 3081 : 
; 3082 : 	return( pNode->m_value );

	lea	eax, DWORD PTR [edi+4]
	pop	edi
	mov	DWORD PTR [edx], ecx
	pop	ebx

; 3083 : }

	pop	ebp
	ret	8
$LN33@GetNextVal@4:
?GetNextValue@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEAAPAVFontWrapper@ssf@@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNextValue
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetAt@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@PAU__POSITION@@@Z
_TEXT	SEGMENT
?GetAt@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@PAU__POSITION@@@Z PROC ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetAt, COMDAT
; _pos$ = eax

; 1450 : 	ATLENSURE( pos != NULL );

	test	eax, eax
	jne	SHORT $LN9@GetAt@3
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetAt@3:
$LN9@GetAt@3:

; 1451 : 	CNode* pNode = (CNode*)pos;
; 1452 : 	return( pNode->m_element );

	add	eax, 8

; 1453 : }

	ret	0
$LN13@GetAt@3:
?GetAt@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@PAU__POSITION@@@Z ENDP ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetAt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNext@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
?GetNext@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@AAPAU__POSITION@@@Z PROC ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetNext, COMDAT
; _pos$ = ecx

; 1406 : 	CNode* pNode;
; 1407 : 
; 1408 : 	ATLENSURE( pos != NULL );

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN9@GetNext@5
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetNext@5:
$LN9@GetNext@5:

; 1409 : 	pNode = (CNode*)pos;
; 1410 : 	pos = POSITION( pNode->m_pNext );

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 1411 : 
; 1412 : 	return( pNode->m_element );

	add	eax, 8

; 1413 : }

	ret	0
$LN13@GetNext@5:
?GetNext@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@AAPAU__POSITION@@@Z ENDP ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetNext
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetHead@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@XZ
_TEXT	SEGMENT
?GetHead@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@XZ PROC ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetHead, COMDAT
; _this$ = eax

; 1361 : 	ATLENSURE( m_pHead != NULL );

	mov	eax, DWORD PTR [eax]
	test	eax, eax
	jne	SHORT $LN9@GetHead@3
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN14@GetHead@3:
$LN9@GetHead@3:

; 1362 : 	return( m_pHead->m_element );

	add	eax, 8

; 1363 : }

	ret	0
$LN13@GetHead@3:
?GetHead@?$CAtlList@UText@ssf@@V?$CElementTraits@UText@ssf@@@ATL@@@ATL@@QBEABUText@ssf@@XZ ENDP ; ATL::CAtlList<ssf::Text,ATL::CElementTraits<ssf::Text> >::GetHead
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1Background@ssf@@QAE@XZ
_TEXT	SEGMENT
??1Background@ssf@@QAE@XZ PROC				; ssf::Background::~Background, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax+24]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN9@Background
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN9@Background:
	ret	0
??1Background@ssf@@QAE@XZ ENDP				; ssf::Background::~Background
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1Font@ssf@@QAE@XZ
_TEXT	SEGMENT
??1Font@ssf@@QAE@XZ PROC				; ssf::Font::~Font, COMDAT
; _this$ = eax
	mov	eax, DWORD PTR [eax]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN9@Font
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN9@Font:
	ret	0
??1Font@ssf@@QAE@XZ ENDP				; ssf::Font::~Font
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1Style@ssf@@QAE@XZ
_TEXT	SEGMENT
??1Style@ssf@@QAE@XZ PROC				; ssf::Style::~Style, COMDAT
; _this$ = esi
	mov	eax, DWORD PTR [esi+176]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN11@Style
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN11@Style:
	mov	eax, DWORD PTR [esi+104]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN22@Style
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN22@Style:
	mov	eax, DWORD PTR [esi+88]
	test	eax, eax
	je	SHORT $LN29@Style
	push	eax
	call	_free
	add	esp, 4
$LN29@Style:
	mov	eax, DWORD PTR [esi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN43@Style
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN43@Style:
	ret	0
??1Style@ssf@@QAE@XZ ENDP				; ssf::Style::~Style
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAutoPtrList@VRow@ssf@@@ATL@@QAE@I@Z
_TEXT	SEGMENT
??0?$CAutoPtrList@VRow@ssf@@@ATL@@QAE@I@Z PROC		; ATL::CAutoPtrList<ssf::Row>::CAutoPtrList<ssf::Row>, COMDAT
; _this$ = eax

; 1314 : 	{

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], 10			; 0000000aH

; 1315 : 	}

	ret	0
??0?$CAutoPtrList@VRow@ssf@@@ATL@@QAE@I@Z ENDP		; ATL::CAutoPtrList<ssf::Row>::CAutoPtrList<ssf::Row>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$CAutoPtrList@VRow@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAutoPtrList@VRow@ssf@@@ATL@@QAE@XZ PROC		; ATL::CAutoPtrList<ssf::Row>::~CAutoPtrList<ssf::Row>, COMDAT
; _this$ = esi
	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAll
??1?$CAutoPtrList@VRow@ssf@@@ATL@@QAE@XZ ENDP		; ATL::CAutoPtrList<ssf::Row>::~CAutoPtrList<ssf::Row>
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.cpp
_TEXT	ENDS
;	COMDAT ?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@ABVCSize@@@Z
_TEXT	SEGMENT
tv329 = -4						; size = 4
tv292 = -4						; size = 4
_scale$ = 8						; size = 4
tv383 = 12						; size = 4
tv369 = 12						; size = 4
_frame$ = 12						; size = 4
_size$ = 16						; size = 4
?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@ABVCSize@@@Z PROC ; ssf::GetAlignPoint, COMDAT
; ___$ReturnUdt$ = edi
; _placement$ = esi

; 44   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx

; 45   : 		CPoint p;
; 46   : 
; 47   : 		p.x = frame.left;
; 48   : 		p.x += placement.pos.auto_x 
; 49   : 			? placement.align.h * (frame.Width() - size.cx)
; 50   : 			: placement.pos.x * scale.cx - placement.align.h * size.cx;

	cmp	BYTE PTR [esi+48], 0
	push	ebx
	mov	ebx, DWORD PTR _frame$[ebp]
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+4], 0
	mov	DWORD PTR tv292[ebp], eax
	mov	DWORD PTR [edi], eax
	je	SHORT $LN3@GetAlignPo
	mov	ecx, DWORD PTR [ebx+8]
	mov	edx, DWORD PTR _size$[ebp]
	sub	ecx, eax
	sub	ecx, DWORD PTR [edx]
	mov	DWORD PTR tv383[ebp], ecx
	fild	DWORD PTR tv383[ebp]
	fmul	DWORD PTR [esi+36]
	jmp	SHORT $LN4@GetAlignPo
$LN3@GetAlignPo:
	fld	DWORD PTR [esi+40]
	mov	eax, DWORD PTR _scale$[ebp]
	fmul	DWORD PTR [eax]
	mov	ecx, DWORD PTR _size$[ebp]
	fld	DWORD PTR [esi+36]
	fimul	DWORD PTR [ecx]
	fsubp	ST(1), ST(0)
$LN4@GetAlignPo:
	fiadd	DWORD PTR tv292[ebp]
	call	__ftol2_sse

; 51   : 
; 52   : 		p.y = frame.top;
; 53   : 		p.y += placement.pos.auto_y 
; 54   : 			? placement.align.v * (frame.Height() - size.cy) 
; 55   : 			: placement.pos.y * scale.cy - placement.align.v * size.cy;

	cmp	BYTE PTR [esi+49], 0
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR tv329[ebp], eax
	mov	DWORD PTR [edi+4], eax
	je	SHORT $LN5@GetAlignPo
	mov	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR [ebx+12]
	sub	edx, DWORD PTR [ecx+4]
	sub	edx, eax
	mov	DWORD PTR tv369[ebp], edx
	fild	DWORD PTR tv369[ebp]
	fmul	DWORD PTR [esi+32]
	fiadd	DWORD PTR tv329[ebp]
	call	__ftol2_sse
	mov	DWORD PTR [edi+4], eax

; 56   : 
; 57   : 		return p;

	mov	eax, edi
	pop	ebx

; 58   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GetAlignPo:

; 51   : 
; 52   : 		p.y = frame.top;
; 53   : 		p.y += placement.pos.auto_y 
; 54   : 			? placement.align.v * (frame.Height() - size.cy) 
; 55   : 			: placement.pos.y * scale.cy - placement.align.v * size.cy;

	mov	edx, DWORD PTR _scale$[ebp]
	fld	DWORD PTR [esi+44]
	fmul	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _size$[ebp]
	fild	DWORD PTR [eax+4]
	fmul	DWORD PTR [esi+32]
	fsubp	ST(1), ST(0)
	fiadd	DWORD PTR tv329[ebp]
	call	__ftol2_sse
	mov	DWORD PTR [edi+4], eax

; 56   : 
; 57   : 		return p;

	mov	eax, edi
	pop	ebx

; 58   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@ABVCSize@@@Z ENDP ; ssf::GetAlignPoint
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
_TEXT	ENDS
;	COMDAT ??0SubRect@ssf@@QAE@XZ
_TEXT	SEGMENT
??0SubRect@ssf@@QAE@XZ PROC				; ssf::SubRect::SubRect, COMDAT
; _this$ = eax

; 131  : 		SubRect() {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	ret	0
??0SubRect@ssf@@QAE@XZ ENDP				; ssf::SubRect::SubRect
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\fontwrapper.h
_TEXT	ENDS
;	COMDAT ??BFontWrapper@ssf@@QBEPB_WXZ
_TEXT	SEGMENT
??BFontWrapper@ssf@@QBEPB_WXZ PROC			; ssf::FontWrapper::operator wchar_t const *, COMDAT
; _this$ = eax

; 37   : 		operator LPCWSTR() const {return m_key;}

	mov	eax, DWORD PTR [eax+8]
	ret	0
??BFontWrapper@ssf@@QBEPB_WXZ ENDP			; ssf::FontWrapper::operator wchar_t const *
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
;	COMDAT ?RelocateElements@?$CElementTraitsBase@UPoint@ssf@@@ATL@@SAXPAUPoint@ssf@@0I@Z
_TEXT	SEGMENT
_pDest$ = 8						; size = 4
?RelocateElements@?$CElementTraitsBase@UPoint@ssf@@@ATL@@SAXPAUPoint@ssf@@0I@Z PROC ; ATL::CElementTraitsBase<ssf::Point>::RelocateElements, COMDAT
; _pSrc$ = ecx
; _nElements$ = eax

; 134  : 	{

	push	ebp
	mov	ebp, esp

; 135  : 		// A simple memmove works for nearly all types.
; 136  : 		// You'll have to override this for types that have pointers to their
; 137  : 		// own members.
; 138  : 		Checked::memmove_s( pDest, nElements*sizeof( T ), pSrc, nElements*sizeof( T ));

	mov	edx, DWORD PTR _pDest$[ebp]
	add	eax, eax
	add	eax, eax
	add	eax, eax
	push	eax
	push	ecx
	push	eax
	push	edx
	call	_memmove_s
	add	esp, 16					; 00000010H
	cmp	eax, 80					; 00000050H
	ja	SHORT $LN7@RelocateEl
	movzx	eax, BYTE PTR $LN15@RelocateEl[eax]
	jmp	DWORD PTR $LN17@RelocateEl[eax*4]
$LN8@RelocateEl:
	jmp	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$LN7@RelocateEl:
	jmp	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN9@RelocateEl:

; 139  : 	}

	pop	ebp
	ret	0
	npad	1
$LN17@RelocateEl:
	DD	$LN9@RelocateEl
	DD	$LN8@RelocateEl
	DD	$LN7@RelocateEl
	DD	$LN7@RelocateEl
$LN15@RelocateEl:
	DB	0
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	0
?RelocateElements@?$CElementTraitsBase@UPoint@ssf@@@ATL@@SAXPAUPoint@ssf@@0I@Z ENDP ; ATL::CElementTraitsBase<ssf::Point>::RelocateElements
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffecH
	DD	FLAT:__catch$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z$0
__tryblocktable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z$2
__ehfuncinfo$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z
_TEXT	SEGMENT
_e$163739 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_iSrcBin$163757 = 8					; size = 4
_this$ = 8						; size = 4
_nBins$ = 12						; size = 4
?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::Rehash, COMDAT

; 2919 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	mov	esi, DWORD PTR _nBins$[ebp]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 2920 : 	CNode** ppBins = NULL;
; 2921 : 
; 2922 : 	if( nBins == 0 )

	test	esi, esi
	jne	SHORT $LN20@Rehash

; 2923 : 	{
; 2924 : 		nBins = PickSize( m_nElements );

	mov	eax, DWORD PTR [ebx+4]
	mov	ecx, ebx
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::PickSize
	mov	esi, eax
	mov	DWORD PTR _nBins$[ebp], esi
$LN20@Rehash:

; 2925 : 	}
; 2926 : 
; 2927 : 	if( nBins == m_nBins )

	cmp	esi, DWORD PTR [ebx+8]
	je	$LN21@Rehash

; 2928 : 	{
; 2929 : 		return;
; 2930 : 	}
; 2931 : 
; 2932 : 	ATLTRACE(atlTraceMap, 2, _T("Rehash: %u bins\n"), nBins );
; 2933 : 
; 2934 : 	if( m_ppBins == NULL )

	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN18@Rehash

; 2935 : 	{
; 2936 : 		// Just set the new number of bins
; 2937 : 		InitHashTable( nBins, false );

	push	0
	push	esi
	push	ebx
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::InitHashTable

; 2976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@Rehash:

; 2938 : 		return;
; 2939 : 	}
; 2940 : 
; 2941 : 	ATLTRY(ppBins = new CNode*[nBins]);

	xor	ecx, ecx
	mov	eax, esi
	mov	edx, 4
	mul	edx
	seto	cl
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	test	edi, edi
	jne	SHORT $LN15@Rehash
$LN34@Rehash:

; 2942 : 	if (ppBins == NULL)
; 2943 : 	{
; 2944 : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN38@Rehash:
__catch$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z$0:

; 2938 : 		return;
; 2939 : 	}
; 2940 : 
; 2941 : 	ATLTRY(ppBins = new CNode*[nBins]);

	mov	ecx, DWORD PTR _e$163739[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN34@Rehash
	ret	0
$LN15@Rehash:

; 2945 : 	}
; 2946 : 
; 2947 : 	ATLENSURE( UINT_MAX / sizeof( CNode* ) >= nBins );

	cmp	esi, 1073741823				; 3fffffffH
	jbe	SHORT $LN14@Rehash
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN39@Rehash:
$LN14@Rehash:

; 2948 : 	memset( ppBins, 0, nBins*sizeof( CNode* ) );

	lea	eax, DWORD PTR [esi*4]
	push	eax
	push	0
	push	edi
	call	_memset

; 2949 : 
; 2950 : 	// Nothing gets copied.  We just rewire the old nodes
; 2951 : 	// into the new bins.
; 2952 : 	for( UINT iSrcBin = 0; iSrcBin < m_nBins; iSrcBin++ )

	xor	eax, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iSrcBin$163757[ebp], eax
	cmp	DWORD PTR [ebx+8], eax
	jbe	SHORT $LN3@Rehash
$LN5@Rehash:

; 2953 : 	{
; 2954 : 		CNode* pNode;
; 2955 : 
; 2956 : 		pNode = m_ppBins[iSrcBin];

	mov	ecx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ecx+eax*4]

; 2957 : 		while( pNode != NULL )

	test	ecx, ecx
	je	SHORT $LN4@Rehash
	npad	6
$LL2@Rehash:

; 2958 : 		{
; 2959 : 			CNode* pNext;
; 2960 : 			UINT iDestBin;
; 2961 : 
; 2962 : 			pNext = pNode->m_pNext;  // Save so we don't trash it
; 2963 : 			iDestBin = pNode->GetHash()%nBins;

	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR _nBins$[ebp]
	mov	esi, DWORD PTR [ecx+8]

; 2964 : 			pNode->m_pNext = ppBins[iDestBin];

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+8], eax

; 2965 : 			ppBins[iDestBin] = pNode;

	mov	DWORD PTR [edi+edx*4], ecx

; 2966 : 
; 2967 : 			pNode = pNext;

	mov	ecx, esi
	test	esi, esi
	jne	SHORT $LL2@Rehash

; 2957 : 		while( pNode != NULL )

	mov	esi, DWORD PTR _nBins$[ebp]
	mov	eax, DWORD PTR _iSrcBin$163757[ebp]
$LN4@Rehash:

; 2949 : 
; 2950 : 	// Nothing gets copied.  We just rewire the old nodes
; 2951 : 	// into the new bins.
; 2952 : 	for( UINT iSrcBin = 0; iSrcBin < m_nBins; iSrcBin++ )

	inc	eax
	mov	DWORD PTR _iSrcBin$163757[ebp], eax
	cmp	eax, DWORD PTR [ebx+8]
	jb	SHORT $LN5@Rehash
$LN3@Rehash:

; 2968 : 		}
; 2969 : 	}
; 2970 : 
; 2971 : 	delete[] m_ppBins;

	mov	ecx, DWORD PTR [ebx]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2972 : 	m_ppBins = ppBins;
; 2973 : 	m_nBins = nBins;
; 2974 : 
; 2975 : 	UpdateRehashThresholds();

	mov	ecx, ebx
	mov	DWORD PTR [ebx], edi
	mov	DWORD PTR [ebx+8], esi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::UpdateRehashThresholds
$LN21@Rehash:

; 2976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN37@Rehash:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::Rehash
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffecH
	DD	FLAT:__catch$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z$0
__tryblocktable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z$2
__ehfuncinfo$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z
_TEXT	SEGMENT
_e$163556 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_iSrcBin$163574 = 8					; size = 4
_this$ = 8						; size = 4
_nBins$ = 12						; size = 4
?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::Rehash, COMDAT

; 2919 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	mov	esi, DWORD PTR _nBins$[ebp]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 2920 : 	CNode** ppBins = NULL;
; 2921 : 
; 2922 : 	if( nBins == 0 )

	test	esi, esi
	jne	SHORT $LN20@Rehash@2

; 2923 : 	{
; 2924 : 		nBins = PickSize( m_nElements );

	mov	eax, DWORD PTR [ebx+4]
	mov	ecx, ebx
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::PickSize
	mov	esi, eax
	mov	DWORD PTR _nBins$[ebp], esi
$LN20@Rehash@2:

; 2925 : 	}
; 2926 : 
; 2927 : 	if( nBins == m_nBins )

	cmp	esi, DWORD PTR [ebx+8]
	je	$LN21@Rehash@2

; 2928 : 	{
; 2929 : 		return;
; 2930 : 	}
; 2931 : 
; 2932 : 	ATLTRACE(atlTraceMap, 2, _T("Rehash: %u bins\n"), nBins );
; 2933 : 
; 2934 : 	if( m_ppBins == NULL )

	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN18@Rehash@2

; 2935 : 	{
; 2936 : 		// Just set the new number of bins
; 2937 : 		InitHashTable( nBins, false );

	push	0
	push	esi
	push	ebx
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::InitHashTable

; 2976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@Rehash@2:

; 2938 : 		return;
; 2939 : 	}
; 2940 : 
; 2941 : 	ATLTRY(ppBins = new CNode*[nBins]);

	xor	ecx, ecx
	mov	eax, esi
	mov	edx, 4
	mul	edx
	seto	cl
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	test	edi, edi
	jne	SHORT $LN15@Rehash@2
$LN34@Rehash@2:

; 2942 : 	if (ppBins == NULL)
; 2943 : 	{
; 2944 : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN38@Rehash@2:
__catch$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z$0:

; 2938 : 		return;
; 2939 : 	}
; 2940 : 
; 2941 : 	ATLTRY(ppBins = new CNode*[nBins]);

	mov	ecx, DWORD PTR _e$163556[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN34@Rehash@2
	ret	0
$LN15@Rehash@2:

; 2945 : 	}
; 2946 : 
; 2947 : 	ATLENSURE( UINT_MAX / sizeof( CNode* ) >= nBins );

	cmp	esi, 1073741823				; 3fffffffH
	jbe	SHORT $LN14@Rehash@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN39@Rehash@2:
$LN14@Rehash@2:

; 2948 : 	memset( ppBins, 0, nBins*sizeof( CNode* ) );

	lea	eax, DWORD PTR [esi*4]
	push	eax
	push	0
	push	edi
	call	_memset

; 2949 : 
; 2950 : 	// Nothing gets copied.  We just rewire the old nodes
; 2951 : 	// into the new bins.
; 2952 : 	for( UINT iSrcBin = 0; iSrcBin < m_nBins; iSrcBin++ )

	xor	eax, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iSrcBin$163574[ebp], eax
	cmp	DWORD PTR [ebx+8], eax
	jbe	SHORT $LN3@Rehash@2
$LN5@Rehash@2:

; 2953 : 	{
; 2954 : 		CNode* pNode;
; 2955 : 
; 2956 : 		pNode = m_ppBins[iSrcBin];

	mov	ecx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ecx+eax*4]

; 2957 : 		while( pNode != NULL )

	test	ecx, ecx
	je	SHORT $LN4@Rehash@2
	npad	6
$LL2@Rehash@2:

; 2958 : 		{
; 2959 : 			CNode* pNext;
; 2960 : 			UINT iDestBin;
; 2961 : 
; 2962 : 			pNext = pNode->m_pNext;  // Save so we don't trash it
; 2963 : 			iDestBin = pNode->GetHash()%nBins;

	mov	eax, DWORD PTR [ecx+28]
	xor	edx, edx
	div	DWORD PTR _nBins$[ebp]
	mov	esi, DWORD PTR [ecx+24]

; 2964 : 			pNode->m_pNext = ppBins[iDestBin];

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+24], eax

; 2965 : 			ppBins[iDestBin] = pNode;

	mov	DWORD PTR [edi+edx*4], ecx

; 2966 : 
; 2967 : 			pNode = pNext;

	mov	ecx, esi
	test	esi, esi
	jne	SHORT $LL2@Rehash@2

; 2957 : 		while( pNode != NULL )

	mov	esi, DWORD PTR _nBins$[ebp]
	mov	eax, DWORD PTR _iSrcBin$163574[ebp]
$LN4@Rehash@2:

; 2949 : 
; 2950 : 	// Nothing gets copied.  We just rewire the old nodes
; 2951 : 	// into the new bins.
; 2952 : 	for( UINT iSrcBin = 0; iSrcBin < m_nBins; iSrcBin++ )

	inc	eax
	mov	DWORD PTR _iSrcBin$163574[ebp], eax
	cmp	eax, DWORD PTR [ebx+8]
	jb	SHORT $LN5@Rehash@2
$LN3@Rehash@2:

; 2968 : 		}
; 2969 : 	}
; 2970 : 
; 2971 : 	delete[] m_ppBins;

	mov	ecx, DWORD PTR [ebx]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2972 : 	m_ppBins = ppBins;
; 2973 : 	m_nBins = nBins;
; 2974 : 
; 2975 : 	UpdateRehashThresholds();

	mov	ecx, ebx
	mov	DWORD PTR [ebx], edi
	mov	DWORD PTR [ebx+8], esi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::UpdateRehashThresholds
$LN21@Rehash@2:

; 2976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN37@Rehash@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::Rehash
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffecH
	DD	FLAT:__catch$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z$0
__tryblocktable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z$2
__ehfuncinfo$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z
_TEXT	SEGMENT
_e$163446 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_iSrcBin$163464 = 8					; size = 4
_this$ = 8						; size = 4
_nBins$ = 12						; size = 4
?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Rehash, COMDAT

; 2919 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	mov	esi, DWORD PTR _nBins$[ebp]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 2920 : 	CNode** ppBins = NULL;
; 2921 : 
; 2922 : 	if( nBins == 0 )

	test	esi, esi
	jne	SHORT $LN20@Rehash@3

; 2923 : 	{
; 2924 : 		nBins = PickSize( m_nElements );

	mov	eax, DWORD PTR [ebx+4]
	mov	ecx, ebx
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::PickSize
	mov	esi, eax
	mov	DWORD PTR _nBins$[ebp], esi
$LN20@Rehash@3:

; 2925 : 	}
; 2926 : 
; 2927 : 	if( nBins == m_nBins )

	cmp	esi, DWORD PTR [ebx+8]
	je	$LN21@Rehash@3

; 2928 : 	{
; 2929 : 		return;
; 2930 : 	}
; 2931 : 
; 2932 : 	ATLTRACE(atlTraceMap, 2, _T("Rehash: %u bins\n"), nBins );
; 2933 : 
; 2934 : 	if( m_ppBins == NULL )

	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN18@Rehash@3

; 2935 : 	{
; 2936 : 		// Just set the new number of bins
; 2937 : 		InitHashTable( nBins, false );

	push	0
	push	esi
	push	ebx
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::InitHashTable

; 2976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@Rehash@3:

; 2938 : 		return;
; 2939 : 	}
; 2940 : 
; 2941 : 	ATLTRY(ppBins = new CNode*[nBins]);

	xor	ecx, ecx
	mov	eax, esi
	mov	edx, 4
	mul	edx
	seto	cl
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	test	edi, edi
	jne	SHORT $LN15@Rehash@3
$LN34@Rehash@3:

; 2942 : 	if (ppBins == NULL)
; 2943 : 	{
; 2944 : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN38@Rehash@3:
__catch$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z$0:

; 2938 : 		return;
; 2939 : 	}
; 2940 : 
; 2941 : 	ATLTRY(ppBins = new CNode*[nBins]);

	mov	ecx, DWORD PTR _e$163446[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN34@Rehash@3
	ret	0
$LN15@Rehash@3:

; 2945 : 	}
; 2946 : 
; 2947 : 	ATLENSURE( UINT_MAX / sizeof( CNode* ) >= nBins );

	cmp	esi, 1073741823				; 3fffffffH
	jbe	SHORT $LN14@Rehash@3
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN39@Rehash@3:
$LN14@Rehash@3:

; 2948 : 	memset( ppBins, 0, nBins*sizeof( CNode* ) );

	lea	eax, DWORD PTR [esi*4]
	push	eax
	push	0
	push	edi
	call	_memset

; 2949 : 
; 2950 : 	// Nothing gets copied.  We just rewire the old nodes
; 2951 : 	// into the new bins.
; 2952 : 	for( UINT iSrcBin = 0; iSrcBin < m_nBins; iSrcBin++ )

	xor	eax, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iSrcBin$163464[ebp], eax
	cmp	DWORD PTR [ebx+8], eax
	jbe	SHORT $LN3@Rehash@3
$LN5@Rehash@3:

; 2953 : 	{
; 2954 : 		CNode* pNode;
; 2955 : 
; 2956 : 		pNode = m_ppBins[iSrcBin];

	mov	ecx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ecx+eax*4]

; 2957 : 		while( pNode != NULL )

	test	ecx, ecx
	je	SHORT $LN4@Rehash@3
	npad	6
$LL2@Rehash@3:

; 2958 : 		{
; 2959 : 			CNode* pNext;
; 2960 : 			UINT iDestBin;
; 2961 : 
; 2962 : 			pNext = pNode->m_pNext;  // Save so we don't trash it
; 2963 : 			iDestBin = pNode->GetHash()%nBins;

	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR _nBins$[ebp]
	mov	esi, DWORD PTR [ecx+8]

; 2964 : 			pNode->m_pNext = ppBins[iDestBin];

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+8], eax

; 2965 : 			ppBins[iDestBin] = pNode;

	mov	DWORD PTR [edi+edx*4], ecx

; 2966 : 
; 2967 : 			pNode = pNext;

	mov	ecx, esi
	test	esi, esi
	jne	SHORT $LL2@Rehash@3

; 2957 : 		while( pNode != NULL )

	mov	esi, DWORD PTR _nBins$[ebp]
	mov	eax, DWORD PTR _iSrcBin$163464[ebp]
$LN4@Rehash@3:

; 2949 : 
; 2950 : 	// Nothing gets copied.  We just rewire the old nodes
; 2951 : 	// into the new bins.
; 2952 : 	for( UINT iSrcBin = 0; iSrcBin < m_nBins; iSrcBin++ )

	inc	eax
	mov	DWORD PTR _iSrcBin$163464[ebp], eax
	cmp	eax, DWORD PTR [ebx+8]
	jb	SHORT $LN5@Rehash@3
$LN3@Rehash@3:

; 2968 : 		}
; 2969 : 	}
; 2970 : 
; 2971 : 	delete[] m_ppBins;

	mov	ecx, DWORD PTR [ebx]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2972 : 	m_ppBins = ppBins;
; 2973 : 	m_nBins = nBins;
; 2974 : 
; 2975 : 	UpdateRehashThresholds();

	mov	ecx, ebx
	mov	DWORD PTR [ebx], edi
	mov	DWORD PTR [ebx+8], esi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::UpdateRehashThresholds
$LN21@Rehash@3:

; 2976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN37@Rehash@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Rehash
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffecH
	DD	FLAT:__catch$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z$0
__tryblocktable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z$2
__ehfuncinfo$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z
_TEXT	SEGMENT
_e$163311 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_iSrcBin$163329 = 8					; size = 4
_this$ = 8						; size = 4
_nBins$ = 12						; size = 4
?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Rehash, COMDAT

; 2919 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	mov	esi, DWORD PTR _nBins$[ebp]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 2920 : 	CNode** ppBins = NULL;
; 2921 : 
; 2922 : 	if( nBins == 0 )

	test	esi, esi
	jne	SHORT $LN20@Rehash@4

; 2923 : 	{
; 2924 : 		nBins = PickSize( m_nElements );

	mov	eax, DWORD PTR [ebx+4]
	mov	ecx, ebx
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::PickSize
	mov	esi, eax
	mov	DWORD PTR _nBins$[ebp], esi
$LN20@Rehash@4:

; 2925 : 	}
; 2926 : 
; 2927 : 	if( nBins == m_nBins )

	cmp	esi, DWORD PTR [ebx+8]
	je	$LN21@Rehash@4

; 2928 : 	{
; 2929 : 		return;
; 2930 : 	}
; 2931 : 
; 2932 : 	ATLTRACE(atlTraceMap, 2, _T("Rehash: %u bins\n"), nBins );
; 2933 : 
; 2934 : 	if( m_ppBins == NULL )

	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN18@Rehash@4

; 2935 : 	{
; 2936 : 		// Just set the new number of bins
; 2937 : 		InitHashTable( nBins, false );

	push	0
	push	esi
	push	ebx
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::InitHashTable

; 2976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@Rehash@4:

; 2938 : 		return;
; 2939 : 	}
; 2940 : 
; 2941 : 	ATLTRY(ppBins = new CNode*[nBins]);

	xor	ecx, ecx
	mov	eax, esi
	mov	edx, 4
	mul	edx
	seto	cl
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	test	edi, edi
	jne	SHORT $LN15@Rehash@4
$LN34@Rehash@4:

; 2942 : 	if (ppBins == NULL)
; 2943 : 	{
; 2944 : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN38@Rehash@4:
__catch$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z$0:

; 2938 : 		return;
; 2939 : 	}
; 2940 : 
; 2941 : 	ATLTRY(ppBins = new CNode*[nBins]);

	mov	ecx, DWORD PTR _e$163311[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN34@Rehash@4
	ret	0
$LN15@Rehash@4:

; 2945 : 	}
; 2946 : 
; 2947 : 	ATLENSURE( UINT_MAX / sizeof( CNode* ) >= nBins );

	cmp	esi, 1073741823				; 3fffffffH
	jbe	SHORT $LN14@Rehash@4
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN39@Rehash@4:
$LN14@Rehash@4:

; 2948 : 	memset( ppBins, 0, nBins*sizeof( CNode* ) );

	lea	eax, DWORD PTR [esi*4]
	push	eax
	push	0
	push	edi
	call	_memset

; 2949 : 
; 2950 : 	// Nothing gets copied.  We just rewire the old nodes
; 2951 : 	// into the new bins.
; 2952 : 	for( UINT iSrcBin = 0; iSrcBin < m_nBins; iSrcBin++ )

	xor	eax, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iSrcBin$163329[ebp], eax
	cmp	DWORD PTR [ebx+8], eax
	jbe	SHORT $LN3@Rehash@4
$LN5@Rehash@4:

; 2953 : 	{
; 2954 : 		CNode* pNode;
; 2955 : 
; 2956 : 		pNode = m_ppBins[iSrcBin];

	mov	ecx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ecx+eax*4]

; 2957 : 		while( pNode != NULL )

	test	ecx, ecx
	je	SHORT $LN4@Rehash@4
	npad	6
$LL2@Rehash@4:

; 2958 : 		{
; 2959 : 			CNode* pNext;
; 2960 : 			UINT iDestBin;
; 2961 : 
; 2962 : 			pNext = pNode->m_pNext;  // Save so we don't trash it
; 2963 : 			iDestBin = pNode->GetHash()%nBins;

	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR _nBins$[ebp]
	mov	esi, DWORD PTR [ecx+8]

; 2964 : 			pNode->m_pNext = ppBins[iDestBin];

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+8], eax

; 2965 : 			ppBins[iDestBin] = pNode;

	mov	DWORD PTR [edi+edx*4], ecx

; 2966 : 
; 2967 : 			pNode = pNext;

	mov	ecx, esi
	test	esi, esi
	jne	SHORT $LL2@Rehash@4

; 2957 : 		while( pNode != NULL )

	mov	esi, DWORD PTR _nBins$[ebp]
	mov	eax, DWORD PTR _iSrcBin$163329[ebp]
$LN4@Rehash@4:

; 2949 : 
; 2950 : 	// Nothing gets copied.  We just rewire the old nodes
; 2951 : 	// into the new bins.
; 2952 : 	for( UINT iSrcBin = 0; iSrcBin < m_nBins; iSrcBin++ )

	inc	eax
	mov	DWORD PTR _iSrcBin$163329[ebp], eax
	cmp	eax, DWORD PTR [ebx+8]
	jb	SHORT $LN5@Rehash@4
$LN3@Rehash@4:

; 2968 : 		}
; 2969 : 	}
; 2970 : 
; 2971 : 	delete[] m_ppBins;

	mov	ecx, DWORD PTR [ebx]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2972 : 	m_ppBins = ppBins;
; 2973 : 	m_nBins = nBins;
; 2974 : 
; 2975 : 	UpdateRehashThresholds();

	mov	ecx, ebx
	mov	DWORD PTR [ebx], edi
	mov	DWORD PTR [ebx+8], esi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::UpdateRehashThresholds
$LN21@Rehash@4:

; 2976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN37@Rehash@4:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Rehash
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z$2 DD 00H
	DD	FLAT:??_R0PAVCException@@@8
	DD	0ffffffecH
	DD	FLAT:__catch$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z$0
__tryblocktable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z$2
__ehfuncinfo$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z
_TEXT	SEGMENT
_e$163201 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_iSrcBin$163219 = 8					; size = 4
_this$ = 8						; size = 4
_nBins$ = 12						; size = 4
?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Rehash, COMDAT

; 2919 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	mov	esi, DWORD PTR _nBins$[ebp]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 2920 : 	CNode** ppBins = NULL;
; 2921 : 
; 2922 : 	if( nBins == 0 )

	test	esi, esi
	jne	SHORT $LN20@Rehash@5

; 2923 : 	{
; 2924 : 		nBins = PickSize( m_nElements );

	mov	eax, DWORD PTR [ebx+4]
	mov	ecx, ebx
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::PickSize
	mov	esi, eax
	mov	DWORD PTR _nBins$[ebp], esi
$LN20@Rehash@5:

; 2925 : 	}
; 2926 : 
; 2927 : 	if( nBins == m_nBins )

	cmp	esi, DWORD PTR [ebx+8]
	je	$LN21@Rehash@5

; 2928 : 	{
; 2929 : 		return;
; 2930 : 	}
; 2931 : 
; 2932 : 	ATLTRACE(atlTraceMap, 2, _T("Rehash: %u bins\n"), nBins );
; 2933 : 
; 2934 : 	if( m_ppBins == NULL )

	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN18@Rehash@5

; 2935 : 	{
; 2936 : 		// Just set the new number of bins
; 2937 : 		InitHashTable( nBins, false );

	push	0
	push	esi
	push	ebx
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::InitHashTable

; 2976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@Rehash@5:

; 2938 : 		return;
; 2939 : 	}
; 2940 : 
; 2941 : 	ATLTRY(ppBins = new CNode*[nBins]);

	xor	ecx, ecx
	mov	eax, esi
	mov	edx, 4
	mul	edx
	seto	cl
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	test	edi, edi
	jne	SHORT $LN15@Rehash@5
$LN34@Rehash@5:

; 2942 : 	if (ppBins == NULL)
; 2943 : 	{
; 2944 : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN38@Rehash@5:
__catch$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z$0:

; 2938 : 		return;
; 2939 : 	}
; 2940 : 
; 2941 : 	ATLTRY(ppBins = new CNode*[nBins]);

	mov	ecx, DWORD PTR _e$163201[ebp]
	call	?Delete@CException@@QAEXXZ		; CException::Delete
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN34@Rehash@5
	ret	0
$LN15@Rehash@5:

; 2945 : 	}
; 2946 : 
; 2947 : 	ATLENSURE( UINT_MAX / sizeof( CNode* ) >= nBins );

	cmp	esi, 1073741823				; 3fffffffH
	jbe	SHORT $LN14@Rehash@5
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN39@Rehash@5:
$LN14@Rehash@5:

; 2948 : 	memset( ppBins, 0, nBins*sizeof( CNode* ) );

	lea	eax, DWORD PTR [esi*4]
	push	eax
	push	0
	push	edi
	call	_memset

; 2949 : 
; 2950 : 	// Nothing gets copied.  We just rewire the old nodes
; 2951 : 	// into the new bins.
; 2952 : 	for( UINT iSrcBin = 0; iSrcBin < m_nBins; iSrcBin++ )

	xor	eax, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iSrcBin$163219[ebp], eax
	cmp	DWORD PTR [ebx+8], eax
	jbe	SHORT $LN3@Rehash@5
$LN5@Rehash@5:

; 2953 : 	{
; 2954 : 		CNode* pNode;
; 2955 : 
; 2956 : 		pNode = m_ppBins[iSrcBin];

	mov	ecx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ecx+eax*4]

; 2957 : 		while( pNode != NULL )

	test	ecx, ecx
	je	SHORT $LN4@Rehash@5
	npad	6
$LL2@Rehash@5:

; 2958 : 		{
; 2959 : 			CNode* pNext;
; 2960 : 			UINT iDestBin;
; 2961 : 
; 2962 : 			pNext = pNode->m_pNext;  // Save so we don't trash it
; 2963 : 			iDestBin = pNode->GetHash()%nBins;

	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR _nBins$[ebp]
	mov	esi, DWORD PTR [ecx+8]

; 2964 : 			pNode->m_pNext = ppBins[iDestBin];

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+8], eax

; 2965 : 			ppBins[iDestBin] = pNode;

	mov	DWORD PTR [edi+edx*4], ecx

; 2966 : 
; 2967 : 			pNode = pNext;

	mov	ecx, esi
	test	esi, esi
	jne	SHORT $LL2@Rehash@5

; 2957 : 		while( pNode != NULL )

	mov	esi, DWORD PTR _nBins$[ebp]
	mov	eax, DWORD PTR _iSrcBin$163219[ebp]
$LN4@Rehash@5:

; 2949 : 
; 2950 : 	// Nothing gets copied.  We just rewire the old nodes
; 2951 : 	// into the new bins.
; 2952 : 	for( UINT iSrcBin = 0; iSrcBin < m_nBins; iSrcBin++ )

	inc	eax
	mov	DWORD PTR _iSrcBin$163219[ebp], eax
	cmp	eax, DWORD PTR [ebx+8]
	jb	SHORT $LN5@Rehash@5
$LN3@Rehash@5:

; 2968 : 		}
; 2969 : 	}
; 2970 : 
; 2971 : 	delete[] m_ppBins;

	mov	ecx, DWORD PTR [ebx]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2972 : 	m_ppBins = ppBins;
; 2973 : 	m_nBins = nBins;
; 2974 : 
; 2975 : 	UpdateRehashThresholds();

	mov	ecx, ebx
	mov	DWORD PTR [ebx], edi
	mov	DWORD PTR [ebx+8], esi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::UpdateRehashThresholds
$LN21@Rehash@5:

; 2976 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN37@Rehash@5:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Rehash
; Function compile flags: /Ogtp
;	COMDAT ?GrowBuffer@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@AAE_NI@Z
_TEXT	SEGMENT
?GrowBuffer@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@AAE_NI@Z PROC ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::GrowBuffer, COMDAT
; _this$ = esi
; _nNewSize$ = eax

; 804  : 	if( nNewSize > m_nMaxSize )

	mov	ecx, DWORD PTR [esi+8]
	push	ebx
	push	edi
	mov	edi, eax
	cmp	edi, ecx
	jbe	$LN5@GrowBuffer

; 805  : 	{
; 806  : 		if( m_pData == NULL )

	mov	eax, DWORD PTR [esi]
	test	eax, eax

; 807  : 		{
; 808  : 			size_t nAllocSize =  size_t( m_nGrowBy ) > nNewSize ? size_t( m_nGrowBy ) : nNewSize ;

	mov	eax, DWORD PTR [esi+12]
	jne	SHORT $LN7@GrowBuffer
	cmp	eax, edi
	jbe	SHORT $LN11@GrowBuffer
	mov	edi, eax
$LN11@GrowBuffer:

; 809  : 			m_pData = static_cast< E* >( calloc( nAllocSize,sizeof( E ) ) );

	push	8
	push	edi
	call	_calloc
	add	esp, 8
	mov	DWORD PTR [esi], eax

; 810  : 			if( m_pData == NULL )

	test	eax, eax
	jne	SHORT $LN6@GrowBuffer
$LN17@GrowBuffer:
	pop	edi

; 811  : 			{
; 812  : 				return( false );

	xor	al, al
	pop	ebx

; 854  : }

	ret	0
$LN6@GrowBuffer:

; 813  : 			}
; 814  : 			m_nMaxSize = nAllocSize;

	mov	DWORD PTR [esi+8], edi
	pop	edi

; 850  : 		}
; 851  : 	}
; 852  : 
; 853  : 	return true;

	mov	al, 1
	pop	ebx

; 854  : }

	ret	0
$LN7@GrowBuffer:

; 815  : 		}
; 816  : 		else
; 817  : 		{
; 818  : 			// otherwise, grow array
; 819  : 			size_t nGrowBy = m_nGrowBy;
; 820  : 			if( nGrowBy == 0 )

	test	eax, eax
	jne	SHORT $LN13@GrowBuffer

; 821  : 			{
; 822  : 				// heuristically determine growth when nGrowBy == 0
; 823  : 				//  (this avoids heap fragmentation in many situations)
; 824  : 				nGrowBy = m_nSize/8;

	mov	eax, DWORD PTR [esi+4]
	shr	eax, 3

; 825  : 				nGrowBy = (nGrowBy < 4) ? 4 : ((nGrowBy > 1024) ? 1024 : nGrowBy);

	cmp	eax, 4
	jae	SHORT $LN15@GrowBuffer
	mov	eax, 4
	jmp	SHORT $LN13@GrowBuffer
$LN15@GrowBuffer:
	cmp	eax, 1024				; 00000400H
	jbe	SHORT $LN13@GrowBuffer
	mov	eax, 1024				; 00000400H
$LN13@GrowBuffer:

; 826  : 			}
; 827  : 			size_t nNewMax;
; 828  : 			if( nNewSize < (m_nMaxSize+nGrowBy) )

	add	eax, ecx

; 829  : 				nNewMax = m_nMaxSize+nGrowBy;  // granularity

	mov	ebx, eax
	cmp	edi, eax
	jb	SHORT $LN2@GrowBuffer

; 830  : 			else
; 831  : 				nNewMax = nNewSize;  // no slush

	mov	ebx, edi
$LN2@GrowBuffer:

; 832  : 
; 833  : 			ATLASSERT( nNewMax >= m_nMaxSize );  // no wrap around
; 834  : #ifdef SIZE_T_MAX
; 835  : 			ATLASSERT( nNewMax <= SIZE_T_MAX/sizeof( E ) ); // no overflow
; 836  : #endif
; 837  : 			E* pNewData = static_cast< E* >( calloc( nNewMax,sizeof( E ) ) );

	push	8
	push	ebx
	call	_calloc
	mov	edi, eax
	add	esp, 8

; 838  : 			if( pNewData == NULL )

	test	edi, edi

; 839  : 			{
; 840  : 				return false;

	je	SHORT $LN17@GrowBuffer

; 841  : 			}
; 842  : 
; 843  : 			// copy new data from old
; 844  : 			ETraits::RelocateElements( pNewData, m_pData, m_nSize );

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	push	edi
	call	?RelocateElements@?$CElementTraitsBase@UPoint@ssf@@@ATL@@SAXPAUPoint@ssf@@0I@Z ; ATL::CElementTraitsBase<ssf::Point>::RelocateElements

; 845  : 
; 846  : 			// get rid of old stuff (note: no destructors called)
; 847  : 			free( m_pData );

	mov	eax, DWORD PTR [esi]
	push	eax
	call	_free
	add	esp, 8

; 848  : 			m_pData = pNewData;

	mov	DWORD PTR [esi], edi

; 849  : 			m_nMaxSize = nNewMax;

	mov	DWORD PTR [esi+8], ebx
$LN5@GrowBuffer:

; 850  : 		}
; 851  : 	}
; 852  : 
; 853  : 	return true;

	pop	edi
	mov	al, 1
	pop	ebx

; 854  : }

	ret	0
?GrowBuffer@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@AAE_NI@Z ENDP ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::GrowBuffer
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RelocateElements@?$CElementTraitsBase@UtagPOINT@@@ATL@@SAXPAUtagPOINT@@0I@Z
_TEXT	SEGMENT
_pDest$ = 8						; size = 4
?RelocateElements@?$CElementTraitsBase@UtagPOINT@@@ATL@@SAXPAUtagPOINT@@0I@Z PROC ; ATL::CElementTraitsBase<tagPOINT>::RelocateElements, COMDAT
; _pSrc$ = ecx
; _nElements$ = eax

; 134  : 	{

	push	ebp
	mov	ebp, esp

; 135  : 		// A simple memmove works for nearly all types.
; 136  : 		// You'll have to override this for types that have pointers to their
; 137  : 		// own members.
; 138  : 		Checked::memmove_s( pDest, nElements*sizeof( T ), pSrc, nElements*sizeof( T ));

	mov	edx, DWORD PTR _pDest$[ebp]
	add	eax, eax
	add	eax, eax
	add	eax, eax
	push	eax
	push	ecx
	push	eax
	push	edx
	call	_memmove_s
	add	esp, 16					; 00000010H
	cmp	eax, 80					; 00000050H
	ja	SHORT $LN7@RelocateEl@2
	movzx	eax, BYTE PTR $LN15@RelocateEl@2[eax]
	jmp	DWORD PTR $LN17@RelocateEl@2[eax*4]
$LN8@RelocateEl@2:
	jmp	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$LN7@RelocateEl@2:
	jmp	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN9@RelocateEl@2:

; 139  : 	}

	pop	ebp
	ret	0
	npad	1
$LN17@RelocateEl@2:
	DD	$LN9@RelocateEl@2
	DD	$LN8@RelocateEl@2
	DD	$LN7@RelocateEl@2
	DD	$LN7@RelocateEl@2
$LN15@RelocateEl@2:
	DB	0
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	0
?RelocateElements@?$CElementTraitsBase@UtagPOINT@@@ATL@@SAXPAUtagPOINT@@0I@Z ENDP ; ATL::CElementTraitsBase<tagPOINT>::RelocateElements
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXPAVCNode@12@@Z
_TEXT	SEGMENT
_pNode$ = 8						; size = 4
?FreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXPAVCNode@12@@Z PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::FreeNode, COMDAT
; _this$ = ecx

; 1583 : {

	push	ebp
	mov	ebp, esp

; 1584 : 	pNode->~CNode();
; 1585 : 	pNode->m_pNext = m_pFree;

	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _pNode$[ebp]
	mov	DWORD PTR [eax], edx

; 1586 : 	m_pFree = pNode;
; 1587 : 	ATLASSUME( m_nElements > 0 );
; 1588 : 	m_nElements--;

	dec	DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx+16], eax

; 1589 : 	if( m_nElements == 0 )

	jne	SHORT $LN1@FreeNode@4

; 1590 : 	{
; 1591 : 		RemoveAll();

	push	esi
	mov	esi, ecx
	call	?RemoveAll@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEXXZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::RemoveAll
	pop	esi
$LN1@FreeNode@4:

; 1592 : 	}
; 1593 : }

	pop	ebp
	ret	4
?FreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXPAVCNode@12@@Z ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::FreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_iBin$ = 12						; size = 4
_nHash$ = 16						; size = 4
_pPrev$ = 20						; size = 4
?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::GetNode, COMDAT
; _this$ = eax

; 2774 : {

	push	ebp
	mov	ebp, esp

; 2775 : 	CNode* pFollow;
; 2776 : 
; 2777 : 	nHash = KTraits::Hash( key );

	mov	edx, DWORD PTR _key$[ebp]
	push	esi
	push	edi
	mov	esi, eax
	call	?Hash@?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ATL@@SAKPB_W@Z ; ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::Hash
	mov	edi, eax
	mov	eax, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR [eax], edi

; 2778 : 	iBin = nHash%m_nBins;

	xor	edx, edx
	mov	eax, edi
	div	DWORD PTR [esi+8]

; 2779 : 
; 2780 : 	if( m_ppBins == NULL )

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _iBin$[ebp]
	mov	DWORD PTR [ecx], edx
	test	eax, eax
	jne	SHORT $LN5@GetNode@7
	pop	edi
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
$LN5@GetNode@7:

; 2781 : 	{
; 2782 : 		return( NULL );
; 2783 : 	}
; 2784 : 
; 2785 : 	pFollow = NULL;
; 2786 : 	pPrev = NULL;
; 2787 : 	for( CNode* pNode = m_ppBins[iBin]; pNode != NULL; pNode = pNode->m_pNext )

	mov	eax, DWORD PTR [eax+edx*4]
	mov	ecx, DWORD PTR _pPrev$[ebp]
	push	ebx
	xor	ebx, ebx
	mov	DWORD PTR [ecx], ebx
	test	eax, eax
	je	SHORT $LN2@GetNode@7
	npad	3
$LL4@GetNode@7:

; 2788 : 	{
; 2789 : 		if( (pNode->GetHash() == nHash) && KTraits::CompareElements( pNode->m_key, key ) )

	cmp	DWORD PTR [eax+12], edi
	jne	SHORT $LN1@GetNode@7
	mov	edx, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax]
	npad	6
$LL19@GetNode@7:
	mov	si, WORD PTR [ecx]
	cmp	si, WORD PTR [edx]
	jne	SHORT $LN20@GetNode@7
	test	si, si
	je	SHORT $LN21@GetNode@7
	mov	si, WORD PTR [ecx+2]
	cmp	si, WORD PTR [edx+2]
	jne	SHORT $LN20@GetNode@7
	add	ecx, 4
	add	edx, 4
	test	si, si
	jne	SHORT $LL19@GetNode@7
$LN21@GetNode@7:
	xor	ecx, ecx
	jmp	SHORT $LN22@GetNode@7
$LN20@GetNode@7:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN22@GetNode@7:
	test	ecx, ecx
	je	SHORT $LN17@GetNode@7
$LN1@GetNode@7:

; 2792 : 			return( pNode );
; 2793 : 		}
; 2794 : 		pFollow = pNode;

	mov	ebx, eax
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	jne	SHORT $LL4@GetNode@7
$LN2@GetNode@7:
	pop	ebx
	pop	edi

; 2795 : 	}
; 2796 : 
; 2797 : 	return( NULL );

	xor	eax, eax
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
$LN17@GetNode@7:

; 2790 : 		{
; 2791 : 			pPrev = pFollow;

	mov	edx, DWORD PTR _pPrev$[ebp]
	mov	DWORD PTR [edx], ebx
	pop	ebx
	pop	edi
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::GetNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXMMM_N@Z
_TEXT	SEGMENT
_fOptimalLoad$ = 8					; size = 4
_fLoThreshold$ = 12					; size = 4
_fHiThreshold$ = 16					; size = 4
?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXMMM_N@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::SetOptimalLoad, COMDAT
; _this$ = ecx

; 2567 : {

	push	ebp
	mov	ebp, esp

; 2568 : 	ATLASSERT( fOptimalLoad > 0 );
; 2569 : 	ATLASSERT( (fLoThreshold >= 0) && (fLoThreshold < fOptimalLoad) );
; 2570 : 	ATLASSERT( fHiThreshold > fOptimalLoad );
; 2571 : 
; 2572 : 	m_fOptimalLoad = fOptimalLoad;

	fld	DWORD PTR _fOptimalLoad$[ebp]
	fstp	DWORD PTR [ecx+12]

; 2573 : 	m_fLoThreshold = fLoThreshold;

	fld	DWORD PTR _fLoThreshold$[ebp]
	fstp	DWORD PTR [ecx+16]

; 2574 : 	m_fHiThreshold = fHiThreshold;

	fld	DWORD PTR _fHiThreshold$[ebp]
	fstp	DWORD PTR [ecx+20]

; 2575 : 
; 2576 : 	UpdateRehashThresholds();

	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::UpdateRehashThresholds

; 2577 : 
; 2578 : 	if( bRehashNow && ((m_nElements > m_nHiRehashThreshold) ||
; 2579 : 		(m_nElements < m_nLoRehashThreshold)) )
; 2580 : 	{
; 2581 : 		Rehash( PickSize( m_nElements ) );
; 2582 : 	}
; 2583 : }

	pop	ebp
	ret	12					; 0000000cH
?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXMMM_N@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::SetOptimalLoad
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_iBin$ = 12						; size = 4
_nHash$ = 16						; size = 4
_pPrev$ = 20						; size = 4
?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNode, COMDAT
; _this$ = eax

; 2774 : {

	push	ebp
	mov	ebp, esp

; 2775 : 	CNode* pFollow;
; 2776 : 
; 2777 : 	nHash = KTraits::Hash( key );

	mov	edx, DWORD PTR _key$[ebp]
	push	esi
	push	edi
	mov	esi, eax
	call	?Hash@?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ATL@@SAKPB_W@Z ; ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::Hash
	mov	edi, eax
	mov	eax, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR [eax], edi

; 2778 : 	iBin = nHash%m_nBins;

	xor	edx, edx
	mov	eax, edi
	div	DWORD PTR [esi+8]

; 2779 : 
; 2780 : 	if( m_ppBins == NULL )

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _iBin$[ebp]
	mov	DWORD PTR [ecx], edx
	test	eax, eax
	jne	SHORT $LN5@GetNode@8
	pop	edi
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
$LN5@GetNode@8:

; 2781 : 	{
; 2782 : 		return( NULL );
; 2783 : 	}
; 2784 : 
; 2785 : 	pFollow = NULL;
; 2786 : 	pPrev = NULL;
; 2787 : 	for( CNode* pNode = m_ppBins[iBin]; pNode != NULL; pNode = pNode->m_pNext )

	mov	eax, DWORD PTR [eax+edx*4]
	mov	ecx, DWORD PTR _pPrev$[ebp]
	push	ebx
	xor	ebx, ebx
	mov	DWORD PTR [ecx], ebx
	test	eax, eax
	je	SHORT $LN2@GetNode@8
	npad	3
$LL4@GetNode@8:

; 2788 : 	{
; 2789 : 		if( (pNode->GetHash() == nHash) && KTraits::CompareElements( pNode->m_key, key ) )

	cmp	DWORD PTR [eax+28], edi
	jne	SHORT $LN1@GetNode@8
	mov	edx, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax]
	npad	6
$LL19@GetNode@8:
	mov	si, WORD PTR [ecx]
	cmp	si, WORD PTR [edx]
	jne	SHORT $LN20@GetNode@8
	test	si, si
	je	SHORT $LN21@GetNode@8
	mov	si, WORD PTR [ecx+2]
	cmp	si, WORD PTR [edx+2]
	jne	SHORT $LN20@GetNode@8
	add	ecx, 4
	add	edx, 4
	test	si, si
	jne	SHORT $LL19@GetNode@8
$LN21@GetNode@8:
	xor	ecx, ecx
	jmp	SHORT $LN22@GetNode@8
$LN20@GetNode@8:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN22@GetNode@8:
	test	ecx, ecx
	je	SHORT $LN17@GetNode@8
$LN1@GetNode@8:

; 2792 : 			return( pNode );
; 2793 : 		}
; 2794 : 		pFollow = pNode;

	mov	ebx, eax
	mov	eax, DWORD PTR [eax+24]
	test	eax, eax
	jne	SHORT $LL4@GetNode@8
$LN2@GetNode@8:
	pop	ebx
	pop	edi

; 2795 : 	}
; 2796 : 
; 2797 : 	return( NULL );

	xor	eax, eax
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
$LN17@GetNode@8:

; 2790 : 		{
; 2791 : 			pPrev = pFollow;

	mov	edx, DWORD PTR _pPrev$[ebp]
	mov	DWORD PTR [edx], ebx
	pop	ebx
	pop	edi
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z
_TEXT	SEGMENT
?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode, COMDAT
; _this$ = esi
; _pNode$ = eax

; 2736 : {

	push	edi
	mov	edi, eax

; 2737 : 	ATLENSURE( pNode != NULL );

	test	edi, edi
	jne	SHORT $LN17@FreeNode@5
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN49@FreeNode@5:
$LN17@FreeNode@5:

; 2738 : 
; 2739 : 	pNode->~CNode();

	mov	eax, DWORD PTR [edi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN34@FreeNode@5
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN34@FreeNode@5:

; 2740 : 	pNode->m_pNext = m_pFree;

	mov	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [edi+24], ecx

; 2741 : 	m_pFree = pNode;
; 2742 : 
; 2743 : 	ATLASSUME( m_nElements > 0 );
; 2744 : 	m_nElements--;

	dec	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+44], edi

; 2745 : 
; 2746 : 	if( (m_nElements < m_nLoRehashThreshold) && !IsLocked() )

	cmp	eax, DWORD PTR [esi+28]
	jae	SHORT $LN2@FreeNode@5
	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN2@FreeNode@5

; 2747 : 	{
; 2748 : 		Rehash( PickSize( m_nElements ) );

	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::PickSize
	push	eax
	push	esi
	call	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::Rehash
$LN2@FreeNode@5:

; 2749 : 	}
; 2750 : 
; 2751 : 	if( m_nElements == 0 )

	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN39@FreeNode@5

; 2752 : 	{
; 2753 : 		FreePlexes();

	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+44], 0
	test	eax, eax
	je	SHORT $LN39@FreeNode@5
	npad	5
$LL43@FreeNode@5:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL43@FreeNode@5
	mov	DWORD PTR [esi+40], edi
$LN39@FreeNode@5:

; 2754 : 	}
; 2755 : }

	pop	edi
	ret	0
$LN48@FreeNode@5:
?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXMMM_N@Z
_TEXT	SEGMENT
_fOptimalLoad$ = 8					; size = 4
_fLoThreshold$ = 12					; size = 4
_fHiThreshold$ = 16					; size = 4
?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXMMM_N@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::SetOptimalLoad, COMDAT
; _this$ = ecx

; 2567 : {

	push	ebp
	mov	ebp, esp

; 2568 : 	ATLASSERT( fOptimalLoad > 0 );
; 2569 : 	ATLASSERT( (fLoThreshold >= 0) && (fLoThreshold < fOptimalLoad) );
; 2570 : 	ATLASSERT( fHiThreshold > fOptimalLoad );
; 2571 : 
; 2572 : 	m_fOptimalLoad = fOptimalLoad;

	fld	DWORD PTR _fOptimalLoad$[ebp]
	fstp	DWORD PTR [ecx+12]

; 2573 : 	m_fLoThreshold = fLoThreshold;

	fld	DWORD PTR _fLoThreshold$[ebp]
	fstp	DWORD PTR [ecx+16]

; 2574 : 	m_fHiThreshold = fHiThreshold;

	fld	DWORD PTR _fHiThreshold$[ebp]
	fstp	DWORD PTR [ecx+20]

; 2575 : 
; 2576 : 	UpdateRehashThresholds();

	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::UpdateRehashThresholds

; 2577 : 
; 2578 : 	if( bRehashNow && ((m_nElements > m_nHiRehashThreshold) ||
; 2579 : 		(m_nElements < m_nLoRehashThreshold)) )
; 2580 : 	{
; 2581 : 		Rehash( PickSize( m_nElements ) );
; 2582 : 	}
; 2583 : }

	pop	ebp
	ret	12					; 0000000cH
?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXMMM_N@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::SetOptimalLoad
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_iBin$ = 12						; size = 4
_nHash$ = 16						; size = 4
_pPrev$ = 20						; size = 4
?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode, COMDAT
; _this$ = eax

; 2774 : {

	push	ebp
	mov	ebp, esp

; 2775 : 	CNode* pFollow;
; 2776 : 
; 2777 : 	nHash = KTraits::Hash( key );

	mov	edx, DWORD PTR _key$[ebp]
	push	esi
	push	edi
	mov	esi, eax
	call	?Hash@?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ATL@@SAKPB_W@Z ; ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::Hash
	mov	edi, eax
	mov	eax, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR [eax], edi

; 2778 : 	iBin = nHash%m_nBins;

	xor	edx, edx
	mov	eax, edi
	div	DWORD PTR [esi+8]

; 2779 : 
; 2780 : 	if( m_ppBins == NULL )

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _iBin$[ebp]
	mov	DWORD PTR [ecx], edx
	test	eax, eax
	jne	SHORT $LN5@GetNode@9
	pop	edi
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
$LN5@GetNode@9:

; 2781 : 	{
; 2782 : 		return( NULL );
; 2783 : 	}
; 2784 : 
; 2785 : 	pFollow = NULL;
; 2786 : 	pPrev = NULL;
; 2787 : 	for( CNode* pNode = m_ppBins[iBin]; pNode != NULL; pNode = pNode->m_pNext )

	mov	eax, DWORD PTR [eax+edx*4]
	mov	ecx, DWORD PTR _pPrev$[ebp]
	push	ebx
	xor	ebx, ebx
	mov	DWORD PTR [ecx], ebx
	test	eax, eax
	je	SHORT $LN2@GetNode@9
	npad	3
$LL4@GetNode@9:

; 2788 : 	{
; 2789 : 		if( (pNode->GetHash() == nHash) && KTraits::CompareElements( pNode->m_key, key ) )

	cmp	DWORD PTR [eax+12], edi
	jne	SHORT $LN1@GetNode@9
	mov	edx, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax]
	npad	6
$LL19@GetNode@9:
	mov	si, WORD PTR [ecx]
	cmp	si, WORD PTR [edx]
	jne	SHORT $LN20@GetNode@9
	test	si, si
	je	SHORT $LN21@GetNode@9
	mov	si, WORD PTR [ecx+2]
	cmp	si, WORD PTR [edx+2]
	jne	SHORT $LN20@GetNode@9
	add	ecx, 4
	add	edx, 4
	test	si, si
	jne	SHORT $LL19@GetNode@9
$LN21@GetNode@9:
	xor	ecx, ecx
	jmp	SHORT $LN22@GetNode@9
$LN20@GetNode@9:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN22@GetNode@9:
	test	ecx, ecx
	je	SHORT $LN17@GetNode@9
$LN1@GetNode@9:

; 2792 : 			return( pNode );
; 2793 : 		}
; 2794 : 		pFollow = pNode;

	mov	ebx, eax
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	jne	SHORT $LL4@GetNode@9
$LN2@GetNode@9:
	pop	ebx
	pop	edi

; 2795 : 	}
; 2796 : 
; 2797 : 	return( NULL );

	xor	eax, eax
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
$LN17@GetNode@9:

; 2790 : 		{
; 2791 : 			pPrev = pFollow;

	mov	edx, DWORD PTR _pPrev$[ebp]
	mov	DWORD PTR [edx], ebx
	pop	ebx
	pop	edi
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z
_TEXT	SEGMENT
?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreeNode, COMDAT
; _this$ = esi
; _pNode$ = eax

; 2736 : {

	push	edi
	mov	edi, eax

; 2737 : 	ATLENSURE( pNode != NULL );

	test	edi, edi
	jne	SHORT $LN17@FreeNode@6
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN49@FreeNode@6:
$LN17@FreeNode@6:

; 2738 : 
; 2739 : 	pNode->~CNode();

	mov	eax, DWORD PTR [edi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN34@FreeNode@6
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN34@FreeNode@6:

; 2740 : 	pNode->m_pNext = m_pFree;

	mov	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [edi+8], ecx

; 2741 : 	m_pFree = pNode;
; 2742 : 
; 2743 : 	ATLASSUME( m_nElements > 0 );
; 2744 : 	m_nElements--;

	dec	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+44], edi

; 2745 : 
; 2746 : 	if( (m_nElements < m_nLoRehashThreshold) && !IsLocked() )

	cmp	eax, DWORD PTR [esi+28]
	jae	SHORT $LN2@FreeNode@6
	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN2@FreeNode@6

; 2747 : 	{
; 2748 : 		Rehash( PickSize( m_nElements ) );

	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::PickSize
	push	eax
	push	esi
	call	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Rehash
$LN2@FreeNode@6:

; 2749 : 	}
; 2750 : 
; 2751 : 	if( m_nElements == 0 )

	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN39@FreeNode@6

; 2752 : 	{
; 2753 : 		FreePlexes();

	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+44], 0
	test	eax, eax
	je	SHORT $LN39@FreeNode@6
	npad	5
$LL43@FreeNode@6:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL43@FreeNode@6
	mov	DWORD PTR [esi+40], edi
$LN39@FreeNode@6:

; 2754 : 	}
; 2755 : }

	pop	edi
	ret	0
$LN48@FreeNode@6:
?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXMMM_N@Z
_TEXT	SEGMENT
_fOptimalLoad$ = 8					; size = 4
_fLoThreshold$ = 12					; size = 4
_fHiThreshold$ = 16					; size = 4
?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXMMM_N@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::SetOptimalLoad, COMDAT
; _this$ = ecx

; 2567 : {

	push	ebp
	mov	ebp, esp

; 2568 : 	ATLASSERT( fOptimalLoad > 0 );
; 2569 : 	ATLASSERT( (fLoThreshold >= 0) && (fLoThreshold < fOptimalLoad) );
; 2570 : 	ATLASSERT( fHiThreshold > fOptimalLoad );
; 2571 : 
; 2572 : 	m_fOptimalLoad = fOptimalLoad;

	fld	DWORD PTR _fOptimalLoad$[ebp]
	fstp	DWORD PTR [ecx+12]

; 2573 : 	m_fLoThreshold = fLoThreshold;

	fld	DWORD PTR _fLoThreshold$[ebp]
	fstp	DWORD PTR [ecx+16]

; 2574 : 	m_fHiThreshold = fHiThreshold;

	fld	DWORD PTR _fHiThreshold$[ebp]
	fstp	DWORD PTR [ecx+20]

; 2575 : 
; 2576 : 	UpdateRehashThresholds();

	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::UpdateRehashThresholds

; 2577 : 
; 2578 : 	if( bRehashNow && ((m_nElements > m_nHiRehashThreshold) ||
; 2579 : 		(m_nElements < m_nLoRehashThreshold)) )
; 2580 : 	{
; 2581 : 		Rehash( PickSize( m_nElements ) );
; 2582 : 	}
; 2583 : }

	pop	ebp
	ret	12					; 0000000cH
?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXMMM_N@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::SetOptimalLoad
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_iBin$ = 12						; size = 4
_nHash$ = 16						; size = 4
_pPrev$ = 20						; size = 4
?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode, COMDAT
; _this$ = eax

; 2774 : {

	push	ebp
	mov	ebp, esp

; 2775 : 	CNode* pFollow;
; 2776 : 
; 2777 : 	nHash = KTraits::Hash( key );

	mov	edx, DWORD PTR _key$[ebp]
	push	esi
	push	edi
	mov	esi, eax
	call	?Hash@?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ATL@@SAKPB_W@Z ; ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::Hash
	mov	edi, eax
	mov	eax, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR [eax], edi

; 2778 : 	iBin = nHash%m_nBins;

	xor	edx, edx
	mov	eax, edi
	div	DWORD PTR [esi+8]

; 2779 : 
; 2780 : 	if( m_ppBins == NULL )

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _iBin$[ebp]
	mov	DWORD PTR [ecx], edx
	test	eax, eax
	jne	SHORT $LN5@GetNode@10
	pop	edi
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
$LN5@GetNode@10:

; 2781 : 	{
; 2782 : 		return( NULL );
; 2783 : 	}
; 2784 : 
; 2785 : 	pFollow = NULL;
; 2786 : 	pPrev = NULL;
; 2787 : 	for( CNode* pNode = m_ppBins[iBin]; pNode != NULL; pNode = pNode->m_pNext )

	mov	eax, DWORD PTR [eax+edx*4]
	mov	ecx, DWORD PTR _pPrev$[ebp]
	push	ebx
	xor	ebx, ebx
	mov	DWORD PTR [ecx], ebx
	test	eax, eax
	je	SHORT $LN2@GetNode@10
	npad	3
$LL4@GetNode@10:

; 2788 : 	{
; 2789 : 		if( (pNode->GetHash() == nHash) && KTraits::CompareElements( pNode->m_key, key ) )

	cmp	DWORD PTR [eax+12], edi
	jne	SHORT $LN1@GetNode@10
	mov	edx, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax]
	npad	6
$LL19@GetNode@10:
	mov	si, WORD PTR [ecx]
	cmp	si, WORD PTR [edx]
	jne	SHORT $LN20@GetNode@10
	test	si, si
	je	SHORT $LN21@GetNode@10
	mov	si, WORD PTR [ecx+2]
	cmp	si, WORD PTR [edx+2]
	jne	SHORT $LN20@GetNode@10
	add	ecx, 4
	add	edx, 4
	test	si, si
	jne	SHORT $LL19@GetNode@10
$LN21@GetNode@10:
	xor	ecx, ecx
	jmp	SHORT $LN22@GetNode@10
$LN20@GetNode@10:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN22@GetNode@10:
	test	ecx, ecx
	je	SHORT $LN17@GetNode@10
$LN1@GetNode@10:

; 2792 : 			return( pNode );
; 2793 : 		}
; 2794 : 		pFollow = pNode;

	mov	ebx, eax
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	jne	SHORT $LL4@GetNode@10
$LN2@GetNode@10:
	pop	ebx
	pop	edi

; 2795 : 	}
; 2796 : 
; 2797 : 	return( NULL );

	xor	eax, eax
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
$LN17@GetNode@10:

; 2790 : 		{
; 2791 : 			pPrev = pFollow;

	mov	edx, DWORD PTR _pPrev$[ebp]
	mov	DWORD PTR [edx], ebx
	pop	ebx
	pop	edi
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z
_TEXT	SEGMENT
?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreeNode, COMDAT
; _this$ = esi
; _pNode$ = eax

; 2736 : {

	push	edi
	mov	edi, eax

; 2737 : 	ATLENSURE( pNode != NULL );

	test	edi, edi
	jne	SHORT $LN17@FreeNode@7
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN49@FreeNode@7:
$LN17@FreeNode@7:

; 2738 : 
; 2739 : 	pNode->~CNode();

	mov	eax, DWORD PTR [edi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN34@FreeNode@7
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN34@FreeNode@7:

; 2740 : 	pNode->m_pNext = m_pFree;

	mov	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [edi+8], ecx

; 2741 : 	m_pFree = pNode;
; 2742 : 
; 2743 : 	ATLASSUME( m_nElements > 0 );
; 2744 : 	m_nElements--;

	dec	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+44], edi

; 2745 : 
; 2746 : 	if( (m_nElements < m_nLoRehashThreshold) && !IsLocked() )

	cmp	eax, DWORD PTR [esi+28]
	jae	SHORT $LN2@FreeNode@7
	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN2@FreeNode@7

; 2747 : 	{
; 2748 : 		Rehash( PickSize( m_nElements ) );

	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::PickSize
	push	eax
	push	esi
	call	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Rehash
$LN2@FreeNode@7:

; 2749 : 	}
; 2750 : 
; 2751 : 	if( m_nElements == 0 )

	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN39@FreeNode@7

; 2752 : 	{
; 2753 : 		FreePlexes();

	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+44], 0
	test	eax, eax
	je	SHORT $LN39@FreeNode@7
	npad	5
$LL43@FreeNode@7:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL43@FreeNode@7
	mov	DWORD PTR [esi+40], edi
$LN39@FreeNode@7:

; 2754 : 	}
; 2755 : }

	pop	edi
	ret	0
$LN48@FreeNode@7:
?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXMMM_N@Z
_TEXT	SEGMENT
_fOptimalLoad$ = 8					; size = 4
_fLoThreshold$ = 12					; size = 4
_fHiThreshold$ = 16					; size = 4
?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXMMM_N@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::SetOptimalLoad, COMDAT
; _this$ = ecx

; 2567 : {

	push	ebp
	mov	ebp, esp

; 2568 : 	ATLASSERT( fOptimalLoad > 0 );
; 2569 : 	ATLASSERT( (fLoThreshold >= 0) && (fLoThreshold < fOptimalLoad) );
; 2570 : 	ATLASSERT( fHiThreshold > fOptimalLoad );
; 2571 : 
; 2572 : 	m_fOptimalLoad = fOptimalLoad;

	fld	DWORD PTR _fOptimalLoad$[ebp]
	fstp	DWORD PTR [ecx+12]

; 2573 : 	m_fLoThreshold = fLoThreshold;

	fld	DWORD PTR _fLoThreshold$[ebp]
	fstp	DWORD PTR [ecx+16]

; 2574 : 	m_fHiThreshold = fHiThreshold;

	fld	DWORD PTR _fHiThreshold$[ebp]
	fstp	DWORD PTR [ecx+20]

; 2575 : 
; 2576 : 	UpdateRehashThresholds();

	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::UpdateRehashThresholds

; 2577 : 
; 2578 : 	if( bRehashNow && ((m_nElements > m_nHiRehashThreshold) ||
; 2579 : 		(m_nElements < m_nLoRehashThreshold)) )
; 2580 : 	{
; 2581 : 		Rehash( PickSize( m_nElements ) );
; 2582 : 	}
; 2583 : }

	pop	ebp
	ret	12					; 0000000cH
?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXMMM_N@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::SetOptimalLoad
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_iBin$ = 12						; size = 4
_nHash$ = 16						; size = 4
_pPrev$ = 20						; size = 4
?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode, COMDAT
; _this$ = eax

; 2774 : {

	push	ebp
	mov	ebp, esp

; 2775 : 	CNode* pFollow;
; 2776 : 
; 2777 : 	nHash = KTraits::Hash( key );

	mov	edx, DWORD PTR _key$[ebp]
	push	esi
	push	edi
	mov	esi, eax
	call	?Hash@?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ATL@@SAKPB_W@Z ; ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::Hash
	mov	edi, eax
	mov	eax, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR [eax], edi

; 2778 : 	iBin = nHash%m_nBins;

	xor	edx, edx
	mov	eax, edi
	div	DWORD PTR [esi+8]

; 2779 : 
; 2780 : 	if( m_ppBins == NULL )

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _iBin$[ebp]
	mov	DWORD PTR [ecx], edx
	test	eax, eax
	jne	SHORT $LN5@GetNode@11
	pop	edi
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
$LN5@GetNode@11:

; 2781 : 	{
; 2782 : 		return( NULL );
; 2783 : 	}
; 2784 : 
; 2785 : 	pFollow = NULL;
; 2786 : 	pPrev = NULL;
; 2787 : 	for( CNode* pNode = m_ppBins[iBin]; pNode != NULL; pNode = pNode->m_pNext )

	mov	eax, DWORD PTR [eax+edx*4]
	mov	ecx, DWORD PTR _pPrev$[ebp]
	push	ebx
	xor	ebx, ebx
	mov	DWORD PTR [ecx], ebx
	test	eax, eax
	je	SHORT $LN2@GetNode@11
	npad	3
$LL4@GetNode@11:

; 2788 : 	{
; 2789 : 		if( (pNode->GetHash() == nHash) && KTraits::CompareElements( pNode->m_key, key ) )

	cmp	DWORD PTR [eax+12], edi
	jne	SHORT $LN1@GetNode@11
	mov	edx, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax]
	npad	6
$LL19@GetNode@11:
	mov	si, WORD PTR [ecx]
	cmp	si, WORD PTR [edx]
	jne	SHORT $LN20@GetNode@11
	test	si, si
	je	SHORT $LN21@GetNode@11
	mov	si, WORD PTR [ecx+2]
	cmp	si, WORD PTR [edx+2]
	jne	SHORT $LN20@GetNode@11
	add	ecx, 4
	add	edx, 4
	test	si, si
	jne	SHORT $LL19@GetNode@11
$LN21@GetNode@11:
	xor	ecx, ecx
	jmp	SHORT $LN22@GetNode@11
$LN20@GetNode@11:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN22@GetNode@11:
	test	ecx, ecx
	je	SHORT $LN17@GetNode@11
$LN1@GetNode@11:

; 2792 : 			return( pNode );
; 2793 : 		}
; 2794 : 		pFollow = pNode;

	mov	ebx, eax
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	jne	SHORT $LL4@GetNode@11
$LN2@GetNode@11:
	pop	ebx
	pop	edi

; 2795 : 	}
; 2796 : 
; 2797 : 	return( NULL );

	xor	eax, eax
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
$LN17@GetNode@11:

; 2790 : 		{
; 2791 : 			pPrev = pFollow;

	mov	edx, DWORD PTR _pPrev$[ebp]
	mov	DWORD PTR [edx], ebx
	pop	ebx
	pop	edi
	pop	esi

; 2798 : }

	pop	ebp
	ret	16					; 00000010H
?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z
_TEXT	SEGMENT
?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreeNode, COMDAT
; _this$ = esi
; _pNode$ = eax

; 2736 : {

	push	edi
	mov	edi, eax

; 2737 : 	ATLENSURE( pNode != NULL );

	test	edi, edi
	jne	SHORT $LN17@FreeNode@8
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN49@FreeNode@8:
$LN17@FreeNode@8:

; 2738 : 
; 2739 : 	pNode->~CNode();

	mov	eax, DWORD PTR [edi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN34@FreeNode@8
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN34@FreeNode@8:

; 2740 : 	pNode->m_pNext = m_pFree;

	mov	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [edi+8], ecx

; 2741 : 	m_pFree = pNode;
; 2742 : 
; 2743 : 	ATLASSUME( m_nElements > 0 );
; 2744 : 	m_nElements--;

	dec	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+44], edi

; 2745 : 
; 2746 : 	if( (m_nElements < m_nLoRehashThreshold) && !IsLocked() )

	cmp	eax, DWORD PTR [esi+28]
	jae	SHORT $LN2@FreeNode@8
	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN2@FreeNode@8

; 2747 : 	{
; 2748 : 		Rehash( PickSize( m_nElements ) );

	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::PickSize
	push	eax
	push	esi
	call	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Rehash
$LN2@FreeNode@8:

; 2749 : 	}
; 2750 : 
; 2751 : 	if( m_nElements == 0 )

	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN39@FreeNode@8

; 2752 : 	{
; 2753 : 		FreePlexes();

	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+44], 0
	test	eax, eax
	je	SHORT $LN39@FreeNode@8
	npad	5
$LL43@FreeNode@8:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL43@FreeNode@8
	mov	DWORD PTR [esi+40], edi
$LN39@FreeNode@8:

; 2754 : 	}
; 2755 : }

	pop	edi
	ret	0
$LN48@FreeNode@8:
?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXMMM_N@Z
_TEXT	SEGMENT
_fOptimalLoad$ = 8					; size = 4
_fLoThreshold$ = 12					; size = 4
_fHiThreshold$ = 16					; size = 4
?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXMMM_N@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::SetOptimalLoad, COMDAT
; _this$ = ecx

; 2567 : {

	push	ebp
	mov	ebp, esp

; 2568 : 	ATLASSERT( fOptimalLoad > 0 );
; 2569 : 	ATLASSERT( (fLoThreshold >= 0) && (fLoThreshold < fOptimalLoad) );
; 2570 : 	ATLASSERT( fHiThreshold > fOptimalLoad );
; 2571 : 
; 2572 : 	m_fOptimalLoad = fOptimalLoad;

	fld	DWORD PTR _fOptimalLoad$[ebp]
	fstp	DWORD PTR [ecx+12]

; 2573 : 	m_fLoThreshold = fLoThreshold;

	fld	DWORD PTR _fLoThreshold$[ebp]
	fstp	DWORD PTR [ecx+16]

; 2574 : 	m_fHiThreshold = fHiThreshold;

	fld	DWORD PTR _fHiThreshold$[ebp]
	fstp	DWORD PTR [ecx+20]

; 2575 : 
; 2576 : 	UpdateRehashThresholds();

	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::UpdateRehashThresholds

; 2577 : 
; 2578 : 	if( bRehashNow && ((m_nElements > m_nHiRehashThreshold) ||
; 2579 : 		(m_nElements < m_nLoRehashThreshold)) )
; 2580 : 	{
; 2581 : 		Rehash( PickSize( m_nElements ) );
; 2582 : 	}
; 2583 : }

	pop	ebp
	ret	12					; 0000000cH
?SetOptimalLoad@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXMMM_N@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::SetOptimalLoad
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?SetCount@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAE_NIH@Z
_TEXT	SEGMENT
?SetCount@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAE_NIH@Z PROC ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::SetCount, COMDAT
; _this$ = eax
; _nNewSize$ = edi

; 860  : {

	push	esi
	mov	esi, eax

; 861  : 	ATLASSERT_VALID(this);
; 862  : 
; 863  : 	if( nGrowBy != -1 )
; 864  : 	{
; 865  : 		m_nGrowBy = nGrowBy;  // set new size
; 866  : 	}
; 867  : 
; 868  : 	if( nNewSize == 0 )

	test	edi, edi
	jne	SHORT $LN9@SetCount@2

; 869  : 	{
; 870  : 		// shrink to nothing
; 871  : 		if( m_pData != NULL )

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN8@SetCount@2

; 872  : 		{
; 873  : 			CallDestructors( m_pData, m_nSize );
; 874  : 			free( m_pData );

	push	eax
	call	_free
	add	esp, 4

; 875  : 			m_pData = NULL;

	mov	DWORD PTR [esi], edi
$LN8@SetCount@2:

; 876  : 		}
; 877  : 		m_nSize = 0;

	mov	DWORD PTR [esi+4], 0

; 878  : 		m_nMaxSize = 0;

	mov	DWORD PTR [esi+8], 0

; 910  : 	}
; 911  : 
; 912  : 	return true;

	mov	al, 1
	pop	esi

; 913  : }

	ret	0
$LN9@SetCount@2:

; 879  : 	}
; 880  : 	else if( nNewSize <= m_nMaxSize )

	cmp	edi, DWORD PTR [esi+8]
	ja	SHORT $LN6@SetCount@2

; 881  : 	{
; 882  : 		// it fits
; 883  : 		if( nNewSize > m_nSize )

	cmp	edi, DWORD PTR [esi+4]
	jbe	SHORT $LN5@SetCount@2
$LN1@SetCount@2:

; 901  : 		{
; 902  : 			return( false );
; 903  : 		}
; 904  : 
; 905  : 		// construct new elements
; 906  : 		ATLASSERT( nNewSize > m_nSize );
; 907  : 		CallConstructors( m_pData+m_nSize, nNewSize-m_nSize );

	call	?CallConstructors@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@CAXPAUPoint@ssf@@I@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::CallConstructors
$LN5@SetCount@2:

; 908  : 
; 909  : 		m_nSize = nNewSize;

	mov	DWORD PTR [esi+4], edi

; 910  : 	}
; 911  : 
; 912  : 	return true;

	mov	al, 1
	pop	esi

; 913  : }

	ret	0
$LN6@SetCount@2:

; 884  : 		{
; 885  : 			// initialize the new elements
; 886  : 			CallConstructors( m_pData+m_nSize, nNewSize-m_nSize );
; 887  : 		}
; 888  : 		else if( m_nSize > nNewSize )
; 889  : 		{
; 890  : 			// destroy the old elements
; 891  : 			CallDestructors( m_pData+nNewSize, m_nSize-nNewSize );
; 892  : 		}
; 893  : 		m_nSize = nNewSize;
; 894  : 	}
; 895  : 	else
; 896  : 	{
; 897  : 		bool bSuccess;
; 898  : 
; 899  : 		bSuccess = GrowBuffer( nNewSize );

	mov	eax, edi
	call	?GrowBuffer@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@AAE_NI@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::GrowBuffer

; 900  : 		if( !bSuccess )

	test	al, al
	jne	SHORT $LN1@SetCount@2
	pop	esi

; 913  : }

	ret	0
?SetCount@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAE_NIH@Z ENDP ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::SetCount
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GrowBuffer@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@AAE_NI@Z
_TEXT	SEGMENT
?GrowBuffer@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@AAE_NI@Z PROC ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::GrowBuffer, COMDAT
; _this$ = esi
; _nNewSize$ = eax

; 804  : 	if( nNewSize > m_nMaxSize )

	mov	ecx, DWORD PTR [esi+8]
	push	ebx
	push	edi
	mov	edi, eax
	cmp	edi, ecx
	jbe	$LN5@GrowBuffer@2

; 805  : 	{
; 806  : 		if( m_pData == NULL )

	mov	eax, DWORD PTR [esi]
	test	eax, eax

; 807  : 		{
; 808  : 			size_t nAllocSize =  size_t( m_nGrowBy ) > nNewSize ? size_t( m_nGrowBy ) : nNewSize ;

	mov	eax, DWORD PTR [esi+12]
	jne	SHORT $LN7@GrowBuffer@2
	cmp	eax, edi
	jbe	SHORT $LN11@GrowBuffer@2
	mov	edi, eax
$LN11@GrowBuffer@2:

; 809  : 			m_pData = static_cast< E* >( calloc( nAllocSize,sizeof( E ) ) );

	push	8
	push	edi
	call	_calloc
	add	esp, 8
	mov	DWORD PTR [esi], eax

; 810  : 			if( m_pData == NULL )

	test	eax, eax
	jne	SHORT $LN6@GrowBuffer@2
$LN17@GrowBuffer@2:
	pop	edi

; 811  : 			{
; 812  : 				return( false );

	xor	al, al
	pop	ebx

; 854  : }

	ret	0
$LN6@GrowBuffer@2:

; 813  : 			}
; 814  : 			m_nMaxSize = nAllocSize;

	mov	DWORD PTR [esi+8], edi
	pop	edi

; 850  : 		}
; 851  : 	}
; 852  : 
; 853  : 	return true;

	mov	al, 1
	pop	ebx

; 854  : }

	ret	0
$LN7@GrowBuffer@2:

; 815  : 		}
; 816  : 		else
; 817  : 		{
; 818  : 			// otherwise, grow array
; 819  : 			size_t nGrowBy = m_nGrowBy;
; 820  : 			if( nGrowBy == 0 )

	test	eax, eax
	jne	SHORT $LN13@GrowBuffer@2

; 821  : 			{
; 822  : 				// heuristically determine growth when nGrowBy == 0
; 823  : 				//  (this avoids heap fragmentation in many situations)
; 824  : 				nGrowBy = m_nSize/8;

	mov	eax, DWORD PTR [esi+4]
	shr	eax, 3

; 825  : 				nGrowBy = (nGrowBy < 4) ? 4 : ((nGrowBy > 1024) ? 1024 : nGrowBy);

	cmp	eax, 4
	jae	SHORT $LN15@GrowBuffer@2
	mov	eax, 4
	jmp	SHORT $LN13@GrowBuffer@2
$LN15@GrowBuffer@2:
	cmp	eax, 1024				; 00000400H
	jbe	SHORT $LN13@GrowBuffer@2
	mov	eax, 1024				; 00000400H
$LN13@GrowBuffer@2:

; 826  : 			}
; 827  : 			size_t nNewMax;
; 828  : 			if( nNewSize < (m_nMaxSize+nGrowBy) )

	add	eax, ecx

; 829  : 				nNewMax = m_nMaxSize+nGrowBy;  // granularity

	mov	ebx, eax
	cmp	edi, eax
	jb	SHORT $LN2@GrowBuffer@2

; 830  : 			else
; 831  : 				nNewMax = nNewSize;  // no slush

	mov	ebx, edi
$LN2@GrowBuffer@2:

; 832  : 
; 833  : 			ATLASSERT( nNewMax >= m_nMaxSize );  // no wrap around
; 834  : #ifdef SIZE_T_MAX
; 835  : 			ATLASSERT( nNewMax <= SIZE_T_MAX/sizeof( E ) ); // no overflow
; 836  : #endif
; 837  : 			E* pNewData = static_cast< E* >( calloc( nNewMax,sizeof( E ) ) );

	push	8
	push	ebx
	call	_calloc
	mov	edi, eax
	add	esp, 8

; 838  : 			if( pNewData == NULL )

	test	edi, edi

; 839  : 			{
; 840  : 				return false;

	je	SHORT $LN17@GrowBuffer@2

; 841  : 			}
; 842  : 
; 843  : 			// copy new data from old
; 844  : 			ETraits::RelocateElements( pNewData, m_pData, m_nSize );

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	push	edi
	call	?RelocateElements@?$CElementTraitsBase@UtagPOINT@@@ATL@@SAXPAUtagPOINT@@0I@Z ; ATL::CElementTraitsBase<tagPOINT>::RelocateElements

; 845  : 
; 846  : 			// get rid of old stuff (note: no destructors called)
; 847  : 			free( m_pData );

	mov	eax, DWORD PTR [esi]
	push	eax
	call	_free
	add	esp, 8

; 848  : 			m_pData = pNewData;

	mov	DWORD PTR [esi], edi

; 849  : 			m_nMaxSize = nNewMax;

	mov	DWORD PTR [esi+8], ebx
$LN5@GrowBuffer@2:

; 850  : 		}
; 851  : 	}
; 852  : 
; 853  : 	return true;

	pop	edi
	mov	al, 1
	pop	ebx

; 854  : }

	ret	0
?GrowBuffer@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@AAE_NI@Z ENDP ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::GrowBuffer
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@XZ PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::~CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >, COMDAT
; _this$ = esi

; 1504 : 	RemoveAll();

	jmp	?RemoveAll@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEXXZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::RemoveAll
??1?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::~CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveTail@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAVGlyph@ssf@@XZ
_TEXT	SEGMENT
?RemoveTail@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAVGlyph@ssf@@XZ PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::RemoveTail, COMDAT
; _this$ = eax

; 1738 : {

	push	esi
	mov	esi, eax

; 1739 : 	ATLENSURE( m_pTail != NULL );

	mov	eax, DWORD PTR [esi+4]
	push	edi
	test	eax, eax
	jne	SHORT $LN11@RemoveTail
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN30@RemoveTail:
$LN11@RemoveTail:

; 1740 : 
; 1741 : 	CNode* pNode = m_pTail;
; 1742 : 
; 1743 : 	E element( pNode->m_element );
; 1744 : 
; 1745 : 	m_pTail = pNode->m_pPrev;

	mov	ecx, DWORD PTR [eax+4]
	mov	edi, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+4], ecx

; 1746 : 	if( m_pTail != NULL )

	test	ecx, ecx
	je	SHORT $LN2@RemoveTail

; 1747 : 	{
; 1748 : 		m_pTail->m_pNext = NULL;

	mov	DWORD PTR [ecx], 0

; 1749 : 	}
; 1750 : 	else

	jmp	SHORT $LN1@RemoveTail
$LN2@RemoveTail:

; 1751 : 	{
; 1752 : 		m_pHead = NULL;

	mov	DWORD PTR [esi], 0
$LN1@RemoveTail:

; 1753 : 	}
; 1754 : 	FreeNode( pNode );

	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax], ecx
	dec	DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], eax
	jne	SHORT $LN15@RemoveTail
	call	?RemoveAll@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEXXZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::RemoveAll
$LN15@RemoveTail:

; 1755 : 
; 1756 : 	return( element );

	mov	eax, edi
	pop	edi
	pop	esi

; 1757 : }

	ret	0
$LN29@RemoveTail:
?RemoveTail@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAVGlyph@ssf@@XZ ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::RemoveTail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEPAVCPair@12@PB_W@Z
_TEXT	SEGMENT
_iBin$ = -4						; size = 4
_nHash$ = 8						; size = 4
_this$ = 8						; size = 4
_pPrev$ = 12						; size = 4
_key$ = 12						; size = 4
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEPAVCPair@12@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::Lookup, COMDAT

; 2838 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2839 : 	UINT iBin;
; 2840 : 	UINT nHash;
; 2841 : 	CNode* pNode;
; 2842 : 	CNode* pPrev;
; 2843 : 
; 2844 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::GetNode

; 2845 : 
; 2846 : 	return( pNode );
; 2847 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEPAVCPair@12@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::Lookup
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@IMMMI@Z
_TEXT	SEGMENT
_fOptimalLoad$ = 8					; size = 4
_fLoThreshold$ = 12					; size = 4
_fHiThreshold$ = 16					; size = 4
??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@IMMMI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >, COMDAT
; _this$ = esi

; 2554 : {

	push	ebp
	mov	ebp, esp

; 2555 : 	ATLASSERT( nBins > 0 );
; 2556 : 	ATLASSERT( nBlockSize > 0 );
; 2557 : 
; 2558 : 	SetOptimalLoad( fOptimalLoad, fLoThreshold, fHiThreshold, false );

	fld	DWORD PTR _fOptimalLoad$[ebp]
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR _fLoThreshold$[ebp]
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR _fHiThreshold$[ebp]
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::UpdateRehashThresholds

; 2559 : }

	mov	eax, esi
	pop	ebp
	ret	12					; 0000000cH
??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@IMMMI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveAll, COMDAT
; _this$ = eax

; 2628 : {

	push	esi
	mov	esi, eax

; 2629 : 	DisableAutoRehash();

	inc	DWORD PTR [esi+32]

; 2630 : 	if( m_ppBins != NULL )

	cmp	DWORD PTR [esi], 0
	push	edi
	je	SHORT $LN4@RemoveAll@11

; 2631 : 	{
; 2632 : 		for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	push	ebx
	xor	ebx, ebx
	cmp	DWORD PTR [esi+8], ebx
	jbe	SHORT $LN36@RemoveAll@11
$LL6@RemoveAll@11:

; 2633 : 		{
; 2634 : 			CNode* pNext;
; 2635 : 
; 2636 : 			pNext = m_ppBins[iBin];

	mov	eax, DWORD PTR [esi]
	mov	edi, DWORD PTR [eax+ebx*4]

; 2637 : 			while( pNext != NULL )

	test	edi, edi
	je	SHORT $LN5@RemoveAll@11
	npad	3
$LL3@RemoveAll@11:

; 2638 : 			{
; 2639 : 				CNode* pKill;
; 2640 : 
; 2641 : 				pKill = pNext;

	mov	eax, edi

; 2642 : 				pNext = pNext->m_pNext;

	mov	edi, DWORD PTR [edi+24]

; 2643 : 				FreeNode( pKill );

	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode
	test	edi, edi
	jne	SHORT $LL3@RemoveAll@11
$LN5@RemoveAll@11:

; 2631 : 	{
; 2632 : 		for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	inc	ebx
	cmp	ebx, DWORD PTR [esi+8]
	jb	SHORT $LL6@RemoveAll@11
$LN36@RemoveAll@11:
	pop	ebx
$LN4@RemoveAll@11:

; 2644 : 			}
; 2645 : 		}
; 2646 : 	}
; 2647 : 
; 2648 : 	delete[] m_ppBins;

	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]

; 2649 : 	m_ppBins = NULL;

	xor	edi, edi
	add	esp, 4
	mov	DWORD PTR [esi], edi

; 2650 : 	m_nElements = 0;

	mov	DWORD PTR [esi+4], edi

; 2651 : 
; 2652 : 	if( !IsLocked() )

	cmp	DWORD PTR [esi+32], edi
	jne	SHORT $LN1@RemoveAll@11

; 2653 : 	{
; 2654 : 		InitHashTable( PickSize( m_nElements ), false );

	push	edi
	xor	eax, eax
	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::PickSize
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::InitHashTable
$LN1@RemoveAll@11:

; 2655 : 	}
; 2656 : 
; 2657 : 	FreePlexes();

	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+44], edi
	cmp	eax, edi
	je	SHORT $LN35@RemoveAll@11
$LL18@RemoveAll@11:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL18@RemoveAll@11
	mov	DWORD PTR [esi+40], edi
$LN35@RemoveAll@11:

; 2658 : 	EnableAutoRehash();

	dec	DWORD PTR [esi+32]
	pop	edi
	pop	esi

; 2659 : }

	ret	0
?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z
_TEXT	SEGMENT
_iBin$ = -4						; size = 4
_nHash$ = 8						; size = 4
_this$ = 8						; size = 4
_pPrev$ = 12						; size = 4
_key$ = 12						; size = 4
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::Lookup, COMDAT

; 2838 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2839 : 	UINT iBin;
; 2840 : 	UINT nHash;
; 2841 : 	CNode* pNode;
; 2842 : 	CNode* pPrev;
; 2843 : 
; 2844 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNode

; 2845 : 
; 2846 : 	return( pNode );
; 2847 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::Lookup
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@IMMMI@Z
_TEXT	SEGMENT
_fOptimalLoad$ = 8					; size = 4
_fLoThreshold$ = 12					; size = 4
_fHiThreshold$ = 16					; size = 4
??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@IMMMI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >, COMDAT
; _this$ = esi

; 2554 : {

	push	ebp
	mov	ebp, esp

; 2555 : 	ATLASSERT( nBins > 0 );
; 2556 : 	ATLASSERT( nBlockSize > 0 );
; 2557 : 
; 2558 : 	SetOptimalLoad( fOptimalLoad, fLoThreshold, fHiThreshold, false );

	fld	DWORD PTR _fOptimalLoad$[ebp]
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR _fLoThreshold$[ebp]
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR _fHiThreshold$[ebp]
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::UpdateRehashThresholds

; 2559 : }

	mov	eax, esi
	pop	ebp
	ret	12					; 0000000cH
??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@IMMMI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveAll, COMDAT
; _this$ = eax

; 2628 : {

	push	esi
	mov	esi, eax

; 2629 : 	DisableAutoRehash();

	inc	DWORD PTR [esi+32]

; 2630 : 	if( m_ppBins != NULL )

	cmp	DWORD PTR [esi], 0
	push	edi
	je	SHORT $LN4@RemoveAll@12

; 2631 : 	{
; 2632 : 		for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	push	ebx
	xor	ebx, ebx
	cmp	DWORD PTR [esi+8], ebx
	jbe	SHORT $LN36@RemoveAll@12
$LL6@RemoveAll@12:

; 2633 : 		{
; 2634 : 			CNode* pNext;
; 2635 : 
; 2636 : 			pNext = m_ppBins[iBin];

	mov	eax, DWORD PTR [esi]
	mov	edi, DWORD PTR [eax+ebx*4]

; 2637 : 			while( pNext != NULL )

	test	edi, edi
	je	SHORT $LN5@RemoveAll@12
	npad	3
$LL3@RemoveAll@12:

; 2638 : 			{
; 2639 : 				CNode* pKill;
; 2640 : 
; 2641 : 				pKill = pNext;

	mov	eax, edi

; 2642 : 				pNext = pNext->m_pNext;

	mov	edi, DWORD PTR [edi+8]

; 2643 : 				FreeNode( pKill );

	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreeNode
	test	edi, edi
	jne	SHORT $LL3@RemoveAll@12
$LN5@RemoveAll@12:

; 2631 : 	{
; 2632 : 		for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	inc	ebx
	cmp	ebx, DWORD PTR [esi+8]
	jb	SHORT $LL6@RemoveAll@12
$LN36@RemoveAll@12:
	pop	ebx
$LN4@RemoveAll@12:

; 2644 : 			}
; 2645 : 		}
; 2646 : 	}
; 2647 : 
; 2648 : 	delete[] m_ppBins;

	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]

; 2649 : 	m_ppBins = NULL;

	xor	edi, edi
	add	esp, 4
	mov	DWORD PTR [esi], edi

; 2650 : 	m_nElements = 0;

	mov	DWORD PTR [esi+4], edi

; 2651 : 
; 2652 : 	if( !IsLocked() )

	cmp	DWORD PTR [esi+32], edi
	jne	SHORT $LN1@RemoveAll@12

; 2653 : 	{
; 2654 : 		InitHashTable( PickSize( m_nElements ), false );

	push	edi
	xor	eax, eax
	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::PickSize
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::InitHashTable
$LN1@RemoveAll@12:

; 2655 : 	}
; 2656 : 
; 2657 : 	FreePlexes();

	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+44], edi
	cmp	eax, edi
	je	SHORT $LN35@RemoveAll@12
$LL18@RemoveAll@12:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL18@RemoveAll@12
	mov	DWORD PTR [esi+40], edi
$LN35@RemoveAll@12:

; 2658 : 	EnableAutoRehash();

	dec	DWORD PTR [esi+32]
	pop	edi
	pop	esi

; 2659 : }

	ret	0
?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBE_NPB_WAAPAVRenderedSubtitle@ssf@@@Z
_TEXT	SEGMENT
_iBin$ = -4						; size = 4
_nHash$ = 8						; size = 4
_this$ = 8						; size = 4
_pPrev$ = 12						; size = 4
_key$ = 12						; size = 4
_value$ = 16						; size = 4
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBE_NPB_WAAPAVRenderedSubtitle@ssf@@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Lookup, COMDAT

; 2804 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2805 : 	UINT iBin;
; 2806 : 	UINT nHash;
; 2807 : 	CNode* pNode;
; 2808 : 	CNode* pPrev;
; 2809 : 
; 2810 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode

; 2811 : 	if( pNode == NULL )

	test	eax, eax
	jne	SHORT $LN1@Lookup@11

; 2812 : 	{
; 2813 : 		return( false );

	xor	al, al

; 2819 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN1@Lookup@11:

; 2814 : 	}
; 2815 : 
; 2816 : 	value = pNode->m_value;

	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [edx], ecx

; 2817 : 
; 2818 : 	return( true );

	mov	al, 1

; 2819 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QBE_NPB_WAAPAVRenderedSubtitle@ssf@@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Lookup
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z
_TEXT	SEGMENT
_iBin$ = -4						; size = 4
_nHash$ = 8						; size = 4
_this$ = 8						; size = 4
_pPrev$ = 12						; size = 4
_key$ = 12						; size = 4
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Lookup, COMDAT

; 2838 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2839 : 	UINT iBin;
; 2840 : 	UINT nHash;
; 2841 : 	CNode* pNode;
; 2842 : 	CNode* pPrev;
; 2843 : 
; 2844 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode

; 2845 : 
; 2846 : 	return( pNode );
; 2847 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Lookup
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@IMMMI@Z
_TEXT	SEGMENT
_fOptimalLoad$ = 8					; size = 4
_fLoThreshold$ = 12					; size = 4
_fHiThreshold$ = 16					; size = 4
??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@IMMMI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >, COMDAT
; _this$ = esi

; 2554 : {

	push	ebp
	mov	ebp, esp

; 2555 : 	ATLASSERT( nBins > 0 );
; 2556 : 	ATLASSERT( nBlockSize > 0 );
; 2557 : 
; 2558 : 	SetOptimalLoad( fOptimalLoad, fLoThreshold, fHiThreshold, false );

	fld	DWORD PTR _fOptimalLoad$[ebp]
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR _fLoThreshold$[ebp]
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR _fHiThreshold$[ebp]
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::UpdateRehashThresholds

; 2559 : }

	mov	eax, esi
	pop	ebp
	ret	12					; 0000000cH
??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@IMMMI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveAll, COMDAT
; _this$ = eax

; 2628 : {

	push	esi
	mov	esi, eax

; 2629 : 	DisableAutoRehash();

	inc	DWORD PTR [esi+32]

; 2630 : 	if( m_ppBins != NULL )

	cmp	DWORD PTR [esi], 0
	push	edi
	je	SHORT $LN4@RemoveAll@13

; 2631 : 	{
; 2632 : 		for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	push	ebx
	xor	ebx, ebx
	cmp	DWORD PTR [esi+8], ebx
	jbe	SHORT $LN36@RemoveAll@13
$LL6@RemoveAll@13:

; 2633 : 		{
; 2634 : 			CNode* pNext;
; 2635 : 
; 2636 : 			pNext = m_ppBins[iBin];

	mov	eax, DWORD PTR [esi]
	mov	edi, DWORD PTR [eax+ebx*4]

; 2637 : 			while( pNext != NULL )

	test	edi, edi
	je	SHORT $LN5@RemoveAll@13
	npad	3
$LL3@RemoveAll@13:

; 2638 : 			{
; 2639 : 				CNode* pKill;
; 2640 : 
; 2641 : 				pKill = pNext;

	mov	eax, edi

; 2642 : 				pNext = pNext->m_pNext;

	mov	edi, DWORD PTR [edi+8]

; 2643 : 				FreeNode( pKill );

	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreeNode
	test	edi, edi
	jne	SHORT $LL3@RemoveAll@13
$LN5@RemoveAll@13:

; 2631 : 	{
; 2632 : 		for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	inc	ebx
	cmp	ebx, DWORD PTR [esi+8]
	jb	SHORT $LL6@RemoveAll@13
$LN36@RemoveAll@13:
	pop	ebx
$LN4@RemoveAll@13:

; 2644 : 			}
; 2645 : 		}
; 2646 : 	}
; 2647 : 
; 2648 : 	delete[] m_ppBins;

	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]

; 2649 : 	m_ppBins = NULL;

	xor	edi, edi
	add	esp, 4
	mov	DWORD PTR [esi], edi

; 2650 : 	m_nElements = 0;

	mov	DWORD PTR [esi+4], edi

; 2651 : 
; 2652 : 	if( !IsLocked() )

	cmp	DWORD PTR [esi+32], edi
	jne	SHORT $LN1@RemoveAll@13

; 2653 : 	{
; 2654 : 		InitHashTable( PickSize( m_nElements ), false );

	push	edi
	xor	eax, eax
	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::PickSize
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::InitHashTable
$LN1@RemoveAll@13:

; 2655 : 	}
; 2656 : 
; 2657 : 	FreePlexes();

	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+44], edi
	cmp	eax, edi
	je	SHORT $LN35@RemoveAll@13
$LL18@RemoveAll@13:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL18@RemoveAll@13
	mov	DWORD PTR [esi+40], edi
$LN35@RemoveAll@13:

; 2658 : 	EnableAutoRehash();

	dec	DWORD PTR [esi+32]
	pop	edi
	pop	esi

; 2659 : }

	ret	0
?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBE_NPB_WAAPAVGlyphPath@ssf@@@Z
_TEXT	SEGMENT
_iBin$ = -4						; size = 4
_nHash$ = 8						; size = 4
_this$ = 8						; size = 4
_pPrev$ = 12						; size = 4
_key$ = 12						; size = 4
_value$ = 16						; size = 4
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBE_NPB_WAAPAVGlyphPath@ssf@@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Lookup, COMDAT

; 2804 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2805 : 	UINT iBin;
; 2806 : 	UINT nHash;
; 2807 : 	CNode* pNode;
; 2808 : 	CNode* pPrev;
; 2809 : 
; 2810 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode

; 2811 : 	if( pNode == NULL )

	test	eax, eax
	jne	SHORT $LN1@Lookup@12

; 2812 : 	{
; 2813 : 		return( false );

	xor	al, al

; 2819 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN1@Lookup@12:

; 2814 : 	}
; 2815 : 
; 2816 : 	value = pNode->m_value;

	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [edx], ecx

; 2817 : 
; 2818 : 	return( true );

	mov	al, 1

; 2819 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QBE_NPB_WAAPAVGlyphPath@ssf@@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Lookup
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z
_TEXT	SEGMENT
_iBin$ = -4						; size = 4
_nHash$ = 8						; size = 4
_this$ = 8						; size = 4
_pPrev$ = 12						; size = 4
_key$ = 12						; size = 4
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Lookup, COMDAT

; 2838 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2839 : 	UINT iBin;
; 2840 : 	UINT nHash;
; 2841 : 	CNode* pNode;
; 2842 : 	CNode* pPrev;
; 2843 : 
; 2844 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode

; 2845 : 
; 2846 : 	return( pNode );
; 2847 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Lookup
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@IMMMI@Z
_TEXT	SEGMENT
_fOptimalLoad$ = 8					; size = 4
_fLoThreshold$ = 12					; size = 4
_fHiThreshold$ = 16					; size = 4
??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@IMMMI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >, COMDAT
; _this$ = esi

; 2554 : {

	push	ebp
	mov	ebp, esp

; 2555 : 	ATLASSERT( nBins > 0 );
; 2556 : 	ATLASSERT( nBlockSize > 0 );
; 2557 : 
; 2558 : 	SetOptimalLoad( fOptimalLoad, fLoThreshold, fHiThreshold, false );

	fld	DWORD PTR _fOptimalLoad$[ebp]
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR _fLoThreshold$[ebp]
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR _fHiThreshold$[ebp]
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::UpdateRehashThresholds

; 2559 : }

	mov	eax, esi
	pop	ebp
	ret	12					; 0000000cH
??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@IMMMI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveAll, COMDAT
; _this$ = eax

; 2628 : {

	push	esi
	mov	esi, eax

; 2629 : 	DisableAutoRehash();

	inc	DWORD PTR [esi+32]

; 2630 : 	if( m_ppBins != NULL )

	cmp	DWORD PTR [esi], 0
	push	edi
	je	SHORT $LN4@RemoveAll@14

; 2631 : 	{
; 2632 : 		for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	push	ebx
	xor	ebx, ebx
	cmp	DWORD PTR [esi+8], ebx
	jbe	SHORT $LN36@RemoveAll@14
$LL6@RemoveAll@14:

; 2633 : 		{
; 2634 : 			CNode* pNext;
; 2635 : 
; 2636 : 			pNext = m_ppBins[iBin];

	mov	eax, DWORD PTR [esi]
	mov	edi, DWORD PTR [eax+ebx*4]

; 2637 : 			while( pNext != NULL )

	test	edi, edi
	je	SHORT $LN5@RemoveAll@14
	npad	3
$LL3@RemoveAll@14:

; 2638 : 			{
; 2639 : 				CNode* pKill;
; 2640 : 
; 2641 : 				pKill = pNext;

	mov	eax, edi

; 2642 : 				pNext = pNext->m_pNext;

	mov	edi, DWORD PTR [edi+8]

; 2643 : 				FreeNode( pKill );

	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreeNode
	test	edi, edi
	jne	SHORT $LL3@RemoveAll@14
$LN5@RemoveAll@14:

; 2631 : 	{
; 2632 : 		for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	inc	ebx
	cmp	ebx, DWORD PTR [esi+8]
	jb	SHORT $LL6@RemoveAll@14
$LN36@RemoveAll@14:
	pop	ebx
$LN4@RemoveAll@14:

; 2644 : 			}
; 2645 : 		}
; 2646 : 	}
; 2647 : 
; 2648 : 	delete[] m_ppBins;

	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]

; 2649 : 	m_ppBins = NULL;

	xor	edi, edi
	add	esp, 4
	mov	DWORD PTR [esi], edi

; 2650 : 	m_nElements = 0;

	mov	DWORD PTR [esi+4], edi

; 2651 : 
; 2652 : 	if( !IsLocked() )

	cmp	DWORD PTR [esi+32], edi
	jne	SHORT $LN1@RemoveAll@14

; 2653 : 	{
; 2654 : 		InitHashTable( PickSize( m_nElements ), false );

	push	edi
	xor	eax, eax
	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::PickSize
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::InitHashTable
$LN1@RemoveAll@14:

; 2655 : 	}
; 2656 : 
; 2657 : 	FreePlexes();

	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+44], edi
	cmp	eax, edi
	je	SHORT $LN35@RemoveAll@14
$LL18@RemoveAll@14:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL18@RemoveAll@14
	mov	DWORD PTR [esi+40], edi
$LN35@RemoveAll@14:

; 2658 : 	EnableAutoRehash();

	dec	DWORD PTR [esi+32]
	pop	edi
	pop	esi

; 2659 : }

	ret	0
?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBE_NPB_WAAPAVFontWrapper@ssf@@@Z
_TEXT	SEGMENT
_iBin$ = -4						; size = 4
_nHash$ = 8						; size = 4
_this$ = 8						; size = 4
_pPrev$ = 12						; size = 4
_key$ = 12						; size = 4
_value$ = 16						; size = 4
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBE_NPB_WAAPAVFontWrapper@ssf@@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Lookup, COMDAT

; 2804 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2805 : 	UINT iBin;
; 2806 : 	UINT nHash;
; 2807 : 	CNode* pNode;
; 2808 : 	CNode* pPrev;
; 2809 : 
; 2810 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode

; 2811 : 	if( pNode == NULL )

	test	eax, eax
	jne	SHORT $LN1@Lookup@13

; 2812 : 	{
; 2813 : 		return( false );

	xor	al, al

; 2819 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN1@Lookup@13:

; 2814 : 	}
; 2815 : 
; 2816 : 	value = pNode->m_value;

	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [edx], ecx

; 2817 : 
; 2818 : 	return( true );

	mov	al, 1

; 2819 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QBE_NPB_WAAPAVFontWrapper@ssf@@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Lookup
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z
_TEXT	SEGMENT
_iBin$ = -4						; size = 4
_nHash$ = 8						; size = 4
_this$ = 8						; size = 4
_pPrev$ = 12						; size = 4
_key$ = 12						; size = 4
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Lookup, COMDAT

; 2838 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2839 : 	UINT iBin;
; 2840 : 	UINT nHash;
; 2841 : 	CNode* pNode;
; 2842 : 	CNode* pPrev;
; 2843 : 
; 2844 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode

; 2845 : 
; 2846 : 	return( pNode );
; 2847 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Lookup@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEPAVCPair@12@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Lookup
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@IMMMI@Z
_TEXT	SEGMENT
_fOptimalLoad$ = 8					; size = 4
_fLoThreshold$ = 12					; size = 4
_fHiThreshold$ = 16					; size = 4
??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@IMMMI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >, COMDAT
; _this$ = esi

; 2554 : {

	push	ebp
	mov	ebp, esp

; 2555 : 	ATLASSERT( nBins > 0 );
; 2556 : 	ATLASSERT( nBlockSize > 0 );
; 2557 : 
; 2558 : 	SetOptimalLoad( fOptimalLoad, fLoThreshold, fHiThreshold, false );

	fld	DWORD PTR _fOptimalLoad$[ebp]
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR _fLoThreshold$[ebp]
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR _fHiThreshold$[ebp]
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::UpdateRehashThresholds

; 2559 : }

	mov	eax, esi
	pop	ebp
	ret	12					; 0000000cH
??0?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@IMMMI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Copy@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAEXABV12@@Z
_TEXT	SEGMENT
_aSrc$ = 8						; size = 4
?Copy@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAEXABV12@@Z PROC ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::Copy, COMDAT
; _this$ = eax

; 935  : {

	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR _aSrc$[ebp]
	push	esi
	push	edi

; 936  : 	ATLASSERT_VALID(this);
; 937  : 	ATLASSERT( this != &aSrc );   // cannot append to itself
; 938  : 
; 939  : 	bool bSuccess=SetCount( aSrc.m_nSize );

	mov	edi, DWORD PTR [ebx+4]
	mov	esi, eax
	test	edi, edi
	jne	SHORT $LN12@Copy
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@Copy
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi], edi
$LN11@Copy:
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	jmp	SHORT $LN1@Copy
$LN12@Copy:
	cmp	edi, DWORD PTR [esi+8]
	ja	SHORT $LN9@Copy
	cmp	edi, DWORD PTR [esi+4]
	jbe	SHORT $LN8@Copy
$LN39@Copy:
	call	?CallConstructors@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@CAXPAUPoint@ssf@@I@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::CallConstructors
$LN8@Copy:
	mov	DWORD PTR [esi+4], edi
$LN1@Copy:

; 943  : 	}
; 944  : 
; 945  : 	ETraits::CopyElements( m_pData, aSrc.m_pData, aSrc.m_nSize );

	mov	edx, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [esi]
	test	edx, edx
	je	SHORT $LN26@Copy
	sub	ecx, eax
	npad	4
$LL28@Copy:
	mov	esi, DWORD PTR [ecx+eax]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	dec	edx
	jne	SHORT $LL28@Copy
$LN26@Copy:
	pop	edi
	pop	esi
	pop	ebx

; 946  : }

	pop	ebp
	ret	4

; 936  : 	ATLASSERT_VALID(this);
; 937  : 	ATLASSERT( this != &aSrc );   // cannot append to itself
; 938  : 
; 939  : 	bool bSuccess=SetCount( aSrc.m_nSize );

$LN9@Copy:
	mov	eax, edi
	call	?GrowBuffer@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@AAE_NI@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::GrowBuffer
	test	al, al

; 940  : 	if( !bSuccess )

	jne	SHORT $LN39@Copy

; 941  : 	{
; 942  : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN40@Copy:
$LN38@Copy:
	int	3
?Copy@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAEXABV12@@Z ENDP ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::Copy
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?SetCount@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE_NIH@Z
_TEXT	SEGMENT
?SetCount@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE_NIH@Z PROC ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::SetCount, COMDAT
; _this$ = eax
; _nNewSize$ = edi

; 860  : {

	push	esi
	mov	esi, eax

; 861  : 	ATLASSERT_VALID(this);
; 862  : 
; 863  : 	if( nGrowBy != -1 )
; 864  : 	{
; 865  : 		m_nGrowBy = nGrowBy;  // set new size
; 866  : 	}
; 867  : 
; 868  : 	if( nNewSize == 0 )

	test	edi, edi
	jne	SHORT $LN9@SetCount@3

; 869  : 	{
; 870  : 		// shrink to nothing
; 871  : 		if( m_pData != NULL )

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN8@SetCount@3

; 872  : 		{
; 873  : 			CallDestructors( m_pData, m_nSize );
; 874  : 			free( m_pData );

	push	eax
	call	_free
	add	esp, 4

; 875  : 			m_pData = NULL;

	mov	DWORD PTR [esi], edi
$LN8@SetCount@3:

; 876  : 		}
; 877  : 		m_nSize = 0;

	mov	DWORD PTR [esi+4], 0

; 878  : 		m_nMaxSize = 0;

	mov	DWORD PTR [esi+8], 0

; 910  : 	}
; 911  : 
; 912  : 	return true;

	mov	al, 1
	pop	esi

; 913  : }

	ret	0
$LN9@SetCount@3:

; 879  : 	}
; 880  : 	else if( nNewSize <= m_nMaxSize )

	cmp	edi, DWORD PTR [esi+8]
	ja	SHORT $LN6@SetCount@3

; 881  : 	{
; 882  : 		// it fits
; 883  : 		if( nNewSize > m_nSize )

	cmp	edi, DWORD PTR [esi+4]
	jbe	SHORT $LN5@SetCount@3
$LN1@SetCount@3:

; 901  : 		{
; 902  : 			return( false );
; 903  : 		}
; 904  : 
; 905  : 		// construct new elements
; 906  : 		ATLASSERT( nNewSize > m_nSize );
; 907  : 		CallConstructors( m_pData+m_nSize, nNewSize-m_nSize );

	call	?CallConstructors@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@CAXPAUtagPOINT@@I@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CallConstructors
$LN5@SetCount@3:

; 908  : 
; 909  : 		m_nSize = nNewSize;

	mov	DWORD PTR [esi+4], edi

; 910  : 	}
; 911  : 
; 912  : 	return true;

	mov	al, 1
	pop	esi

; 913  : }

	ret	0
$LN6@SetCount@3:

; 884  : 		{
; 885  : 			// initialize the new elements
; 886  : 			CallConstructors( m_pData+m_nSize, nNewSize-m_nSize );
; 887  : 		}
; 888  : 		else if( m_nSize > nNewSize )
; 889  : 		{
; 890  : 			// destroy the old elements
; 891  : 			CallDestructors( m_pData+nNewSize, m_nSize-nNewSize );
; 892  : 		}
; 893  : 		m_nSize = nNewSize;
; 894  : 	}
; 895  : 	else
; 896  : 	{
; 897  : 		bool bSuccess;
; 898  : 
; 899  : 		bSuccess = GrowBuffer( nNewSize );

	mov	eax, edi
	call	?GrowBuffer@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@AAE_NI@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::GrowBuffer

; 900  : 		if( !bSuccess )

	test	al, al
	jne	SHORT $LN1@SetCount@3
	pop	esi

; 913  : }

	ret	0
?SetCount@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE_NIH@Z ENDP ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::SetCount
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ
_TEXT	SEGMENT
_pNode$534615 = -4					; size = 4
_this$ = 8						; size = 4
?RemoveAll@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ PROC ; ssf::Cache<ssf::RenderedSubtitle *>::RemoveAll, COMDAT

; 42   : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx

; 43   : 			POSITION pos = m_key2obj.GetStartPosition();

	mov	ebx, DWORD PTR _this$[ebp]
	xor	eax, eax
	push	esi
	cmp	DWORD PTR [ebx+8], eax
	je	SHORT $LN12@RemoveAll@15
	mov	edx, DWORD PTR [ebx+12]
	test	edx, edx
	je	SHORT $LN8@RemoveAll@15
	mov	esi, DWORD PTR [ebx+4]
	mov	ecx, esi
	npad	4
$LL10@RemoveAll@15:
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN48@RemoveAll@15
	inc	eax
	add	ecx, 4
	cmp	eax, edx
	jb	SHORT $LL10@RemoveAll@15
$LN8@RemoveAll@15:
	xor	eax, eax
$LN12@RemoveAll@15:
	mov	esi, eax

; 44   : 			while(pos) delete m_key2obj.GetNextValue(pos);

	test	eax, eax
	je	SHORT $LN1@RemoveAll@15
	push	edi
$LL2@RemoveAll@15:
	test	esi, esi
	je	SHORT $LN49@RemoveAll@15
	mov	edi, DWORD PTR [esi+8]
	mov	DWORD PTR _pNode$534615[ebp], esi
	test	edi, edi
	jne	SHORT $LN53@RemoveAll@15
	mov	ecx, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [esi+12]
	xor	edx, edx
	div	ecx
	inc	edx
	npad	1
$LL36@RemoveAll@15:
	cmp	edx, ecx
	jae	SHORT $LN53@RemoveAll@15
	mov	eax, DWORD PTR [ebx+4]
	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN34@RemoveAll@15
	mov	edi, DWORD PTR [eax]
$LN34@RemoveAll@15:
	inc	edx
	test	edi, edi
	je	SHORT $LL36@RemoveAll@15
$LN53@RemoveAll@15:
	mov	ecx, DWORD PTR _pNode$534615[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	esi, edi
	test	ecx, ecx
	je	SHORT $LN5@RemoveAll@15
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN5@RemoveAll@15:
	test	edi, edi
	jne	SHORT $LL2@RemoveAll@15
	pop	edi
$LN1@RemoveAll@15:

; 45   : 			m_key2obj.RemoveAll();

	lea	eax, DWORD PTR [ebx+4]
	call	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveAll

; 46   : 			m_objs.RemoveAll();

	mov	esi, ebx
	add	esi, 52					; 00000034H
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	pop	esi
	pop	ebx

; 47   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN48@RemoveAll@15:

; 43   : 			POSITION pos = m_key2obj.GetStartPosition();

	mov	eax, DWORD PTR [esi+eax*4]
	jmp	SHORT $LN12@RemoveAll@15
$LN49@RemoveAll@15:

; 44   : 			while(pos) delete m_key2obj.GetNextValue(pos);

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN55@RemoveAll@15:
$LN54@RemoveAll@15:
	int	3
?RemoveAll@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ ENDP ; ssf::Cache<ssf::RenderedSubtitle *>::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ
_TEXT	SEGMENT
_pNode$534690 = -4					; size = 4
_this$ = 8						; size = 4
?RemoveAll@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ PROC	; ssf::Cache<ssf::GlyphPath *>::RemoveAll, COMDAT

; 42   : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx

; 43   : 			POSITION pos = m_key2obj.GetStartPosition();

	mov	ebx, DWORD PTR _this$[ebp]
	xor	eax, eax
	push	esi
	cmp	DWORD PTR [ebx+8], eax
	je	SHORT $LN12@RemoveAll@16
	mov	edx, DWORD PTR [ebx+12]
	test	edx, edx
	je	SHORT $LN8@RemoveAll@16
	mov	esi, DWORD PTR [ebx+4]
	mov	ecx, esi
	npad	4
$LL10@RemoveAll@16:
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN48@RemoveAll@16
	inc	eax
	add	ecx, 4
	cmp	eax, edx
	jb	SHORT $LL10@RemoveAll@16
$LN8@RemoveAll@16:
	xor	eax, eax
$LN12@RemoveAll@16:
	mov	esi, eax

; 44   : 			while(pos) delete m_key2obj.GetNextValue(pos);

	test	eax, eax
	je	SHORT $LN1@RemoveAll@16
	push	edi
$LL2@RemoveAll@16:
	test	esi, esi
	je	SHORT $LN49@RemoveAll@16
	mov	edi, DWORD PTR [esi+8]
	mov	DWORD PTR _pNode$534690[ebp], esi
	test	edi, edi
	jne	SHORT $LN53@RemoveAll@16
	mov	ecx, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [esi+12]
	xor	edx, edx
	div	ecx
	inc	edx
	npad	1
$LL36@RemoveAll@16:
	cmp	edx, ecx
	jae	SHORT $LN53@RemoveAll@16
	mov	eax, DWORD PTR [ebx+4]
	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN34@RemoveAll@16
	mov	edi, DWORD PTR [eax]
$LN34@RemoveAll@16:
	inc	edx
	test	edi, edi
	je	SHORT $LL36@RemoveAll@16
$LN53@RemoveAll@16:
	mov	ecx, DWORD PTR _pNode$534690[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	esi, edi
	test	ecx, ecx
	je	SHORT $LN5@RemoveAll@16
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN5@RemoveAll@16:
	test	edi, edi
	jne	SHORT $LL2@RemoveAll@16
	pop	edi
$LN1@RemoveAll@16:

; 45   : 			m_key2obj.RemoveAll();

	lea	eax, DWORD PTR [ebx+4]
	call	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveAll

; 46   : 			m_objs.RemoveAll();

	mov	esi, ebx
	add	esi, 52					; 00000034H
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	pop	esi
	pop	ebx

; 47   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN48@RemoveAll@16:

; 43   : 			POSITION pos = m_key2obj.GetStartPosition();

	mov	eax, DWORD PTR [esi+eax*4]
	jmp	SHORT $LN12@RemoveAll@16
$LN49@RemoveAll@16:

; 44   : 			while(pos) delete m_key2obj.GetNextValue(pos);

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN55@RemoveAll@16:
$LN54@RemoveAll@16:
	int	3
?RemoveAll@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ ENDP	; ssf::Cache<ssf::GlyphPath *>::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ
_TEXT	SEGMENT
_pNode$534791 = -4					; size = 4
_this$ = 8						; size = 4
?RemoveAll@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ PROC ; ssf::Cache<ssf::FontWrapper *>::RemoveAll, COMDAT

; 42   : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx

; 43   : 			POSITION pos = m_key2obj.GetStartPosition();

	mov	ebx, DWORD PTR _this$[ebp]
	xor	eax, eax
	push	esi
	cmp	DWORD PTR [ebx+8], eax
	je	SHORT $LN12@RemoveAll@17
	mov	edx, DWORD PTR [ebx+12]
	test	edx, edx
	je	SHORT $LN8@RemoveAll@17
	mov	esi, DWORD PTR [ebx+4]
	mov	ecx, esi
	npad	4
$LL10@RemoveAll@17:
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN48@RemoveAll@17
	inc	eax
	add	ecx, 4
	cmp	eax, edx
	jb	SHORT $LL10@RemoveAll@17
$LN8@RemoveAll@17:
	xor	eax, eax
$LN12@RemoveAll@17:
	mov	esi, eax

; 44   : 			while(pos) delete m_key2obj.GetNextValue(pos);

	test	eax, eax
	je	SHORT $LN1@RemoveAll@17
	push	edi
$LL2@RemoveAll@17:
	test	esi, esi
	je	SHORT $LN49@RemoveAll@17
	mov	edi, DWORD PTR [esi+8]
	mov	DWORD PTR _pNode$534791[ebp], esi
	test	edi, edi
	jne	SHORT $LN53@RemoveAll@17
	mov	ecx, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [esi+12]
	xor	edx, edx
	div	ecx
	inc	edx
	npad	1
$LL36@RemoveAll@17:
	cmp	edx, ecx
	jae	SHORT $LN53@RemoveAll@17
	mov	eax, DWORD PTR [ebx+4]
	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN34@RemoveAll@17
	mov	edi, DWORD PTR [eax]
$LN34@RemoveAll@17:
	inc	edx
	test	edi, edi
	je	SHORT $LL36@RemoveAll@17
$LN53@RemoveAll@17:
	mov	ecx, DWORD PTR _pNode$534791[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	esi, edi
	test	ecx, ecx
	je	SHORT $LN5@RemoveAll@17
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN5@RemoveAll@17:
	test	edi, edi
	jne	SHORT $LL2@RemoveAll@17
	pop	edi
$LN1@RemoveAll@17:

; 45   : 			m_key2obj.RemoveAll();

	lea	eax, DWORD PTR [ebx+4]
	call	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveAll

; 46   : 			m_objs.RemoveAll();

	mov	esi, ebx
	add	esi, 52					; 00000034H
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	pop	esi
	pop	ebx

; 47   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
$LN48@RemoveAll@17:

; 43   : 			POSITION pos = m_key2obj.GetStartPosition();

	mov	eax, DWORD PTR [esi+eax*4]
	jmp	SHORT $LN12@RemoveAll@17
$LN49@RemoveAll@17:

; 44   : 			while(pos) delete m_key2obj.GetNextValue(pos);

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN55@RemoveAll@17:
$LN54@RemoveAll@17:
	int	3
?RemoveAll@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ ENDP ; ssf::Cache<ssf::FontWrapper *>::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Lookup@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAE_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVRenderedSubtitle@2@@Z
_TEXT	SEGMENT
_iBin$534836 = -8					; size = 4
_nHash$534837 = -4					; size = 4
_pPrev$534839 = 8					; size = 4
_this$ = 8						; size = 4
_val$ = 12						; size = 4
?Lookup@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAE_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVRenderedSubtitle@2@@Z PROC ; ssf::Cache<ssf::RenderedSubtitle *>::Lookup, COMDAT
; _key$ = eax

; 71   : 		{

	push	ebp
	mov	ebp, esp

; 72   : 			return m_key2obj.Lookup(key, val) && val;

	mov	eax, DWORD PTR [eax]
	sub	esp, 8
	lea	ecx, DWORD PTR _pPrev$534839[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$534837[ebp]
	push	edx
	lea	ecx, DWORD PTR _iBin$534836[ebp]
	push	ecx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
	test	eax, eax
	je	SHORT $LN3@Lookup@14
	mov	eax, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _val$[ebp]
	mov	DWORD PTR [edx], eax
	test	eax, eax
	je	SHORT $LN3@Lookup@14
	mov	eax, 1

; 73   : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN3@Lookup@14:

; 72   : 			return m_key2obj.Lookup(key, val) && val;

	xor	eax, eax

; 73   : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?Lookup@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAE_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVRenderedSubtitle@2@@Z ENDP ; ssf::Cache<ssf::RenderedSubtitle *>::Lookup
_TEXT	ENDS
PUBLIC	?UpdateTarget@SubRectAllocator@ssf@@QAEXABVCSize@@ABVCRect@@@Z ; ssf::SubRectAllocator::UpdateTarget
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.cpp
;	COMDAT ?UpdateTarget@SubRectAllocator@ssf@@QAEXABVCSize@@ABVCRect@@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
?UpdateTarget@SubRectAllocator@ssf@@QAEXABVCSize@@ABVCRect@@@Z PROC ; ssf::SubRectAllocator::UpdateTarget, COMDAT
; _this$ = esi
; _s$ = edi

; 673  : 	{

	push	ebp
	mov	ebp, esp

; 674  : 		if(vs != s || vr != r) RemoveAll();

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [edi+4]
	push	ebx
	mov	ebx, DWORD PTR _r$[ebp]
	cmp	DWORD PTR [esi+48], eax
	jne	SHORT $LN1@UpdateTarg
	cmp	DWORD PTR [esi+52], ecx
	jne	SHORT $LN1@UpdateTarg
	push	ebx
	lea	eax, DWORD PTR [esi+56]
	push	eax
	call	DWORD PTR __imp__EqualRect@8
	test	eax, eax
	jne	SHORT $LN2@UpdateTarg
$LN1@UpdateTarg:
	mov	eax, esi
	call	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveAll
$LN2@UpdateTarg:

; 675  : 		vs = s;

	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi+48], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+52], edx

; 676  : 		vr = r;

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [esi+56], eax
	mov	ecx, DWORD PTR [ebx+4]
	mov	DWORD PTR [esi+60], ecx
	mov	edx, DWORD PTR [ebx+8]
	mov	DWORD PTR [esi+64], edx
	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR [esi+68], eax

; 677  : 	}

	pop	ebx
	pop	ebp
	ret	4
?UpdateTarget@SubRectAllocator@ssf@@QAEXABVCSize@@ABVCRect@@@Z ENDP ; ssf::SubRectAllocator::UpdateTarget
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@@Z
_TEXT	SEGMENT
_size$ = -12						; size = 8
___$ReturnUdt$ = 8					; size = 4
?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@@Z PROC ; ssf::GetAlignPoint, COMDAT
; _placement$ = esi
; _scale$ = edx
; _frame$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 62   : 		CSize size(0, 0);

	xor	eax, eax
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR _size$[ebp], eax
	mov	DWORD PTR _size$[ebp+4], eax

; 63   : 		return GetAlignPoint(placement, scale, frame, size);

	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	push	ecx
	push	edx
	call	?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@ABVCSize@@@Z ; ssf::GetAlignPoint
	add	esp, 12					; 0000000cH
	mov	eax, edi

; 64   : 	}

	pop	edi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@@Z ENDP ; ssf::GetAlignPoint
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\subtitle.h
_TEXT	ENDS
;	COMDAT ??4Path@ssf@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
??4Path@ssf@@QAEAAV01@ABV01@@Z PROC			; ssf::Path::operator=, COMDAT
; _this$ = esi
; _path$ = eax

; 46   : 		Path& operator = (const Path& path) {Copy(path); return *this;} 

	push	eax
	mov	eax, esi
	call	?Copy@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAEXABV12@@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::Copy
	mov	eax, esi
	ret	0
??4Path@ssf@@QAEAAV01@ABV01@@Z ENDP			; ssf::Path::operator=
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\glyphpath.h
_TEXT	ENDS
;	COMDAT ??1GlyphPath@ssf@@UAE@XZ
_TEXT	SEGMENT
??1GlyphPath@ssf@@UAE@XZ PROC				; ssf::GlyphPath::~GlyphPath, COMDAT
; _this$ = ecx

; 32   : 		virtual ~GlyphPath() {}

	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7GlyphPath@ssf@@6B@
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN3@GlyphPath
	push	eax
	call	_free
	add	esp, 4
$LN3@GlyphPath:
	mov	esi, DWORD PTR [esi+4]
	test	esi, esi
	je	SHORT $LN11@GlyphPath
	push	esi
	call	_free
	add	esp, 4
$LN11@GlyphPath:
	pop	esi
	ret	0
??1GlyphPath@ssf@@UAE@XZ ENDP				; ssf::GlyphPath::~GlyphPath
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0GlyphPath@ssf@@QAE@XZ
_TEXT	SEGMENT
??0GlyphPath@ssf@@QAE@XZ PROC				; ssf::GlyphPath::GlyphPath, COMDAT
; _this$ = eax

; 31   : 		GlyphPath() {}

	xor	ecx, ecx
	mov	DWORD PTR [eax], OFFSET ??_7GlyphPath@ssf@@6B@
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	DWORD PTR [eax+32], ecx
	ret	0
??0GlyphPath@ssf@@QAE@XZ ENDP				; ssf::GlyphPath::GlyphPath
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
;	COMDAT ?GetFreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT
?GetFreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXXZ PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::GetFreeNode, COMDAT
; _this$ = esi

; 1514 : 	if( m_pFree == NULL )

	cmp	DWORD PTR [esi+16], 0
	jne	SHORT $LN4@GetFreeNod

; 1515 : 	{
; 1516 : 		CAtlPlex* pPlex;
; 1517 : 		CNode* pNode;
; 1518 : 
; 1519 : 		pPlex = CAtlPlex::Create( m_pBlocks, m_nBlockSize, sizeof( CNode ) );

	mov	eax, DWORD PTR [esi+20]
	xor	ecx, ecx
	push	edi
	mov	edi, ecx
	shld	ecx, eax, 1
	mov	edx, eax
	add	eax, eax
	add	eax, edx
	adc	ecx, edi
	shld	ecx, eax, 2
	add	eax, eax
	add	eax, eax
	pop	edi
	test	ecx, ecx
	ja	SHORT $LN39@GetFreeNod
	jb	SHORT $LN40@GetFreeNod
	cmp	eax, -1
	ja	SHORT $LN39@GetFreeNod
$LN40@GetFreeNod:
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, 4
	jb	SHORT $LN39@GetFreeNod
	add	eax, 4
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $LN39@GetFreeNod
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [esi+12], eax

; 1523 : 		}
; 1524 : 		pNode = (CNode*)pPlex->data();
; 1525 : 		pNode += m_nBlockSize-1;

	mov	ecx, DWORD PTR [esi+20]
	lea	edx, DWORD PTR [ecx+ecx*2]

; 1526 : 		for( int iBlock = m_nBlockSize-1; iBlock >= 0; iBlock-- )

	dec	ecx
	lea	eax, DWORD PTR [eax+edx*4-8]
	js	SHORT $LN4@GetFreeNod
	npad	3
$LL9@GetFreeNod:

; 1527 : 		{
; 1528 : 			pNode->m_pNext = m_pFree;

	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax], edx

; 1529 : 			m_pFree = pNode;

	mov	DWORD PTR [esi+16], eax

; 1530 : 			pNode--;

	sub	eax, 12					; 0000000cH
	dec	ecx
	jns	SHORT $LL9@GetFreeNod
$LN4@GetFreeNod:

; 1531 : 		}
; 1532 : 	}
; 1533 : 	ATLASSUME( m_pFree != NULL );
; 1534 : }

	ret	0
$LN39@GetFreeNod:

; 1520 : 		if( pPlex == NULL )
; 1521 : 		{
; 1522 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN42@GetFreeNod:
$LN41@GetFreeNod:
	int	3
?GetFreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXXZ ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::GetFreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetFreeNode, COMDAT
; _this$ = esi

; 1514 : 	if( m_pFree == NULL )

	cmp	DWORD PTR [esi+16], 0
	jne	SHORT $LN4@GetFreeNod@2

; 1515 : 	{
; 1516 : 		CAtlPlex* pPlex;
; 1517 : 		CNode* pNode;
; 1518 : 
; 1519 : 		pPlex = CAtlPlex::Create( m_pBlocks, m_nBlockSize, sizeof( CNode ) );

	mov	eax, DWORD PTR [esi+20]
	xor	ecx, ecx
	push	edi
	mov	edi, ecx
	shld	ecx, eax, 1
	mov	edx, eax
	add	eax, eax
	add	eax, edx
	adc	ecx, edi
	shld	ecx, eax, 2
	add	eax, eax
	add	eax, eax
	pop	edi
	test	ecx, ecx
	ja	SHORT $LN39@GetFreeNod@2
	jb	SHORT $LN40@GetFreeNod@2
	cmp	eax, -1
	ja	SHORT $LN39@GetFreeNod@2
$LN40@GetFreeNod@2:
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, 4
	jb	SHORT $LN39@GetFreeNod@2
	add	eax, 4
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $LN39@GetFreeNod@2
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [esi+12], eax

; 1523 : 		}
; 1524 : 		pNode = (CNode*)pPlex->data();
; 1525 : 		pNode += m_nBlockSize-1;

	mov	ecx, DWORD PTR [esi+20]
	lea	edx, DWORD PTR [ecx+ecx*2]

; 1526 : 		for( int iBlock = m_nBlockSize-1; iBlock >= 0; iBlock-- )

	dec	ecx
	lea	eax, DWORD PTR [eax+edx*4-8]
	js	SHORT $LN4@GetFreeNod@2
	npad	3
$LL9@GetFreeNod@2:

; 1527 : 		{
; 1528 : 			pNode->m_pNext = m_pFree;

	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax], edx

; 1529 : 			m_pFree = pNode;

	mov	DWORD PTR [esi+16], eax

; 1530 : 			pNode--;

	sub	eax, 12					; 0000000cH
	dec	ecx
	jns	SHORT $LL9@GetFreeNod@2
$LN4@GetFreeNod@2:

; 1531 : 		}
; 1532 : 	}
; 1533 : 	ATLASSUME( m_pFree != NULL );
; 1534 : }

	ret	0
$LN39@GetFreeNod@2:

; 1520 : 		if( pPlex == NULL )
; 1521 : 		{
; 1522 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN42@GetFreeNod@2:
$LN41@GetFreeNod@2:
	int	3
?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetFreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXPAVCNode@12@@Z
_TEXT	SEGMENT
?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXPAVCNode@12@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::FreeNode, COMDAT
; _this$ = esi
; _pNode$ = eax

; 2736 : {

	push	edi
	mov	edi, eax

; 2737 : 	ATLENSURE( pNode != NULL );

	test	edi, edi
	jne	SHORT $LN17@FreeNode@14
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN49@FreeNode@14:
$LN17@FreeNode@14:

; 2738 : 
; 2739 : 	pNode->~CNode();

	mov	eax, DWORD PTR [edi]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN34@FreeNode@14
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN34@FreeNode@14:

; 2740 : 	pNode->m_pNext = m_pFree;

	mov	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [edi+8], ecx

; 2741 : 	m_pFree = pNode;
; 2742 : 
; 2743 : 	ATLASSUME( m_nElements > 0 );
; 2744 : 	m_nElements--;

	dec	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+44], edi

; 2745 : 
; 2746 : 	if( (m_nElements < m_nLoRehashThreshold) && !IsLocked() )

	cmp	eax, DWORD PTR [esi+28]
	jae	SHORT $LN2@FreeNode@14
	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN2@FreeNode@14

; 2747 : 	{
; 2748 : 		Rehash( PickSize( m_nElements ) );

	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::PickSize
	push	eax
	push	esi
	call	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::Rehash
$LN2@FreeNode@14:

; 2749 : 	}
; 2750 : 
; 2751 : 	if( m_nElements == 0 )

	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN39@FreeNode@14

; 2752 : 	{
; 2753 : 		FreePlexes();

	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+44], 0
	test	eax, eax
	je	SHORT $LN39@FreeNode@14
	npad	5
$LL43@FreeNode@14:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL43@FreeNode@14
	mov	DWORD PTR [esi+40], edi
$LN39@FreeNode@14:

; 2754 : 	}
; 2755 : }

	pop	edi
	ret	0
$LN48@FreeNode@14:
?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXPAVCNode@12@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::FreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ
_TEXT	SEGMENT
?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode, COMDAT
; _this$ = esi

; 1514 : 	if( m_pFree == NULL )

	cmp	DWORD PTR [esi+16], 0
	jne	SHORT $LN4@GetFreeNod@3

; 1515 : 	{
; 1516 : 		CAtlPlex* pPlex;
; 1517 : 		CNode* pNode;
; 1518 : 
; 1519 : 		pPlex = CAtlPlex::Create( m_pBlocks, m_nBlockSize, sizeof( CNode ) );

	mov	eax, DWORD PTR [esi+20]
	xor	ecx, ecx
	push	edi
	mov	edi, ecx
	shld	ecx, eax, 1
	mov	edx, eax
	add	eax, eax
	add	eax, edx
	adc	ecx, edi
	shld	ecx, eax, 2
	add	eax, eax
	add	eax, eax
	pop	edi
	test	ecx, ecx
	ja	SHORT $LN39@GetFreeNod@3
	jb	SHORT $LN40@GetFreeNod@3
	cmp	eax, -1
	ja	SHORT $LN39@GetFreeNod@3
$LN40@GetFreeNod@3:
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, 4
	jb	SHORT $LN39@GetFreeNod@3
	add	eax, 4
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $LN39@GetFreeNod@3
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [esi+12], eax

; 1523 : 		}
; 1524 : 		pNode = (CNode*)pPlex->data();
; 1525 : 		pNode += m_nBlockSize-1;

	mov	ecx, DWORD PTR [esi+20]
	lea	edx, DWORD PTR [ecx+ecx*2]

; 1526 : 		for( int iBlock = m_nBlockSize-1; iBlock >= 0; iBlock-- )

	dec	ecx
	lea	eax, DWORD PTR [eax+edx*4-8]
	js	SHORT $LN4@GetFreeNod@3
	npad	3
$LL9@GetFreeNod@3:

; 1527 : 		{
; 1528 : 			pNode->m_pNext = m_pFree;

	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax], edx

; 1529 : 			m_pFree = pNode;

	mov	DWORD PTR [esi+16], eax

; 1530 : 			pNode--;

	sub	eax, 12					; 0000000cH
	dec	ecx
	jns	SHORT $LL9@GetFreeNod@3
$LN4@GetFreeNod@3:

; 1531 : 		}
; 1532 : 	}
; 1533 : 	ATLASSUME( m_pFree != NULL );
; 1534 : }

	ret	0
$LN39@GetFreeNod@3:

; 1520 : 		if( pPlex == NULL )
; 1521 : 		{
; 1522 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN42@GetFreeNod@3:
$LN41@GetFreeNod@3:
	int	3
?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?NewNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEPAVCNode@12@ABQAVGlyph@ssf@@PAV312@1@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
_pPrev$ = 12						; size = 4
?NewNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEPAVCNode@12@ABQAVGlyph@ssf@@PAV312@1@Z PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::NewNode, COMDAT
; _this$ = eax

; 1562 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, eax

; 1563 : 	GetFreeNode();

	call	?GetFreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXXZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::GetFreeNode

; 1564 : 
; 1565 : 	CNode* pNewNode = m_pFree;

	mov	eax, DWORD PTR [esi+16]

; 1566 : 	CNode* pNextFree = m_pFree->m_pNext;

	mov	ecx, DWORD PTR [eax]

; 1567 : 
; 1568 : 	::new( pNewNode ) CNode( element );

	test	eax, eax
	je	SHORT $LN9@NewNode@2
	mov	edx, DWORD PTR _element$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax+8], edx
$LN9@NewNode@2:

; 1569 : 
; 1570 : 	m_pFree = pNextFree;

	mov	DWORD PTR [esi+16], ecx

; 1571 : 	pNewNode->m_pPrev = pPrev;

	mov	ecx, DWORD PTR _pPrev$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1572 : 	pNewNode->m_pNext = pNext;

	mov	DWORD PTR [eax], 0

; 1573 : 	m_nElements++;

	inc	DWORD PTR [esi+8]
	pop	esi

; 1574 : 	ATLASSUME( m_nElements > 0 );
; 1575 : 
; 1576 : 	return( pNewNode );
; 1577 : }

	pop	ebp
	ret	8
?NewNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEPAVCNode@12@ABQAVGlyph@ssf@@PAV312@1@Z ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::NewNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::RemoveAll, COMDAT
; _this$ = eax

; 2628 : {

	push	esi
	mov	esi, eax

; 2629 : 	DisableAutoRehash();

	inc	DWORD PTR [esi+32]

; 2630 : 	if( m_ppBins != NULL )

	cmp	DWORD PTR [esi], 0
	push	edi
	je	SHORT $LN4@RemoveAll@20

; 2631 : 	{
; 2632 : 		for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	push	ebx
	xor	ebx, ebx
	cmp	DWORD PTR [esi+8], ebx
	jbe	SHORT $LN36@RemoveAll@20
$LL6@RemoveAll@20:

; 2633 : 		{
; 2634 : 			CNode* pNext;
; 2635 : 
; 2636 : 			pNext = m_ppBins[iBin];

	mov	eax, DWORD PTR [esi]
	mov	edi, DWORD PTR [eax+ebx*4]

; 2637 : 			while( pNext != NULL )

	test	edi, edi
	je	SHORT $LN5@RemoveAll@20
	npad	3
$LL3@RemoveAll@20:

; 2638 : 			{
; 2639 : 				CNode* pKill;
; 2640 : 
; 2641 : 				pKill = pNext;

	mov	eax, edi

; 2642 : 				pNext = pNext->m_pNext;

	mov	edi, DWORD PTR [edi+8]

; 2643 : 				FreeNode( pKill );

	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::FreeNode
	test	edi, edi
	jne	SHORT $LL3@RemoveAll@20
$LN5@RemoveAll@20:

; 2631 : 	{
; 2632 : 		for( UINT iBin = 0; iBin < m_nBins; iBin++ )

	inc	ebx
	cmp	ebx, DWORD PTR [esi+8]
	jb	SHORT $LL6@RemoveAll@20
$LN36@RemoveAll@20:
	pop	ebx
$LN4@RemoveAll@20:

; 2644 : 			}
; 2645 : 		}
; 2646 : 	}
; 2647 : 
; 2648 : 	delete[] m_ppBins;

	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]

; 2649 : 	m_ppBins = NULL;

	xor	edi, edi
	add	esp, 4
	mov	DWORD PTR [esi], edi

; 2650 : 	m_nElements = 0;

	mov	DWORD PTR [esi+4], edi

; 2651 : 
; 2652 : 	if( !IsLocked() )

	cmp	DWORD PTR [esi+32], edi
	jne	SHORT $LN1@RemoveAll@20

; 2653 : 	{
; 2654 : 		InitHashTable( PickSize( m_nElements ), false );

	push	edi
	xor	eax, eax
	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::PickSize
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::InitHashTable
$LN1@RemoveAll@20:

; 2655 : 	}
; 2656 : 
; 2657 : 	FreePlexes();

	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+44], edi
	cmp	eax, edi
	je	SHORT $LN35@RemoveAll@20
$LL18@RemoveAll@20:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL18@RemoveAll@20
	mov	DWORD PTR [esi+40], edi
$LN35@RemoveAll@20:

; 2658 : 	EnableAutoRehash();

	dec	DWORD PTR [esi+32]
	pop	edi
	pop	esi

; 2659 : }

	ret	0
?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveNode, COMDAT
; _pNode$ = ecx
; _pPrev$ = eax

; 2873 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2874 : 	ATLENSURE( pNode != NULL );

	test	ecx, ecx
	jne	SHORT $LN17@RemoveNode
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN24@RemoveNode:
$LN17@RemoveNode:

; 2877 : 
; 2878 : 	if( pPrev == NULL )

	test	eax, eax
	jne	SHORT $LN8@RemoveNode

; 2875 : 
; 2876 : 	UINT iBin = pNode->GetHash() % m_nBins;

	mov	eax, DWORD PTR [ecx+28]
	xor	edx, edx
	div	DWORD PTR [esi+8]

; 2879 : 	{
; 2880 : 		ATLASSUME( m_ppBins[iBin] == pNode );
; 2881 : 		m_ppBins[iBin] = pNode->m_pNext;

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+edx*4], edi
	pop	edi

; 2887 : 	}
; 2888 : 	FreeNode( pNode );

	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode
	pop	esi

; 2889 : }

	pop	ebp
	ret	4
$LN8@RemoveNode:

; 2882 : 	}
; 2883 : 	else
; 2884 : 	{
; 2885 : 		ATLASSERT( pPrev->m_pNext == pNode );
; 2886 : 		pPrev->m_pNext = pNode->m_pNext;

	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 2887 : 	}
; 2888 : 	FreeNode( pNode );

	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode
	pop	esi

; 2889 : }

	pop	ebp
	ret	4
$LN23@RemoveNode:
?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveNode, COMDAT
; _pNode$ = ecx
; _pPrev$ = eax

; 2873 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2874 : 	ATLENSURE( pNode != NULL );

	test	ecx, ecx
	jne	SHORT $LN17@RemoveNode@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN24@RemoveNode@2:
$LN17@RemoveNode@2:

; 2877 : 
; 2878 : 	if( pPrev == NULL )

	test	eax, eax
	jne	SHORT $LN8@RemoveNode@2

; 2875 : 
; 2876 : 	UINT iBin = pNode->GetHash() % m_nBins;

	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR [esi+8]

; 2879 : 	{
; 2880 : 		ATLASSUME( m_ppBins[iBin] == pNode );
; 2881 : 		m_ppBins[iBin] = pNode->m_pNext;

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+edx*4], edi
	pop	edi

; 2887 : 	}
; 2888 : 	FreeNode( pNode );

	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreeNode
	pop	esi

; 2889 : }

	pop	ebp
	ret	4
$LN8@RemoveNode@2:

; 2882 : 	}
; 2883 : 	else
; 2884 : 	{
; 2885 : 		ATLASSERT( pPrev->m_pNext == pNode );
; 2886 : 		pPrev->m_pNext = pNode->m_pNext;

	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 2887 : 	}
; 2888 : 	FreeNode( pNode );

	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreeNode
	pop	esi

; 2889 : }

	pop	ebp
	ret	4
$LN23@RemoveNode@2:
?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveNode, COMDAT
; _pNode$ = ecx
; _pPrev$ = eax

; 2873 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2874 : 	ATLENSURE( pNode != NULL );

	test	ecx, ecx
	jne	SHORT $LN17@RemoveNode@3
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN24@RemoveNode@3:
$LN17@RemoveNode@3:

; 2877 : 
; 2878 : 	if( pPrev == NULL )

	test	eax, eax
	jne	SHORT $LN8@RemoveNode@3

; 2875 : 
; 2876 : 	UINT iBin = pNode->GetHash() % m_nBins;

	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR [esi+8]

; 2879 : 	{
; 2880 : 		ATLASSUME( m_ppBins[iBin] == pNode );
; 2881 : 		m_ppBins[iBin] = pNode->m_pNext;

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+edx*4], edi
	pop	edi

; 2887 : 	}
; 2888 : 	FreeNode( pNode );

	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreeNode
	pop	esi

; 2889 : }

	pop	ebp
	ret	4
$LN8@RemoveNode@3:

; 2882 : 	}
; 2883 : 	else
; 2884 : 	{
; 2885 : 		ATLASSERT( pPrev->m_pNext == pNode );
; 2886 : 		pPrev->m_pNext = pNode->m_pNext;

	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 2887 : 	}
; 2888 : 	FreeNode( pNode );

	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreeNode
	pop	esi

; 2889 : }

	pop	ebp
	ret	4
$LN23@RemoveNode@3:
?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveNode, COMDAT
; _pNode$ = ecx
; _pPrev$ = eax

; 2873 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2874 : 	ATLENSURE( pNode != NULL );

	test	ecx, ecx
	jne	SHORT $LN17@RemoveNode@4
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN24@RemoveNode@4:
$LN17@RemoveNode@4:

; 2877 : 
; 2878 : 	if( pPrev == NULL )

	test	eax, eax
	jne	SHORT $LN8@RemoveNode@4

; 2875 : 
; 2876 : 	UINT iBin = pNode->GetHash() % m_nBins;

	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR [esi+8]

; 2879 : 	{
; 2880 : 		ATLASSUME( m_ppBins[iBin] == pNode );
; 2881 : 		m_ppBins[iBin] = pNode->m_pNext;

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+edx*4], edi
	pop	edi

; 2887 : 	}
; 2888 : 	FreeNode( pNode );

	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreeNode
	pop	esi

; 2889 : }

	pop	ebp
	ret	4
$LN8@RemoveNode@4:

; 2882 : 	}
; 2883 : 	else
; 2884 : 	{
; 2885 : 		ATLASSERT( pPrev->m_pNext == pNode );
; 2886 : 		pPrev->m_pNext = pNode->m_pNext;

	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 2887 : 	}
; 2888 : 	FreeNode( pNode );

	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreeNode
	pop	esi

; 2889 : }

	pop	ebp
	ret	4
$LN23@RemoveNode@4:
?RemoveNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@0@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?AddTail@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAU__POSITION@@ABQAVGlyph@ssf@@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?AddTail@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAU__POSITION@@ABQAVGlyph@ssf@@@Z PROC ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::AddTail, COMDAT
; _this$ = eax

; 1651 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, eax
	push	edi

; 1652 : 	CNode* pNode;
; 1653 : 
; 1654 : 	pNode = NewNode( element, m_pTail, NULL );

	mov	edi, DWORD PTR [esi+4]
	call	?GetFreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXXZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN13@AddTail
	mov	edx, DWORD PTR _element$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [eax+8], edx
$LN13@AddTail:
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax], 0

; 1655 : 
; 1656 : 	if( m_pTail != NULL )

	mov	ecx, DWORD PTR [esi+4]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN2@AddTail

; 1657 : 	{
; 1658 : 		m_pTail->m_pNext = pNode;

	mov	DWORD PTR [ecx], eax
	pop	edi

; 1663 : 	}
; 1664 : 	m_pTail = pNode;

	mov	DWORD PTR [esi+4], eax
	pop	esi

; 1665 : 
; 1666 : 	return( POSITION( pNode ) );
; 1667 : }

	pop	ebp
	ret	4
$LN2@AddTail:
	pop	edi

; 1659 : 	}
; 1660 : 	else
; 1661 : 	{
; 1662 : 		m_pHead = pNode;

	mov	DWORD PTR [esi], eax

; 1663 : 	}
; 1664 : 	m_pTail = pNode;

	mov	DWORD PTR [esi+4], eax
	pop	esi

; 1665 : 
; 1666 : 	return( POSITION( pNode ) );
; 1667 : }

	pop	ebp
	ret	4
?AddTail@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEPAU__POSITION@@ABQAVGlyph@ssf@@@Z ENDP ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::AddTail
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ$0
__tryblocktable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ$2
__ehfuncinfo$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >, COMDAT

; 2663 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 2664 : 	_ATLTRY
; 2665 : 	{
; 2666 : 		RemoveAll();

	mov	eax, DWORD PTR _this$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::RemoveAll
$LN7@CAtlMap:

; 2672 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ$0:

; 2667 : 	}
; 2668 : 	_ATLCATCHALL()
; 2669 : 	{
; 2670 : 		ATLASSERT(false);
; 2671 : 	}

	mov	eax, $LN7@CAtlMap
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ$0
__tryblocktable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ$2
__ehfuncinfo$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >, COMDAT

; 2663 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 2664 : 	_ATLTRY
; 2665 : 	{
; 2666 : 		RemoveAll();

	mov	eax, DWORD PTR _this$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveAll
$LN7@CAtlMap@2:

; 2672 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ$0:

; 2667 : 	}
; 2668 : 	_ATLCATCHALL()
; 2669 : 	{
; 2670 : 		ATLASSERT(false);
; 2671 : 	}

	mov	eax, $LN7@CAtlMap@2
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >
; Function compile flags: /Ogtp
;	COMDAT ?RemoveAtPos@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z
_TEXT	SEGMENT
?RemoveAtPos@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveAtPos, COMDAT
; _this$ = eax
; _pos$ = ecx

; 2893 : {

	push	ebx
	push	esi
	push	edi
	mov	esi, eax

; 2894 : 	ATLENSURE( pos != NULL );

	test	ecx, ecx
	jne	SHORT $LN19@RemoveAtPo
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN52@RemoveAtPo:
$LN19@RemoveAtPo:

; 2895 : 
; 2896 : 	CNode* pNode = static_cast< CNode* >( pos );
; 2897 : 	CNode* pPrev = NULL;
; 2898 : 	UINT iBin = pNode->GetHash() % m_nBins;

	mov	eax, DWORD PTR [ecx+28]
	xor	edx, edx
	div	DWORD PTR [esi+8]

; 2899 : 
; 2900 : 	ATLASSUME( m_ppBins[iBin] != NULL );
; 2901 : 	if( pNode == m_ppBins[iBin] )

	mov	ebx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [ebx+edx*4]

; 2902 : 	{
; 2903 : 		pPrev = NULL;
; 2904 : 	}
; 2905 : 	else

	je	SHORT $LN50@RemoveAtPo

; 2906 : 	{
; 2907 : 		pPrev = m_ppBins[iBin];

	mov	edi, DWORD PTR [ebx+edx*4]

; 2908 : 		while( pPrev->m_pNext != pNode )

	mov	eax, DWORD PTR [edi+24]
	cmp	eax, ecx
	je	SHORT $LN42@RemoveAtPo
	npad	4
$LL2@RemoveAtPo:

; 2909 : 		{
; 2910 : 			pPrev = pPrev->m_pNext;

	mov	edi, eax
	mov	eax, DWORD PTR [edi+24]
	cmp	eax, ecx
	jne	SHORT $LL2@RemoveAtPo

; 2911 : 			ATLASSERT( pPrev != NULL );
; 2912 : 		}
; 2913 : 	}
; 2914 : 	RemoveNode( pNode, pPrev );

$LN42@RemoveAtPo:
	test	edi, edi
	jne	SHORT $LN32@RemoveAtPo
$LN50@RemoveAtPo:
	mov	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR [ebx+edx*4], eax
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode
	pop	edi
	pop	esi
	pop	ebx

; 2915 : }

	ret	0

; 2911 : 			ATLASSERT( pPrev != NULL );
; 2912 : 		}
; 2913 : 	}
; 2914 : 	RemoveNode( pNode, pPrev );

$LN32@RemoveAtPo:
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, ecx
	mov	DWORD PTR [edi+24], edx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode
	pop	edi
	pop	esi
	pop	ebx

; 2915 : }

	ret	0
$LN51@RemoveAtPo:
?RemoveAtPos@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveAtPos
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NPB_W@Z
_TEXT	SEGMENT
_iBin$ = -8						; size = 4
_pPrev$ = -4						; size = 4
_nHash$ = 8						; size = 4
_key$ = 8						; size = 4
?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NPB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveKey, COMDAT
; _this$ = eax

; 2851 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	esi, eax

; 2852 : 	CNode* pNode;
; 2853 : 	UINT iBin;
; 2854 : 	UINT nHash;
; 2855 : 	CNode* pPrev;
; 2856 : 
; 2857 : 	pPrev = NULL;
; 2858 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, esi
	mov	DWORD PTR _pPrev$[ebp], 0
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNode
	mov	ecx, eax

; 2859 : 	if( pNode == NULL )

	test	ecx, ecx
	jne	SHORT $LN1@RemoveKey

; 2860 : 	{
; 2861 : 		return( false );

	xor	al, al
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN1@RemoveKey:

; 2862 : 	}
; 2863 : 
; 2864 : 	RemoveNode( pNode, pPrev );

	mov	eax, DWORD PTR _pPrev$[ebp]
	test	eax, eax
	jne	SHORT $LN11@RemoveKey
	mov	eax, DWORD PTR [ecx+28]
	xor	edx, edx
	div	DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+edx*4], edi
	pop	edi
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode

; 2865 : 
; 2866 : 	return( true );

	mov	al, 1
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4

; 2862 : 	}
; 2863 : 
; 2864 : 	RemoveNode( pNode, pPrev );

$LN11@RemoveKey:
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode

; 2865 : 
; 2866 : 	return( true );

	mov	al, 1
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NPB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveKey
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ$0
__tryblocktable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ$2
__ehfuncinfo$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >, COMDAT

; 2663 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 2664 : 	_ATLTRY
; 2665 : 	{
; 2666 : 		RemoveAll();

	mov	eax, DWORD PTR _this$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveAll
$LN7@CAtlMap@3:

; 2672 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ$0:

; 2667 : 	}
; 2668 : 	_ATLCATCHALL()
; 2669 : 	{
; 2670 : 		ATLASSERT(false);
; 2671 : 	}

	mov	eax, $LN7@CAtlMap@3
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
; Function compile flags: /Ogtp
;	COMDAT ?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NPB_W@Z
_TEXT	SEGMENT
_iBin$ = -8						; size = 4
_pPrev$ = -4						; size = 4
_nHash$ = 8						; size = 4
_key$ = 8						; size = 4
?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NPB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveKey, COMDAT
; _this$ = eax

; 2851 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	esi, eax

; 2852 : 	CNode* pNode;
; 2853 : 	UINT iBin;
; 2854 : 	UINT nHash;
; 2855 : 	CNode* pPrev;
; 2856 : 
; 2857 : 	pPrev = NULL;
; 2858 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, esi
	mov	DWORD PTR _pPrev$[ebp], 0
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
	mov	ecx, eax

; 2859 : 	if( pNode == NULL )

	test	ecx, ecx
	jne	SHORT $LN1@RemoveKey@2

; 2860 : 	{
; 2861 : 		return( false );

	xor	al, al
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN1@RemoveKey@2:

; 2862 : 	}
; 2863 : 
; 2864 : 	RemoveNode( pNode, pPrev );

	mov	eax, DWORD PTR _pPrev$[ebp]
	test	eax, eax
	jne	SHORT $LN11@RemoveKey@2
	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+edx*4], edi
	pop	edi
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreeNode

; 2865 : 
; 2866 : 	return( true );

	mov	al, 1
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4

; 2862 : 	}
; 2863 : 
; 2864 : 	RemoveNode( pNode, pPrev );

$LN11@RemoveKey@2:
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreeNode

; 2865 : 
; 2866 : 	return( true );

	mov	al, 1
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NPB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::RemoveKey
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ$0
__tryblocktable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ$2
__ehfuncinfo$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >, COMDAT

; 2663 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 2664 : 	_ATLTRY
; 2665 : 	{
; 2666 : 		RemoveAll();

	mov	eax, DWORD PTR _this$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveAll
$LN7@CAtlMap@4:

; 2672 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ$0:

; 2667 : 	}
; 2668 : 	_ATLCATCHALL()
; 2669 : 	{
; 2670 : 		ATLASSERT(false);
; 2671 : 	}

	mov	eax, $LN7@CAtlMap@4
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
; Function compile flags: /Ogtp
;	COMDAT ?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NPB_W@Z
_TEXT	SEGMENT
_iBin$ = -8						; size = 4
_pPrev$ = -4						; size = 4
_nHash$ = 8						; size = 4
_key$ = 8						; size = 4
?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NPB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveKey, COMDAT
; _this$ = eax

; 2851 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	esi, eax

; 2852 : 	CNode* pNode;
; 2853 : 	UINT iBin;
; 2854 : 	UINT nHash;
; 2855 : 	CNode* pPrev;
; 2856 : 
; 2857 : 	pPrev = NULL;
; 2858 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, esi
	mov	DWORD PTR _pPrev$[ebp], 0
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode
	mov	ecx, eax

; 2859 : 	if( pNode == NULL )

	test	ecx, ecx
	jne	SHORT $LN1@RemoveKey@3

; 2860 : 	{
; 2861 : 		return( false );

	xor	al, al
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN1@RemoveKey@3:

; 2862 : 	}
; 2863 : 
; 2864 : 	RemoveNode( pNode, pPrev );

	mov	eax, DWORD PTR _pPrev$[ebp]
	test	eax, eax
	jne	SHORT $LN11@RemoveKey@3
	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+edx*4], edi
	pop	edi
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreeNode

; 2865 : 
; 2866 : 	return( true );

	mov	al, 1
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4

; 2862 : 	}
; 2863 : 
; 2864 : 	RemoveNode( pNode, pPrev );

$LN11@RemoveKey@3:
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreeNode

; 2865 : 
; 2866 : 	return( true );

	mov	al, 1
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NPB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::RemoveKey
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ$0
__tryblocktable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ$2
__ehfuncinfo$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ
	DD	01H
	DD	FLAT:__tryblocktable$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >, COMDAT

; 2663 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 2664 : 	_ATLTRY
; 2665 : 	{
; 2666 : 		RemoveAll();

	mov	eax, DWORD PTR _this$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveAll
$LN7@CAtlMap@5:

; 2672 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ$0:

; 2667 : 	}
; 2668 : 	_ATLCATCHALL()
; 2669 : 	{
; 2670 : 		ATLASSERT(false);
; 2671 : 	}

	mov	eax, $LN7@CAtlMap@5
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
; Function compile flags: /Ogtp
;	COMDAT ?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NPB_W@Z
_TEXT	SEGMENT
_iBin$ = -8						; size = 4
_pPrev$ = -4						; size = 4
_nHash$ = 8						; size = 4
_key$ = 8						; size = 4
?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NPB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveKey, COMDAT
; _this$ = eax

; 2851 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	esi, eax

; 2852 : 	CNode* pNode;
; 2853 : 	UINT iBin;
; 2854 : 	UINT nHash;
; 2855 : 	CNode* pPrev;
; 2856 : 
; 2857 : 	pPrev = NULL;
; 2858 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	eax
	mov	eax, esi
	mov	DWORD PTR _pPrev$[ebp], 0
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode
	mov	ecx, eax

; 2859 : 	if( pNode == NULL )

	test	ecx, ecx
	jne	SHORT $LN1@RemoveKey@4

; 2860 : 	{
; 2861 : 		return( false );

	xor	al, al
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN1@RemoveKey@4:

; 2862 : 	}
; 2863 : 
; 2864 : 	RemoveNode( pNode, pPrev );

	mov	eax, DWORD PTR _pPrev$[ebp]
	test	eax, eax
	jne	SHORT $LN11@RemoveKey@4
	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+edx*4], edi
	pop	edi
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreeNode

; 2865 : 
; 2866 : 	return( true );

	mov	al, 1
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4

; 2862 : 	}
; 2863 : 
; 2864 : 	RemoveNode( pNode, pPrev );

$LN11@RemoveKey@4:
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreeNode

; 2865 : 
; 2866 : 	return( true );

	mov	al, 1
	pop	esi

; 2867 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NPB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::RemoveKey
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Append@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEIABV12@@Z
_TEXT	SEGMENT
tv194 = 8						; size = 4
_aSrc$ = 8						; size = 4
?Append@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEIABV12@@Z PROC ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::Append, COMDAT
; _this$ = eax

; 917  : {

	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR _aSrc$[ebp]
	push	esi
	mov	esi, eax

; 918  : 	ATLASSERT_VALID(this);
; 919  : 	ATLASSERT( this != &aSrc );   // cannot append to itself
; 920  : 
; 921  : 	size_t nOldSize = m_nSize;

	mov	ecx, DWORD PTR [esi+4]

; 922  : 	bool bSuccess = SetCount(AtlAddThrow<size_t>(m_nSize, aSrc.m_nSize));

	mov	eax, DWORD PTR [ebx+4]
	or	edx, -1
	sub	edx, ecx
	push	edi
	mov	DWORD PTR tv194[ebp], ecx
	cmp	edx, eax
	jb	SHORT $LN48@Append@2
	lea	edi, DWORD PTR [ecx+eax]
	test	edi, edi
	jne	SHORT $LN23@Append@2
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN22@Append@2
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi], edi
$LN22@Append@2:
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	jmp	SHORT $LN1@Append@2
$LN48@Append@2:
	push	-2147024362				; 80070216H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN52@Append@2:
$LN23@Append@2:
	cmp	edi, DWORD PTR [esi+8]
	ja	SHORT $LN20@Append@2
	cmp	edi, ecx
	jbe	SHORT $LN19@Append@2
$LN51@Append@2:
	call	?CallConstructors@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@CAXPAUtagPOINT@@I@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::CallConstructors
$LN19@Append@2:
	mov	DWORD PTR [esi+4], edi
$LN1@Append@2:

; 926  : 	}
; 927  : 
; 928  : 	ETraits::CopyElements( m_pData+nOldSize, aSrc.m_pData, aSrc.m_nSize );

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [ebx+4]
	mov	esi, DWORD PTR tv194[ebp]
	mov	ecx, DWORD PTR [ebx]
	lea	eax, DWORD PTR [eax+esi*8]
	test	edx, edx
	je	SHORT $LN37@Append@2
	sub	ecx, eax
	npad	3
$LL39@Append@2:
	mov	edi, DWORD PTR [ecx+eax]
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR [eax+4], edi
	add	eax, 8
	dec	edx
	jne	SHORT $LL39@Append@2
$LN37@Append@2:

; 929  : 
; 930  : 	return( nOldSize );

	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 931  : }

	pop	ebp
	ret	4

; 922  : 	bool bSuccess = SetCount(AtlAddThrow<size_t>(m_nSize, aSrc.m_nSize));

$LN20@Append@2:
	mov	eax, edi
	call	?GrowBuffer@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@AAE_NI@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::GrowBuffer
	test	al, al

; 923  : 	if( !bSuccess )

	jne	SHORT $LN51@Append@2

; 924  : 	{
; 925  : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN53@Append@2:
$LN50@Append@2:
	int	3
?Append@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEIABV12@@Z ENDP ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::Append
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Append@?$CAtlArray@EV?$CElementTraits@E@ATL@@@ATL@@QAEIABV12@@Z
_TEXT	SEGMENT
tv194 = 8						; size = 4
_aSrc$ = 8						; size = 4
?Append@?$CAtlArray@EV?$CElementTraits@E@ATL@@@ATL@@QAEIABV12@@Z PROC ; ATL::CAtlArray<unsigned char,ATL::CElementTraits<unsigned char> >::Append, COMDAT
; _this$ = eax

; 917  : {

	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR _aSrc$[ebp]
	push	esi
	mov	esi, eax

; 918  : 	ATLASSERT_VALID(this);
; 919  : 	ATLASSERT( this != &aSrc );   // cannot append to itself
; 920  : 
; 921  : 	size_t nOldSize = m_nSize;

	mov	ecx, DWORD PTR [esi+4]

; 922  : 	bool bSuccess = SetCount(AtlAddThrow<size_t>(m_nSize, aSrc.m_nSize));

	mov	eax, DWORD PTR [ebx+4]
	or	edx, -1
	sub	edx, ecx
	push	edi
	mov	DWORD PTR tv194[ebp], ecx
	cmp	edx, eax
	jb	SHORT $LN48@Append@3
	lea	edi, DWORD PTR [ecx+eax]
	test	edi, edi
	jne	SHORT $LN23@Append@3
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN22@Append@3
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi], edi
$LN22@Append@3:
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	jmp	SHORT $LN1@Append@3
$LN48@Append@3:
	push	-2147024362				; 80070216H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN52@Append@3:
$LN23@Append@3:
	cmp	edi, DWORD PTR [esi+8]
	ja	SHORT $LN20@Append@3
	cmp	edi, ecx
	jbe	SHORT $LN19@Append@3
$LN51@Append@3:
	call	?CallConstructors@?$CAtlArray@EV?$CElementTraits@E@ATL@@@ATL@@CAXPAEI@Z ; ATL::CAtlArray<unsigned char,ATL::CElementTraits<unsigned char> >::CallConstructors
$LN19@Append@3:
	mov	DWORD PTR [esi+4], edi
$LN1@Append@3:

; 926  : 	}
; 927  : 
; 928  : 	ETraits::CopyElements( m_pData+nOldSize, aSrc.m_pData, aSrc.m_nSize );

	mov	eax, DWORD PTR [esi]
	mov	edi, DWORD PTR tv194[ebp]
	mov	ecx, DWORD PTR [ebx+4]
	mov	edx, DWORD PTR [ebx]
	add	eax, edi
	test	ecx, ecx
	je	SHORT $LN37@Append@3
	sub	edx, eax
	mov	esi, ecx
	npad	2
$LL39@Append@3:
	mov	cl, BYTE PTR [edx+eax]
	mov	BYTE PTR [eax], cl
	inc	eax
	dec	esi
	jne	SHORT $LL39@Append@3
$LN37@Append@3:

; 929  : 
; 930  : 	return( nOldSize );

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 931  : }

	pop	ebp
	ret	4

; 922  : 	bool bSuccess = SetCount(AtlAddThrow<size_t>(m_nSize, aSrc.m_nSize));

$LN20@Append@3:
	mov	eax, edi
	call	?GrowBuffer@?$CAtlArray@EV?$CElementTraits@E@ATL@@@ATL@@AAE_NI@Z ; ATL::CAtlArray<unsigned char,ATL::CElementTraits<unsigned char> >::GrowBuffer
	test	al, al

; 923  : 	if( !bSuccess )

	jne	SHORT $LN51@Append@3

; 924  : 	{
; 925  : 		AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN53@Append@3:
$LN50@Append@3:
	int	3
?Append@?$CAtlArray@EV?$CElementTraits@E@ATL@@@ATL@@QAEIABV12@@Z ENDP ; ATL::CAtlArray<unsigned char,ATL::CElementTraits<unsigned char> >::Append
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1Glyph@ssf@@QAE@XZ
_TEXT	SEGMENT
??1Glyph@ssf@@QAE@XZ PROC				; ssf::Glyph::~Glyph, COMDAT
; _this$ = eax
	push	esi
	mov	esi, eax
	lea	ecx, DWORD PTR [esi+680]
	call	??1Rasterizer@ssf@@UAE@XZ		; ssf::Rasterizer::~Rasterizer
	lea	ecx, DWORD PTR [esi+540]
	call	??1Rasterizer@ssf@@UAE@XZ		; ssf::Rasterizer::~Rasterizer
	lea	ecx, DWORD PTR [esi+400]
	call	??1Rasterizer@ssf@@UAE@XZ		; ssf::Rasterizer::~Rasterizer
	mov	DWORD PTR [esi+332], OFFSET ??_7GlyphPath@ssf@@6B@
	mov	eax, DWORD PTR [esi+352]
	test	eax, eax
	je	SHORT $LN5@Glyph
	push	eax
	call	_free
	add	esp, 4
$LN5@Glyph:
	mov	eax, DWORD PTR [esi+336]
	test	eax, eax
	je	SHORT $LN13@Glyph
	push	eax
	call	_free
	add	esp, 4
$LN13@Glyph:
	mov	DWORD PTR [esi+296], OFFSET ??_7GlyphPath@ssf@@6B@
	mov	eax, DWORD PTR [esi+316]
	test	eax, eax
	je	SHORT $LN23@Glyph
	push	eax
	call	_free
	add	esp, 4
$LN23@Glyph:
	mov	eax, DWORD PTR [esi+300]
	test	eax, eax
	je	SHORT $LN31@Glyph
	push	eax
	call	_free
	add	esp, 4
$LN31@Glyph:
	mov	eax, DWORD PTR [esi+236]
	test	eax, eax
	je	SHORT $LN39@Glyph
	push	eax
	call	_free
	add	esp, 4
$LN39@Glyph:
	add	esi, 4
	call	??1Style@ssf@@QAE@XZ
	pop	esi
	ret	0
??1Glyph@ssf@@QAE@XZ ENDP				; ssf::Glyph::~Glyph
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GGlyph@ssf@@QAEPAXI@Z
_TEXT	SEGMENT
??_GGlyph@ssf@@QAEPAXI@Z PROC				; ssf::Glyph::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	eax, esi
	call	??1Glyph@ssf@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, esi
	ret	0
??_GGlyph@ssf@@QAEPAXI@Z ENDP				; ssf::Glyph::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ?Free@?$CAutoPtr@VGlyph@ssf@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Free@?$CAutoPtr@VGlyph@ssf@@@ATL@@QAEXXZ PROC		; ATL::CAutoPtr<ssf::Glyph>::Free, COMDAT
; _this$ = edi

; 886  : 	{

	push	esi

; 887  : 		delete m_p;

	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN8@Free@4
	mov	eax, esi
	call	??1Glyph@ssf@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@Free@4:

; 888  : 		m_p = NULL;

	mov	DWORD PTR [edi], 0
	pop	esi

; 889  : 	}

	ret	0
?Free@?$CAutoPtr@VGlyph@ssf@@@ATL@@QAEXXZ ENDP		; ATL::CAutoPtr<ssf::Glyph>::Free
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\stringmap.h
_TEXT	ENDS
;	COMDAT ??0?$StringMap@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??0?$StringMap@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = esi

; 30   : 		StringMap() {}

	fld	DWORD PTR __real@3f400000
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR __real@3e800000
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::UpdateRehashThresholds
	mov	eax, esi
	ret	0
??0?$StringMap@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$StringMap@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??0?$StringMap@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = esi

; 30   : 		StringMap() {}

	fld	DWORD PTR __real@3f400000
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR __real@3e800000
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::UpdateRehashThresholds
	mov	eax, esi
	ret	0
??0?$StringMap@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$StringMap@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??0?$StringMap@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = esi

; 30   : 		StringMap() {}

	fld	DWORD PTR __real@3f400000
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR __real@3e800000
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::UpdateRehashThresholds
	mov	eax, esi
	ret	0
??0?$StringMap@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$StringMap@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??1?$StringMap@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
	ret	0
??1?$StringMap@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$StringMap@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??1?$StringMap@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
	ret	0
??1?$StringMap@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$StringMap@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??1?$StringMap@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
	ret	0
??1?$StringMap@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??1?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
	ret	0
??1?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??0?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = esi
	fld	DWORD PTR __real@3f400000
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR __real@3e800000
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::UpdateRehashThresholds
	mov	eax, esi
	ret	0
??0?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::RenderedSubtitle *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??1?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
	ret	0
??1?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??0?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = esi
	fld	DWORD PTR __real@3f400000
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR __real@3e800000
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::UpdateRehashThresholds
	mov	eax, esi
	ret	0
??0?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::GlyphPath *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??1?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
	ret	0
??1?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??0?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = esi
	fld	DWORD PTR __real@3f400000
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR __real@3e800000
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::UpdateRehashThresholds
	mov	eax, esi
	ret	0
??0?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::FontWrapper *,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ??1?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@XZ PROC		; ATL::CAutoPtr<ssf::Glyph>::~CAutoPtr<ssf::Glyph>, COMDAT
; _this$ = edi

; 793  : 	{

	push	esi

; 794  : 		Free();

	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN10@CAutoPtr@4
	mov	eax, esi
	call	??1Glyph@ssf@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@CAutoPtr@4:
	mov	DWORD PTR [edi], 0
	pop	esi

; 795  : 	}

	ret	0
??1?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@XZ ENDP		; ATL::CAutoPtr<ssf::Glyph>::~CAutoPtr<ssf::Glyph>
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\stringmap.h
_TEXT	ENDS
;	COMDAT ??0?$StringMap@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??0?$StringMap@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = esi

; 30   : 		StringMap() {}

	fld	DWORD PTR __real@3f400000
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR __real@3e800000
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::UpdateRehashThresholds
	mov	eax, esi
	ret	0
??0?$StringMap@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$StringMap@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??0?$StringMap@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = esi

; 30   : 		StringMap() {}

	fld	DWORD PTR __real@3f400000
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR __real@3e800000
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::UpdateRehashThresholds
	mov	eax, esi
	ret	0
??0?$StringMap@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
xdata$x	SEGMENT
__unwindtable$??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ$1
__ehfuncinfo$??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
xdata$x	ENDS
;	COMDAT ??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ PROC	; ssf::Cache<ssf::RenderedSubtitle *>::~Cache<ssf::RenderedSubtitle *>, COMDAT
; _this$ = ecx

; 39   : 		virtual ~Cache() {RemoveAll();}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::RenderedSubtitle *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	add	edi, 4
	push	edi
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ$0:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ$1:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAE@XZ ENDP	; ssf::Cache<ssf::RenderedSubtitle *>::~Cache<ssf::RenderedSubtitle *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAE@I@Z
_TEXT	SEGMENT
??0?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAE@I@Z PROC	; ssf::Cache<ssf::RenderedSubtitle *>::Cache<ssf::RenderedSubtitle *>, COMDAT
; _this$ = esi

; 38   : 		Cache(size_t limit) {m_limit = max(1, limit);}

	fld	DWORD PTR __real@3f400000
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@
	fstp	DWORD PTR [ecx+12]
	fld	DWORD PTR __real@3e800000
	push	edi
	xor	edi, edi
	fstp	DWORD PTR [ecx+16]
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [ecx], edi
	fstp	DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+4], edi
	mov	DWORD PTR [ecx+8], 17			; 00000011H
	mov	DWORD PTR [ecx+24], -1
	mov	DWORD PTR [ecx+28], edi
	mov	DWORD PTR [ecx+32], edi
	mov	DWORD PTR [ecx+36], 10			; 0000000aH
	mov	DWORD PTR [ecx+40], edi
	mov	DWORD PTR [ecx+44], edi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::UpdateRehashThresholds
	mov	DWORD PTR [esi+52], edi
	mov	DWORD PTR [esi+56], edi
	mov	DWORD PTR [esi+60], edi
	mov	DWORD PTR [esi+64], edi
	mov	DWORD PTR [esi+68], edi
	mov	DWORD PTR [esi+72], 10			; 0000000aH
	mov	DWORD PTR [esi+76], 10			; 0000000aH
	mov	eax, esi
	pop	edi
	ret	0
??0?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAE@I@Z ENDP	; ssf::Cache<ssf::RenderedSubtitle *>::Cache<ssf::RenderedSubtitle *>
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
xdata$x	SEGMENT
__unwindtable$??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ$1
__ehfuncinfo$??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
xdata$x	ENDS
;	COMDAT ??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ PROC		; ssf::Cache<ssf::GlyphPath *>::~Cache<ssf::GlyphPath *>, COMDAT
; _this$ = ecx

; 39   : 		virtual ~Cache() {RemoveAll();}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::GlyphPath *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	add	edi, 4
	push	edi
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ$0:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ$1:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Cache@PAVGlyphPath@ssf@@@ssf@@UAE@XZ ENDP		; ssf::Cache<ssf::GlyphPath *>::~Cache<ssf::GlyphPath *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$Cache@PAVGlyphPath@ssf@@@ssf@@QAE@I@Z
_TEXT	SEGMENT
??0?$Cache@PAVGlyphPath@ssf@@@ssf@@QAE@I@Z PROC		; ssf::Cache<ssf::GlyphPath *>::Cache<ssf::GlyphPath *>, COMDAT
; _this$ = esi

; 38   : 		Cache(size_t limit) {m_limit = max(1, limit);}

	fld	DWORD PTR __real@3f400000
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@
	fstp	DWORD PTR [ecx+12]
	fld	DWORD PTR __real@3e800000
	push	edi
	xor	edi, edi
	fstp	DWORD PTR [ecx+16]
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [ecx], edi
	fstp	DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+4], edi
	mov	DWORD PTR [ecx+8], 17			; 00000011H
	mov	DWORD PTR [ecx+24], -1
	mov	DWORD PTR [ecx+28], edi
	mov	DWORD PTR [ecx+32], edi
	mov	DWORD PTR [ecx+36], 10			; 0000000aH
	mov	DWORD PTR [ecx+40], edi
	mov	DWORD PTR [ecx+44], edi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::UpdateRehashThresholds
	mov	DWORD PTR [esi+52], edi
	mov	DWORD PTR [esi+56], edi
	mov	DWORD PTR [esi+60], edi
	mov	DWORD PTR [esi+64], edi
	mov	DWORD PTR [esi+68], edi
	mov	DWORD PTR [esi+72], 10			; 0000000aH
	mov	DWORD PTR [esi+76], 100			; 00000064H
	mov	eax, esi
	pop	edi
	ret	0
??0?$Cache@PAVGlyphPath@ssf@@@ssf@@QAE@I@Z ENDP		; ssf::Cache<ssf::GlyphPath *>::Cache<ssf::GlyphPath *>
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
xdata$x	SEGMENT
__unwindtable$??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ$1
__ehfuncinfo$??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
xdata$x	ENDS
;	COMDAT ??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ PROC	; ssf::Cache<ssf::FontWrapper *>::~Cache<ssf::FontWrapper *>, COMDAT
; _this$ = ecx

; 39   : 		virtual ~Cache() {RemoveAll();}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::FontWrapper *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	add	edi, 4
	push	edi
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ$0:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ$1:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Cache@PAVFontWrapper@ssf@@@ssf@@UAE@XZ ENDP	; ssf::Cache<ssf::FontWrapper *>::~Cache<ssf::FontWrapper *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$Cache@PAVFontWrapper@ssf@@@ssf@@QAE@I@Z
_TEXT	SEGMENT
??0?$Cache@PAVFontWrapper@ssf@@@ssf@@QAE@I@Z PROC	; ssf::Cache<ssf::FontWrapper *>::Cache<ssf::FontWrapper *>, COMDAT
; _this$ = esi

; 38   : 		Cache(size_t limit) {m_limit = max(1, limit);}

	fld	DWORD PTR __real@3f400000
	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@
	fstp	DWORD PTR [ecx+12]
	fld	DWORD PTR __real@3e800000
	push	edi
	xor	edi, edi
	fstp	DWORD PTR [ecx+16]
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [ecx], edi
	fstp	DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+4], edi
	mov	DWORD PTR [ecx+8], 17			; 00000011H
	mov	DWORD PTR [ecx+24], -1
	mov	DWORD PTR [ecx+28], edi
	mov	DWORD PTR [ecx+32], edi
	mov	DWORD PTR [ecx+36], 10			; 0000000aH
	mov	DWORD PTR [ecx+40], edi
	mov	DWORD PTR [ecx+44], edi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::UpdateRehashThresholds
	mov	DWORD PTR [esi+52], edi
	mov	DWORD PTR [esi+56], edi
	mov	DWORD PTR [esi+60], edi
	mov	DWORD PTR [esi+64], edi
	mov	DWORD PTR [esi+68], edi
	mov	DWORD PTR [esi+72], 10			; 0000000aH
	mov	DWORD PTR [esi+76], 20			; 00000014H
	mov	eax, esi
	pop	edi
	ret	0
??0?$Cache@PAVFontWrapper@ssf@@@ssf@@QAE@I@Z ENDP	; ssf::Cache<ssf::FontWrapper *>::Cache<ssf::FontWrapper *>
_TEXT	ENDS
PUBLIC	?Draw@RenderedSubtitle@ssf@@QBE?AVCRect@@AAUSubPicDesc@@@Z ; ssf::RenderedSubtitle::Draw
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.cpp
;	COMDAT ?Draw@RenderedSubtitle@ssf@@QBE?AVCRect@@AAUSubPicDesc@@@Z
_TEXT	SEGMENT
_sw$158565 = -60					; size = 24
_sw$158550 = -60					; size = 24
_sw$158541 = -60					; size = 24
$T581307 = -36						; size = 16
$T581306 = -36						; size = 16
$T581305 = -20						; size = 16
$T581302 = -20						; size = 16
_this$ = 8						; size = 4
_pos$ = 12						; size = 4
___$ReturnUdt$ = 12					; size = 4
_spd$ = 16						; size = 4
?Draw@RenderedSubtitle@ssf@@QBE?AVCRect@@AAUSubPicDesc@@@Z PROC ; ssf::RenderedSubtitle::Draw, COMDAT

; 612  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	mov	ebx, DWORD PTR ___$ReturnUdt$[ebp]
	push	esi

; 613  : 		CRect bbox;

	xor	esi, esi
	push	edi

; 614  : 		bbox.SetRectEmpty();

	push	ebx
	mov	DWORD PTR [ebx], esi
	mov	DWORD PTR [ebx+4], esi
	mov	DWORD PTR [ebx+8], esi
	mov	DWORD PTR [ebx+12], esi
	call	DWORD PTR __imp__SetRectEmpty@4

; 615  : 
; 616  : 		// shadow
; 617  : 
; 618  : 		POSITION pos = m_glyphs.GetHeadPosition();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR [eax+36]

; 619  : 		while(pos)

	cmp	edi, esi
	je	$LN11@Draw@2

; 620  : 		{
; 621  : 			Glyph* g = m_glyphs.GetNext(pos);

	test	edi, edi
	je	$LN180@Draw@2
$LN245@Draw@2:
	mov	esi, DWORD PTR [edi+8]

; 622  : 
; 623  : 			if(g->style.shadow.depth <= 0) continue;

	fldz
	fcomp	DWORD PTR [esi+200]
	mov	edi, DWORD PTR [edi]
	fnstsw	ax
	test	ah, 1
	je	$LN187@Draw@2

; 624  : 
; 625  : 			DWORD c = g->style.shadow.color;

	lea	ecx, DWORD PTR [esi+184]
	call	??BColor@ssf@@QAEKXZ			; ssf::Color::operator unsigned long

; 626  : 			DWORD sw[6] = {c, -1};

	mov	DWORD PTR _sw$158541[ebp], eax
	xor	eax, eax
	mov	DWORD PTR _sw$158541[ebp+8], eax
	mov	DWORD PTR _sw$158541[ebp+12], eax
	mov	DWORD PTR _sw$158541[ebp+16], eax
	mov	DWORD PTR _sw$158541[ebp+20], eax

; 627  : 
; 628  : 			bool outline = g->style.background.type == L"outline" && g->style.background.size > 0;

	mov	eax, DWORD PTR [esi+180]
	mov	DWORD PTR _sw$158541[ebp+4], -1
	mov	ecx, OFFSET ??_C@_1BA@NHBGAPMB@?$AAo?$AAu?$AAt?$AAl?$AAi?$AAn?$AAe?$AA?$AA@
	npad	4
$LL189@Draw@2:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN190@Draw@2
	test	dx, dx
	je	SHORT $LN191@Draw@2
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN190@Draw@2
	add	eax, 4
	add	ecx, 4
	test	dx, dx
	jne	SHORT $LL189@Draw@2
$LN191@Draw@2:
	xor	eax, eax
	jmp	SHORT $LN192@Draw@2
$LN190@Draw@2:
	sbb	eax, eax
	sbb	eax, -1
$LN192@Draw@2:
	test	eax, eax
	jne	SHORT $LN15@Draw@2
	fldz
	fcomp	DWORD PTR [esi+172]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN15@Draw@2
	mov	al, 1
	jmp	SHORT $LN16@Draw@2
$LN15@Draw@2:
	xor	al, al
$LN16@Draw@2:

; 629  : 
; 630  : 			bbox |= g->ras_shadow.Draw(spd, m_clip, g->tls.x, g->tls.y, sw, outline ? 1 : 0);

	xor	ecx, ecx
	test	al, al
	mov	eax, DWORD PTR _this$[ebp]
	setne	cl
	lea	edx, DWORD PTR _sw$158541[ebp]
	add	eax, 20					; 00000014H
	push	ecx
	mov	ecx, DWORD PTR _spd$[ebp]
	push	edx
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [esi+392]
	lea	edx, DWORD PTR $T581302[ebp]
	push	edx
	lea	eax, DWORD PTR [esi+680]
	push	eax
	mov	eax, DWORD PTR [esi+396]
	call	?Draw@Rasterizer@ssf@@QAE?AVCRect@@ABUSubPicDesc@@ABV3@HHPBKH@Z ; ssf::Rasterizer::Draw
	push	eax
	push	ebx
	push	ebx
	call	DWORD PTR __imp__UnionRect@12
$LN187@Draw@2:

; 619  : 		while(pos)

	test	edi, edi
	jne	$LN245@Draw@2
$LN11@Draw@2:

; 631  : 		}
; 632  : 
; 633  : 		// background
; 634  : 
; 635  : 		pos = m_glyphs.GetHeadPosition();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+36]

; 636  : 		while(pos)

	test	eax, eax
	je	$LN8@Draw@2
	jmp	SHORT $LN9@Draw@2
$LN180@Draw@2:

; 620  : 		{
; 621  : 			Glyph* g = m_glyphs.GetNext(pos);

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN248@Draw@2:
$LL208@Draw@2:

; 636  : 		while(pos)

	mov	eax, DWORD PTR _pos$[ebp]
$LN9@Draw@2:

; 637  : 		{
; 638  : 			Glyph* g = m_glyphs.GetNext(pos);

	test	eax, eax
	je	SHORT $LN180@Draw@2
	mov	esi, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax]

; 639  : 
; 640  : 			DWORD c = g->style.background.color;

	lea	ecx, DWORD PTR [esi+156]
	mov	DWORD PTR _pos$[ebp], edx
	call	??BColor@ssf@@QAEKXZ			; ssf::Color::operator unsigned long

; 641  : 			DWORD sw[6] = {c, -1};
; 642  : 
; 643  : 			if(g->style.background.type == L"outline" && g->style.background.size > 0)

	mov	edi, DWORD PTR [esi+180]
	mov	DWORD PTR _sw$158550[ebp], eax
	xor	eax, eax
	mov	DWORD PTR _sw$158550[ebp+8], eax
	mov	DWORD PTR _sw$158550[ebp+12], eax
	mov	DWORD PTR _sw$158550[ebp+16], eax
	mov	DWORD PTR _sw$158550[ebp+20], eax
	mov	DWORD PTR _sw$158550[ebp+4], -1
	mov	ecx, OFFSET ??_C@_1BA@NHBGAPMB@?$AAo?$AAu?$AAt?$AAl?$AAi?$AAn?$AAe?$AA?$AA@
	mov	eax, edi
$LL193@Draw@2:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN194@Draw@2
	test	dx, dx
	je	SHORT $LN195@Draw@2
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN194@Draw@2
	add	eax, 4
	add	ecx, 4
	test	dx, dx
	jne	SHORT $LL193@Draw@2
$LN195@Draw@2:
	xor	eax, eax
	jmp	SHORT $LN196@Draw@2
$LN194@Draw@2:
	sbb	eax, eax
	sbb	eax, -1
$LN196@Draw@2:
	fldz
	test	eax, eax
	jne	SHORT $LN122@Draw@2
	fcom	DWORD PTR [esi+172]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN122@Draw@2
	fstp	ST(0)

; 644  : 			{
; 645  : 				bbox |= g->ras.Draw(spd, m_clip, g->tl.x, g->tl.y, sw, g->style.font.color.a < 255 ? 2 : 1);

	fld	DWORD PTR [esi+120]
	fcomp	QWORD PTR __real@406fe00000000000
	fnstsw	ax
	test	ah, 5
	mov	eax, 2
	jnp	SHORT $LN18@Draw@2
	mov	eax, 1
$LN18@Draw@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _spd$[ebp]
	push	eax
	lea	eax, DWORD PTR _sw$158550[ebp]
	push	eax
	add	ecx, 20					; 00000014H
	push	ecx
	push	edx
	lea	eax, DWORD PTR $T581305[ebp]
	push	eax
	mov	eax, DWORD PTR [esi+388]
	lea	ecx, DWORD PTR [esi+400]
	push	ecx
	mov	ecx, DWORD PTR [esi+384]
	call	?Draw@Rasterizer@ssf@@QAE?AVCRect@@ABUSubPicDesc@@ABV3@HHPBKH@Z ; ssf::Rasterizer::Draw
	push	eax
	push	ebx
	push	ebx
	call	DWORD PTR __imp__UnionRect@12

; 646  : 			}
; 647  : 			else if(g->style.background.type == L"enlarge" && g->style.background.size > 0

	jmp	$LN156@Draw@2

; 648  : 			|| g->style.background.type == L"box" && g->style.background.size >= 0)

$LN122@Draw@2:
	mov	ecx, OFFSET ??_C@_1BA@PDBLNOGL@?$AAe?$AAn?$AAl?$AAa?$AAr?$AAg?$AAe?$AA?$AA@
	mov	eax, edi
$LN197@Draw@2:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN198@Draw@2
	test	dx, dx
	je	SHORT $LN199@Draw@2
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN198@Draw@2
	add	eax, 4
	add	ecx, 4
	test	dx, dx
	jne	SHORT $LN197@Draw@2
$LN199@Draw@2:
	xor	eax, eax
	jmp	SHORT $LN200@Draw@2
$LN198@Draw@2:
	sbb	eax, eax
	sbb	eax, -1
$LN200@Draw@2:
	test	eax, eax
	jne	SHORT $LN146@Draw@2
	fcom	DWORD PTR [esi+172]
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $LN228@Draw@2
$LN146@Draw@2:
	mov	ecx, OFFSET ??_C@_17FPDKLCKM@?$AAb?$AAo?$AAx?$AA?$AA@
	mov	eax, edi
$LN201@Draw@2:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN202@Draw@2
	test	dx, dx
	je	SHORT $LN203@Draw@2
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN202@Draw@2
	add	eax, 4
	add	ecx, 4
	test	dx, dx
	jne	SHORT $LN201@Draw@2
$LN203@Draw@2:
	xor	eax, eax
	jmp	SHORT $LN204@Draw@2
$LN202@Draw@2:
	sbb	eax, eax
	sbb	eax, -1
$LN204@Draw@2:
	test	eax, eax
	jne	SHORT $LN241@Draw@2
	fcomp	DWORD PTR [esi+172]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN156@Draw@2
	jmp	SHORT $LN4@Draw@2
$LN228@Draw@2:
	fstp	ST(0)
$LN4@Draw@2:

; 649  : 			{
; 650  : 				bbox |= g->ras_bkg.Draw(spd, m_clip, g->tl.x, g->tl.y, sw, 0);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _spd$[ebp]
	push	0
	lea	edx, DWORD PTR _sw$158550[ebp]
	push	edx
	add	eax, 20					; 00000014H
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [esi+384]
	lea	edx, DWORD PTR $T581306[ebp]
	push	edx
	lea	eax, DWORD PTR [esi+540]
	push	eax
	mov	eax, DWORD PTR [esi+388]
	call	?Draw@Rasterizer@ssf@@QAE?AVCRect@@ABUSubPicDesc@@ABV3@HHPBKH@Z ; ssf::Rasterizer::Draw
	push	eax
	push	ebx
	push	ebx
	call	DWORD PTR __imp__UnionRect@12
	jmp	SHORT $LN156@Draw@2
$LN241@Draw@2:

; 648  : 			|| g->style.background.type == L"box" && g->style.background.size >= 0)

	fstp	ST(0)

; 649  : 			{
; 650  : 				bbox |= g->ras_bkg.Draw(spd, m_clip, g->tl.x, g->tl.y, sw, 0);

$LN156@Draw@2:

; 636  : 		while(pos)

	cmp	DWORD PTR _pos$[ebp], 0
	jne	$LL208@Draw@2
$LN8@Draw@2:

; 651  : 			}
; 652  : 		}
; 653  : 
; 654  : 		// body
; 655  : 
; 656  : 		pos = m_glyphs.GetHeadPosition();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR [ecx+36]

; 657  : 		while(pos)

	test	edi, edi
	je	SHORT $LN1@Draw@2
$LN247@Draw@2:

; 658  : 		{
; 659  : 			Glyph* g = m_glyphs.GetNext(pos);

	mov	esi, DWORD PTR [edi+8]
	mov	edi, DWORD PTR [edi]

; 660  : 
; 661  : 			DWORD c = g->style.font.color;

	lea	ecx, DWORD PTR [esi+120]
	call	??BColor@ssf@@QAEKXZ			; ssf::Color::operator unsigned long

; 662  : 			DWORD sw[6] = {c, -1}; // TODO: fill
; 663  : 
; 664  : 			bbox |= g->ras.Draw(spd, m_clip, g->tl.x, g->tl.y, sw, 0);

	mov	ecx, DWORD PTR _spd$[ebp]
	mov	DWORD PTR _sw$158565[ebp], eax
	xor	eax, eax
	push	eax
	mov	DWORD PTR _sw$158565[ebp+8], eax
	mov	DWORD PTR _sw$158565[ebp+12], eax
	mov	DWORD PTR _sw$158565[ebp+16], eax
	mov	DWORD PTR _sw$158565[ebp+20], eax
	mov	eax, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR _sw$158565[ebp]
	push	edx
	add	eax, 20					; 00000014H
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [esi+384]
	lea	edx, DWORD PTR $T581307[ebp]
	push	edx
	lea	eax, DWORD PTR [esi+400]
	push	eax
	mov	eax, DWORD PTR [esi+388]
	mov	DWORD PTR _sw$158565[ebp+4], -1
	call	?Draw@Rasterizer@ssf@@QAE?AVCRect@@ABUSubPicDesc@@ABV3@HHPBKH@Z ; ssf::Rasterizer::Draw
	push	eax
	push	ebx
	push	ebx
	call	DWORD PTR __imp__UnionRect@12
	test	edi, edi
	jne	SHORT $LN247@Draw@2
$LN1@Draw@2:

; 665  : 		}
; 666  : 
; 667  : 		return bbox;
; 668  : 	}

	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN243@Draw@2:
?Draw@RenderedSubtitle@ssf@@QBE?AVCRect@@AAUSubPicDesc@@@Z ENDP ; ssf::RenderedSubtitle::Draw
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??4Placement@ssf@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
??4Placement@ssf@@QAEAAU01@ABU01@@Z PROC		; ssf::Placement::operator=, COMDAT
; _this$ = esi
; ___that$ = eax
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [esi+12], edx
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [esi+16], ecx
	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR [esi+20], edx
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [esi+24], ecx
	mov	edx, DWORD PTR [eax+28]
	mov	DWORD PTR [esi+28], edx
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [esi+32], ecx
	mov	edx, DWORD PTR [eax+36]
	mov	DWORD PTR [esi+36], edx
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [esi+40], ecx
	mov	edx, DWORD PTR [eax+44]
	mov	DWORD PTR [esi+44], edx
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR [esi+48], ecx
	mov	edx, DWORD PTR [eax+52]
	mov	DWORD PTR [esi+52], edx
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR [esi+56], ecx
	mov	edx, DWORD PTR [eax+60]
	mov	DWORD PTR [esi+60], edx
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR [esi+64], ecx
	mov	edx, DWORD PTR [eax+68]
	mov	DWORD PTR [esi+68], edx
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR [esi+72], ecx
	mov	edx, DWORD PTR [eax+76]
	mov	DWORD PTR [esi+76], edx
	mov	ecx, DWORD PTR [eax+80]
	add	eax, 84					; 00000054H
	push	eax
	lea	eax, DWORD PTR [esi+84]
	mov	DWORD PTR [esi+80], ecx
	call	?Copy@?$CAtlArray@UPoint@ssf@@V?$CElementTraits@UPoint@ssf@@@ATL@@@ATL@@QAEXABV12@@Z ; ATL::CAtlArray<ssf::Point,ATL::CElementTraits<ssf::Point> >::Copy
	mov	eax, esi
	ret	0
??4Placement@ssf@@QAEAAU01@ABU01@@Z ENDP		; ssf::Placement::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$StringMap@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??1?$StringMap@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >
	ret	0
??1?$StringMap@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$StringMapW@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??1?$StringMapW@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >
	ret	0
??1?$StringMapW@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$StringMapW@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??0?$StringMapW@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = esi
	fld	DWORD PTR __real@3f400000
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR __real@3e800000
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::UpdateRehashThresholds
	mov	eax, esi
	ret	0
??0?$StringMapW@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<bool,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$StringMap@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??1?$StringMap@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >
	ret	0
??1?$StringMap@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMap<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$StringMapW@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??1?$StringMapW@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >
	ret	0
??1?$StringMapW@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::~StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$StringMapW@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
_TEXT	SEGMENT
??0?$StringMapW@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ PROC ; ssf::StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >, COMDAT
; _this$ = esi
	fld	DWORD PTR __real@3f400000
	xor	eax, eax
	fstp	DWORD PTR [esi+12]
	mov	ecx, esi
	fld	DWORD PTR __real@3e800000
	mov	DWORD PTR [esi], eax
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+4], eax
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+8], 17			; 00000011H
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], eax
	mov	DWORD PTR [esi+44], eax
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::UpdateRehashThresholds
	mov	eax, esi
	ret	0
??0?$StringMapW@VSubRect@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ ENDP ; ssf::StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >::StringMapW<ssf::SubRect,ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1SubRectAllocator@ssf@@QAE@XZ
_TEXT	SEGMENT
??1SubRectAllocator@ssf@@QAE@XZ PROC			; ssf::SubRectAllocator::~SubRectAllocator, COMDAT
; _this$ = eax
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >
	ret	0
??1SubRectAllocator@ssf@@QAE@XZ ENDP			; ssf::SubRectAllocator::~SubRectAllocator
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0SubRectAllocator@ssf@@QAE@XZ
_TEXT	SEGMENT
??0SubRectAllocator@ssf@@QAE@XZ PROC			; ssf::SubRectAllocator::SubRectAllocator, COMDAT
; _this$ = esi
	fld	DWORD PTR __real@3f400000
	push	edi
	fstp	DWORD PTR [esi+12]
	xor	edi, edi
	fld	DWORD PTR __real@3e800000
	mov	ecx, esi
	fstp	DWORD PTR [esi+16]
	mov	DWORD PTR [esi], edi
	fld	DWORD PTR __real@40100000
	mov	DWORD PTR [esi+4], edi
	fstp	DWORD PTR [esi+20]
	mov	DWORD PTR [esi+8], 17			; 00000011H
	mov	DWORD PTR [esi+24], -1
	mov	DWORD PTR [esi+28], edi
	mov	DWORD PTR [esi+32], edi
	mov	DWORD PTR [esi+36], 10			; 0000000aH
	mov	DWORD PTR [esi+40], edi
	mov	DWORD PTR [esi+44], edi
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::UpdateRehashThresholds
	mov	DWORD PTR [esi+48], edi
	mov	DWORD PTR [esi+52], edi
	mov	DWORD PTR [esi+56], edi
	mov	DWORD PTR [esi+60], edi
	mov	DWORD PTR [esi+64], edi
	mov	DWORD PTR [esi+68], edi
	mov	eax, esi
	pop	edi
	ret	0
??0SubRectAllocator@ssf@@QAE@XZ ENDP			; ssf::SubRectAllocator::SubRectAllocator
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RenderedSubtitleCache@ssf@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RenderedSubtitleCache@ssf@@UAE@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$??1RenderedSubtitleCache@ssf@@UAE@XZ$2
__ehfuncinfo$??1RenderedSubtitleCache@ssf@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1RenderedSubtitleCache@ssf@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1RenderedSubtitleCache@ssf@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1RenderedSubtitleCache@ssf@@UAE@XZ PROC		; ssf::RenderedSubtitleCache::~RenderedSubtitleCache, COMDAT
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1RenderedSubtitleCache@ssf@@UAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	push	edi
	mov	edi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::RenderedSubtitle *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	add	edi, 4
	push	edi
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RenderedSubtitleCache@ssf@@UAE@XZ$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??1RenderedSubtitleCache@ssf@@UAE@XZ$2:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??1RenderedSubtitleCache@ssf@@UAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1RenderedSubtitleCache@ssf@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1RenderedSubtitleCache@ssf@@UAE@XZ ENDP		; ssf::RenderedSubtitleCache::~RenderedSubtitleCache
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z$2
__ehfuncinfo$??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z PROC		; ssf::RenderedSubtitleCache::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::RenderedSubtitle *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	lea	eax, DWORD PTR [edi+4]
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN23@scalar@30
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN23@scalar@30:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z$2:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z:
	mov	eax, OFFSET __ehfuncinfo$??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_GRenderedSubtitleCache@ssf@@UAEPAXI@Z ENDP		; ssf::RenderedSubtitleCache::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
;	COMDAT ??0RenderedSubtitleCache@ssf@@QAE@XZ
_TEXT	SEGMENT
??0RenderedSubtitleCache@ssf@@QAE@XZ PROC		; ssf::RenderedSubtitleCache::RenderedSubtitleCache, COMDAT
; _this$ = eax

; 123  : 		RenderedSubtitleCache() : Cache(10) {}

	push	esi
	mov	esi, eax
	call	??0?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAE@I@Z ; ssf::Cache<ssf::RenderedSubtitle *>::Cache<ssf::RenderedSubtitle *>
	mov	DWORD PTR [esi], OFFSET ??_7RenderedSubtitleCache@ssf@@6B@
	mov	eax, esi
	pop	esi
	ret	0
??0RenderedSubtitleCache@ssf@@QAE@XZ ENDP		; ssf::RenderedSubtitleCache::RenderedSubtitleCache
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1GlyphPathCache@ssf@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1GlyphPathCache@ssf@@UAE@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$??1GlyphPathCache@ssf@@UAE@XZ$2
__ehfuncinfo$??1GlyphPathCache@ssf@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1GlyphPathCache@ssf@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1GlyphPathCache@ssf@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1GlyphPathCache@ssf@@UAE@XZ PROC			; ssf::GlyphPathCache::~GlyphPathCache, COMDAT
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1GlyphPathCache@ssf@@UAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	push	edi
	mov	edi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::GlyphPath *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	add	edi, 4
	push	edi
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1GlyphPathCache@ssf@@UAE@XZ$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??1GlyphPathCache@ssf@@UAE@XZ$2:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??1GlyphPathCache@ssf@@UAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1GlyphPathCache@ssf@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1GlyphPathCache@ssf@@UAE@XZ ENDP			; ssf::GlyphPathCache::~GlyphPathCache
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GGlyphPathCache@ssf@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GGlyphPathCache@ssf@@UAEPAXI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??_GGlyphPathCache@ssf@@UAEPAXI@Z$2
__ehfuncinfo$??_GGlyphPathCache@ssf@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GGlyphPathCache@ssf@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_GGlyphPathCache@ssf@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GGlyphPathCache@ssf@@UAEPAXI@Z PROC			; ssf::GlyphPathCache::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_GGlyphPathCache@ssf@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::GlyphPath *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	lea	eax, DWORD PTR [edi+4]
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN23@scalar@31
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN23@scalar@31:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GGlyphPathCache@ssf@@UAEPAXI@Z$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??_GGlyphPathCache@ssf@@UAEPAXI@Z$2:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??_GGlyphPathCache@ssf@@UAEPAXI@Z:
	mov	eax, OFFSET __ehfuncinfo$??_GGlyphPathCache@ssf@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_GGlyphPathCache@ssf@@UAEPAXI@Z ENDP			; ssf::GlyphPathCache::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??0GlyphPathCache@ssf@@QAE@XZ
_TEXT	SEGMENT
??0GlyphPathCache@ssf@@QAE@XZ PROC			; ssf::GlyphPathCache::GlyphPathCache, COMDAT
; _this$ = eax

; 96   : 		GlyphPathCache() : Cache(100) {}

	push	esi
	mov	esi, eax
	call	??0?$Cache@PAVGlyphPath@ssf@@@ssf@@QAE@I@Z ; ssf::Cache<ssf::GlyphPath *>::Cache<ssf::GlyphPath *>
	mov	DWORD PTR [esi], OFFSET ??_7GlyphPathCache@ssf@@6B@
	mov	eax, esi
	pop	esi
	ret	0
??0GlyphPathCache@ssf@@QAE@XZ ENDP			; ssf::GlyphPathCache::GlyphPathCache
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1FontCache@ssf@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1FontCache@ssf@@UAE@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$??1FontCache@ssf@@UAE@XZ$2
__ehfuncinfo$??1FontCache@ssf@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1FontCache@ssf@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1FontCache@ssf@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1FontCache@ssf@@UAE@XZ PROC				; ssf::FontCache::~FontCache, COMDAT
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??1FontCache@ssf@@UAE@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	push	edi
	mov	edi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::FontWrapper *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	add	edi, 4
	push	edi
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1FontCache@ssf@@UAE@XZ$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??1FontCache@ssf@@UAE@XZ$2:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??1FontCache@ssf@@UAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1FontCache@ssf@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1FontCache@ssf@@UAE@XZ ENDP				; ssf::FontCache::~FontCache
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GFontCache@ssf@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GFontCache@ssf@@UAEPAXI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??_GFontCache@ssf@@UAEPAXI@Z$2
__ehfuncinfo$??_GFontCache@ssf@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GFontCache@ssf@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_GFontCache@ssf@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GFontCache@ssf@@UAEPAXI@Z PROC			; ssf::FontCache::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_GFontCache@ssf@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::FontWrapper *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	lea	eax, DWORD PTR [edi+4]
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN23@scalar@32
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN23@scalar@32:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GFontCache@ssf@@UAEPAXI@Z$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??_GFontCache@ssf@@UAEPAXI@Z$2:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??_GFontCache@ssf@@UAEPAXI@Z:
	mov	eax, OFFSET __ehfuncinfo$??_GFontCache@ssf@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_GFontCache@ssf@@UAEPAXI@Z ENDP			; ssf::FontCache::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??0FontCache@ssf@@QAE@XZ
_TEXT	SEGMENT
??0FontCache@ssf@@QAE@XZ PROC				; ssf::FontCache::FontCache, COMDAT
; _this$ = eax

; 89   : 		FontCache() : Cache(20) {}

	push	esi
	mov	esi, eax
	call	??0?$Cache@PAVFontWrapper@ssf@@@ssf@@QAE@I@Z ; ssf::Cache<ssf::FontWrapper *>::Cache<ssf::FontWrapper *>
	mov	DWORD PTR [esi], OFFSET ??_7FontCache@ssf@@6B@
	mov	eax, esi
	pop	esi
	ret	0
??0FontCache@ssf@@QAE@XZ ENDP				; ssf::FontCache::FontCache
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GGlyphPath@ssf@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGlyphPath@ssf@@UAEPAXI@Z PROC			; ssf::GlyphPath::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7GlyphPath@ssf@@6B@
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN6@scalar@33
	push	eax
	call	_free
	add	esp, 4
$LN6@scalar@33:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN14@scalar@33
	push	eax
	call	_free
	add	esp, 4
$LN14@scalar@33:
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN26@scalar@33
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN26@scalar@33:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GGlyphPath@ssf@@UAEPAXI@Z ENDP			; ssf::GlyphPath::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
;	COMDAT ??1CNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CNode::~CNode, COMDAT
; _this$ = edi

; 1189 : 		{

	push	esi

; 1190 : 		}

	mov	esi, DWORD PTR [edi+8]
	test	esi, esi
	je	SHORT $LN12@CNode@10
	mov	eax, esi
	call	??1Glyph@ssf@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@CNode@10:
	mov	DWORD PTR [edi+8], 0
	pop	esi
	ret	0
??1CNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CNode::~CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z
_TEXT	SEGMENT
??0CNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CNode::CNode, COMDAT
; _this$ = eax
; _element$ = ecx

; 1186 : 		{

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [eax+8], edx

; 1187 : 		}

	ret	0
??0CNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CNode::CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GCNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAXI@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CNode::`scalar deleting destructor', COMDAT
; _this$ = esi
	push	edi
	mov	edi, DWORD PTR [esi+8]
	test	edi, edi
	je	SHORT $LN15@scalar@37
	mov	eax, edi
	call	??1Glyph@ssf@@QAE@XZ
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@scalar@37:
	mov	eax, esi
	mov	DWORD PTR [esi+8], 0
	pop	edi
	ret	0
??_GCNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAXI@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::CNode::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z
_TEXT	SEGMENT
?FreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::FreeNode, COMDAT
; _this$ = edi
; _pNode$ = esi

; 1583 : {

	push	ebx

; 1584 : 	pNode->~CNode();

	mov	ebx, DWORD PTR [esi+8]
	test	ebx, ebx
	je	SHORT $LN21@FreeNode@16
	mov	eax, ebx
	call	??1Glyph@ssf@@QAE@XZ
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN21@FreeNode@16:
	mov	DWORD PTR [esi+8], 0

; 1585 : 	pNode->m_pNext = m_pFree;

	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], eax

; 1586 : 	m_pFree = pNode;
; 1587 : 	ATLASSUME( m_nElements > 0 );
; 1588 : 	m_nElements--;

	dec	DWORD PTR [edi+8]
	mov	DWORD PTR [edi+16], esi
	pop	ebx

; 1589 : 	if( m_nElements == 0 )

	jne	SHORT $LN1@FreeNode@16

; 1590 : 	{
; 1591 : 		RemoveAll();

	mov	ecx, edi
	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
$LN1@FreeNode@16:

; 1592 : 	}
; 1593 : }

	ret	0
?FreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::FreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?NewNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEPAVCNode@12@AAV?$CAutoPtr@VGlyph@ssf@@@2@PAV312@1@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEPAVCNode@12@AAV?$CAutoPtr@VGlyph@ssf@@@2@PAV312@1@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::NewNode, COMDAT
; _this$ = eax
; _element$ = edi

; 1562 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, eax

; 1563 : 	GetFreeNode();

	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode

; 1564 : 
; 1565 : 	CNode* pNewNode = m_pFree;

	mov	eax, DWORD PTR [esi+16]

; 1566 : 	CNode* pNextFree = m_pFree->m_pNext;

	mov	ecx, DWORD PTR [eax]

; 1567 : 
; 1568 : 	::new( pNewNode ) CNode( element );

	test	eax, eax
	je	SHORT $LN9@NewNode@9
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [edi], 0
	mov	DWORD PTR [eax+8], edx
$LN9@NewNode@9:

; 1569 : 
; 1570 : 	m_pFree = pNextFree;
; 1571 : 	pNewNode->m_pPrev = pPrev;
; 1572 : 	pNewNode->m_pNext = pNext;

	mov	edx, DWORD PTR _pNext$[ebp]
	mov	DWORD PTR [esi+16], ecx
	mov	ecx, DWORD PTR _pPrev$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], edx

; 1573 : 	m_nElements++;

	inc	DWORD PTR [esi+8]
	pop	esi

; 1574 : 	ATLASSUME( m_nElements > 0 );
; 1575 : 
; 1576 : 	return( pNewNode );
; 1577 : }

	pop	ebp
	ret	8
?NewNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEPAVCNode@12@AAV?$CAutoPtr@VGlyph@ssf@@@2@PAV312@1@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::NewNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll, COMDAT
; _this$ = ecx

; 1479 : {

	push	esi
	mov	esi, ecx

; 1480 : 	while( m_nElements > 0 )

	cmp	DWORD PTR [esi+8], 0
	push	edi
	jbe	SHORT $LN7@RemoveAll@24
	push	ebx
	npad	5
$LL19@RemoveAll@24:

; 1481 : 	{
; 1482 : 		CNode* pKill = m_pHead;

	mov	edi, DWORD PTR [esi]

; 1483 : 		ATLENSURE( pKill != NULL );

	test	edi, edi
	je	SHORT $LN51@RemoveAll@24

; 1484 : 
; 1485 : 		m_pHead = m_pHead->m_pNext;

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax

; 1486 : 		FreeNode( pKill );

	mov	ebx, DWORD PTR [edi+8]
	test	ebx, ebx
	je	SHORT $LN42@RemoveAll@24
	mov	eax, ebx
	call	??1Glyph@ssf@@QAE@XZ
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@RemoveAll@24:
	mov	DWORD PTR [edi+8], 0
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [edi], ecx
	dec	DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], edi
	jne	SHORT $LN22@RemoveAll@24
	mov	ecx, esi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
$LN22@RemoveAll@24:

; 1480 : 	while( m_nElements > 0 )

	cmp	DWORD PTR [esi+8], 0
	ja	SHORT $LL19@RemoveAll@24
	pop	ebx
$LN7@RemoveAll@24:

; 1487 : 	}
; 1488 : 
; 1489 : 	ATLASSUME( m_nElements == 0 );
; 1490 : 	m_pHead = NULL;
; 1491 : 	m_pTail = NULL;
; 1492 : 	m_pFree = NULL;
; 1493 : 
; 1494 : 	if( m_pBlocks != NULL )

	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+16], 0
	test	eax, eax
	je	SHORT $LN1@RemoveAll@24
	npad	2

; 1495 : 	{
; 1496 : 		m_pBlocks->FreeDataChain();

$LL46@RemoveAll@24:
	mov	edi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, edi
	test	edi, edi
	jne	SHORT $LL46@RemoveAll@24

; 1497 : 		m_pBlocks = NULL;

	mov	DWORD PTR [esi+12], edi
$LN1@RemoveAll@24:
	pop	edi
	pop	esi

; 1498 : 	}
; 1499 : }

	ret	0
$LN51@RemoveAll@24:

; 1483 : 		ATLENSURE( pKill != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN54@RemoveAll@24:
$LN53@RemoveAll@24:
	int	3
?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::~CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >, COMDAT
; _this$ = ecx

; 1504 : 	RemoveAll();

	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
??1?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::~CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAt@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z
_TEXT	SEGMENT
?RemoveAt@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAt, COMDAT
; _this$ = edi
; _pos$ = esi

; 1839 : 	ATLASSERT_VALID(this);
; 1840 : 	ATLENSURE( pos != NULL );

	test	esi, esi
	jne	SHORT $LN13@RemoveAt@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN41@RemoveAt@2:
$LN13@RemoveAt@2:

; 1841 : 
; 1842 : 	CNode* pOldNode = (CNode*)pos;
; 1843 : 
; 1844 : 	// remove pOldNode from list
; 1845 : 	if( pOldNode == m_pHead )

	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LN4@RemoveAt@2

; 1846 : 	{
; 1847 : 		m_pHead = pOldNode->m_pNext;

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax

; 1848 : 	}
; 1849 : 	else

	jmp	SHORT $LN3@RemoveAt@2
$LN4@RemoveAt@2:

; 1850 : 	{
; 1851 : 		ATLASSERT( AtlIsValidAddress( pOldNode->m_pPrev, sizeof(CNode) ));
; 1852 : 		pOldNode->m_pPrev->m_pNext = pOldNode->m_pNext;

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [ecx], edx
$LN3@RemoveAt@2:

; 1853 : 	}
; 1854 : 	if( pOldNode == m_pTail )

	cmp	esi, DWORD PTR [edi+4]
	jne	SHORT $LN2@RemoveAt@2

; 1855 : 	{
; 1856 : 		m_pTail = pOldNode->m_pPrev;

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edi+4], eax

; 1857 : 	}
; 1858 : 	else

	jmp	SHORT $LN1@RemoveAt@2
$LN2@RemoveAt@2:

; 1859 : 	{
; 1860 : 		ATLASSERT( AtlIsValidAddress( pOldNode->m_pNext, sizeof(CNode) ));
; 1861 : 		pOldNode->m_pNext->m_pPrev = pOldNode->m_pPrev;

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+4], edx
$LN1@RemoveAt@2:

; 1862 : 	}
; 1863 : 	FreeNode( pOldNode );

	push	ebx
	mov	ebx, DWORD PTR [esi+8]
	test	ebx, ebx
	je	SHORT $LN37@RemoveAt@2
	mov	eax, ebx
	call	??1Glyph@ssf@@QAE@XZ
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN37@RemoveAt@2:
	mov	DWORD PTR [esi+8], 0
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], eax
	dec	DWORD PTR [edi+8]
	mov	DWORD PTR [edi+16], esi
	pop	ebx
	jne	SHORT $LN17@RemoveAt@2
	mov	ecx, edi
	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
$LN17@RemoveAt@2:

; 1864 : }

	ret	0
$LN40@RemoveAt@2:
?RemoveAt@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?AddTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?AddTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::AddTail, COMDAT
; _this$ = eax

; 1651 : {

	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR _element$[ebp]
	push	esi
	mov	esi, eax
	push	edi

; 1652 : 	CNode* pNode;
; 1653 : 
; 1654 : 	pNode = NewNode( element, m_pTail, NULL );

	mov	edi, DWORD PTR [esi+4]
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN13@AddTail@7
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [eax+8], edx
$LN13@AddTail@7:
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax], 0

; 1655 : 
; 1656 : 	if( m_pTail != NULL )

	mov	ecx, DWORD PTR [esi+4]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN2@AddTail@7

; 1657 : 	{
; 1658 : 		m_pTail->m_pNext = pNode;

	pop	edi
	mov	DWORD PTR [ecx], eax

; 1663 : 	}
; 1664 : 	m_pTail = pNode;

	mov	DWORD PTR [esi+4], eax
	pop	esi
	pop	ebx

; 1665 : 
; 1666 : 	return( POSITION( pNode ) );
; 1667 : }

	pop	ebp
	ret	4
$LN2@AddTail@7:
	pop	edi

; 1659 : 	}
; 1660 : 	else
; 1661 : 	{
; 1662 : 		m_pHead = pNode;

	mov	DWORD PTR [esi], eax

; 1663 : 	}
; 1664 : 	m_pTail = pNode;

	mov	DWORD PTR [esi+4], eax
	pop	esi
	pop	ebx

; 1665 : 
; 1666 : 	return( POSITION( pNode ) );
; 1667 : }

	pop	ebp
	ret	4
?AddTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::AddTail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?AddHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?AddHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::AddHead, COMDAT
; _this$ = eax

; 1614 : {

	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR _element$[ebp]
	push	esi
	mov	esi, eax
	push	edi

; 1615 : 	CNode* pNode;
; 1616 : 
; 1617 : 	pNode = NewNode( element, NULL, m_pHead );

	mov	edi, DWORD PTR [esi]
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN13@AddHead
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [eax+8], edx
$LN13@AddHead:
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], edi

; 1618 : 
; 1619 : 	if( m_pHead != NULL )

	mov	ecx, DWORD PTR [esi]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN2@AddHead

; 1620 : 	{
; 1621 : 		m_pHead->m_pPrev = pNode;

	pop	edi
	mov	DWORD PTR [ecx+4], eax

; 1626 : 	}
; 1627 : 	m_pHead = pNode;

	mov	DWORD PTR [esi], eax
	pop	esi
	pop	ebx

; 1628 : 
; 1629 : 	return( POSITION( pNode ) );
; 1630 : }

	pop	ebp
	ret	4
$LN2@AddHead:
	pop	edi

; 1622 : 	}
; 1623 : 	else
; 1624 : 	{
; 1625 : 		m_pTail = pNode;

	mov	DWORD PTR [esi+4], eax

; 1626 : 	}
; 1627 : 	m_pHead = pNode;

	mov	DWORD PTR [esi], eax
	pop	esi
	pop	ebx

; 1628 : 
; 1629 : 	return( POSITION( pNode ) );
; 1630 : }

	pop	ebp
	ret	4
?AddHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VGlyph@ssf@@@2@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::AddHead
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveHeadNoReturn@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveHeadNoReturn@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveHeadNoReturn, COMDAT
; _this$ = edi

; 1719 : {

	push	ebx
	push	esi

; 1720 : 	ATLENSURE( m_pHead != NULL );

	mov	esi, DWORD PTR [edi]
	xor	ecx, ecx
	cmp	esi, ecx
	jne	SHORT $LN11@RemoveHead
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN39@RemoveHead:
$LN11@RemoveHead:

; 1721 : 
; 1722 : 	CNode* pNode = m_pHead;
; 1723 : 
; 1724 : 	m_pHead = pNode->m_pNext;

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax

; 1725 : 	if( m_pHead != NULL )

	cmp	eax, ecx
	je	SHORT $LN2@RemoveHead

; 1726 : 	{
; 1727 : 		m_pHead->m_pPrev = NULL;

	mov	DWORD PTR [eax+4], ecx

; 1728 : 	}
; 1729 : 	else

	jmp	SHORT $LN1@RemoveHead
$LN2@RemoveHead:

; 1730 : 	{
; 1731 : 		m_pTail = NULL;

	mov	DWORD PTR [edi+4], ecx
$LN1@RemoveHead:

; 1732 : 	}
; 1733 : 	FreeNode( pNode );

	mov	ebx, DWORD PTR [esi+8]
	cmp	ebx, ecx
	je	SHORT $LN35@RemoveHead
	mov	eax, ebx
	call	??1Glyph@ssf@@QAE@XZ
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	xor	ecx, ecx
$LN35@RemoveHead:
	mov	DWORD PTR [esi+8], ecx
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], eax
	dec	DWORD PTR [edi+8]
	mov	DWORD PTR [edi+16], esi
	pop	esi
	pop	ebx
	jne	SHORT $LN15@RemoveHead
	mov	ecx, edi
	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
$LN15@RemoveHead:

; 1734 : }

	ret	0
$LN38@RemoveHead:
?RemoveHeadNoReturn@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveHeadNoReturn
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE?AV?$CAutoPtr@VGlyph@ssf@@@2@XZ
_TEXT	SEGMENT
$T616544 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?RemoveTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE?AV?$CAutoPtr@VGlyph@ssf@@@2@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveTail, COMDAT
; _this$ = edi

; 1738 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx

; 1753 : 	}
; 1754 : 	FreeNode( pNode );

	xor	ecx, ecx
	push	esi
	mov	esi, DWORD PTR [edi+4]
	xor	eax, eax
	cmp	esi, ecx
	setne	al
	mov	DWORD PTR $T616544[ebp], ecx
	cmp	eax, ecx
	jne	SHORT $LN11@RemoveTail@2

; 1739 : 	ATLENSURE( m_pTail != NULL );

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN45@RemoveTail@2:
$LN11@RemoveTail@2:

; 1740 : 
; 1741 : 	CNode* pNode = m_pTail;
; 1742 : 
; 1743 : 	E element( pNode->m_element );

	mov	eax, DWORD PTR [esi+8]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR [edx], eax

; 1744 : 
; 1745 : 	m_pTail = pNode->m_pPrev;

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edi+4], eax

; 1746 : 	if( m_pTail != NULL )

	cmp	eax, ecx
	je	SHORT $LN2@RemoveTail@2

; 1747 : 	{
; 1748 : 		m_pTail->m_pNext = NULL;

	mov	DWORD PTR [eax], ecx

; 1749 : 	}
; 1750 : 	else

	jmp	SHORT $LN1@RemoveTail@2
$LN2@RemoveTail@2:

; 1751 : 	{
; 1752 : 		m_pHead = NULL;

	mov	DWORD PTR [edi], ecx
$LN1@RemoveTail@2:

; 1753 : 	}
; 1754 : 	FreeNode( pNode );

	mov	ebx, DWORD PTR [esi+8]
	cmp	ebx, ecx
	je	SHORT $LN41@RemoveTail@2
	mov	eax, ebx
	call	??1Glyph@ssf@@QAE@XZ
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	xor	ecx, ecx
$LN41@RemoveTail@2:
	mov	DWORD PTR [esi+8], ecx
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], eax
	dec	DWORD PTR [edi+8]
	mov	DWORD PTR [edi+16], esi
	pop	esi
	pop	ebx
	jne	SHORT $LN21@RemoveTail@2
	mov	ecx, edi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
$LN21@RemoveTail@2:

; 1755 : 
; 1756 : 	return( element );

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1757 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN44@RemoveTail@2:
?RemoveTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE?AV?$CAutoPtr@VGlyph@ssf@@@2@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveTail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE?AV?$CAutoPtr@VGlyph@ssf@@@2@XZ
_TEXT	SEGMENT
$T616743 = -4						; size = 4
$T616650 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?RemoveHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE?AV?$CAutoPtr@VGlyph@ssf@@@2@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveHead, COMDAT
; _this$ = edi

; 1697 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	xor	ebx, ebx
	push	esi

; 1698 : 	ATLENSURE( m_pHead != NULL );

	mov	esi, DWORD PTR [edi]
	xor	eax, eax
	cmp	esi, ebx
	setne	al
	mov	DWORD PTR $T616650[ebp], ebx
	cmp	eax, ebx
	jne	SHORT $LN11@RemoveHead@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN45@RemoveHead@2:
$LN11@RemoveHead@2:

; 1699 : 
; 1700 : 	CNode* pNode = m_pHead;
; 1701 : 	E element( pNode->m_element );

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi+8], ebx
	mov	DWORD PTR [ecx], eax

; 1702 : 
; 1703 : 	m_pHead = pNode->m_pNext;

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax

; 1704 : 	if( m_pHead != NULL )

	cmp	eax, ebx
	je	SHORT $LN2@RemoveHead@2

; 1705 : 	{
; 1706 : 		m_pHead->m_pPrev = NULL;

	mov	DWORD PTR [eax+4], ebx

; 1707 : 	}
; 1708 : 	else

	jmp	SHORT $LN1@RemoveHead@2
$LN2@RemoveHead@2:

; 1709 : 	{
; 1710 : 		m_pTail = NULL;

	mov	DWORD PTR [edi+4], ebx
$LN1@RemoveHead@2:

; 1711 : 	}
; 1712 : 	FreeNode( pNode );

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR $T616743[ebp], eax
	cmp	eax, ebx
	je	SHORT $LN41@RemoveHead@2
	call	??1Glyph@ssf@@QAE@XZ
	mov	edx, DWORD PTR $T616743[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN41@RemoveHead@2:
	mov	DWORD PTR [esi+8], ebx
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], eax
	dec	DWORD PTR [edi+8]
	mov	DWORD PTR [edi+16], esi
	pop	esi
	pop	ebx
	jne	SHORT $LN21@RemoveHead@2
	mov	ecx, edi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
$LN21@RemoveHead@2:

; 1713 : 
; 1714 : 	return( element );

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1715 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN44@RemoveHead@2:
?RemoveHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE?AV?$CAutoPtr@VGlyph@ssf@@@2@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveHead
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z$1
__ehfuncinfo$??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z PROC ; ssf::Cache<ssf::RenderedSubtitle *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::RenderedSubtitle *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	lea	eax, DWORD PTR [edi+4]
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN20@scalar@38
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN20@scalar@38:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z$0:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z$1:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z:
	mov	eax, OFFSET __ehfuncinfo$??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_G?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@UAEPAXI@Z ENDP ; ssf::Cache<ssf::RenderedSubtitle *>::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z$1
__ehfuncinfo$??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z PROC	; ssf::Cache<ssf::GlyphPath *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::GlyphPath *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	lea	eax, DWORD PTR [edi+4]
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN20@scalar@39
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN20@scalar@39:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z$0:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z$1:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z:
	mov	eax, OFFSET __ehfuncinfo$??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_G?$Cache@PAVGlyphPath@ssf@@@ssf@@UAEPAXI@Z ENDP	; ssf::Cache<ssf::GlyphPath *>::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z$1
__ehfuncinfo$??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z PROC	; ssf::Cache<ssf::FontWrapper *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	call	?RemoveAll@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::FontWrapper *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	lea	eax, DWORD PTR [edi+4]
	push	eax
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN20@scalar@40
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN20@scalar@40:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z$0:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z$1:
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z:
	mov	eax, OFFSET __ehfuncinfo$??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_G?$Cache@PAVFontWrapper@ssf@@@ssf@@UAEPAXI@Z ENDP	; ssf::Cache<ssf::FontWrapper *>::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??0?$CAutoPtrList@VGlyph@ssf@@@ATL@@QAE@I@Z
_TEXT	SEGMENT
??0?$CAutoPtrList@VGlyph@ssf@@@ATL@@QAE@I@Z PROC	; ATL::CAutoPtrList<ssf::Glyph>::CAutoPtrList<ssf::Glyph>, COMDAT
; _this$ = eax

; 1314 : 	{

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], 10			; 0000000aH

; 1315 : 	}

	ret	0
??0?$CAutoPtrList@VGlyph@ssf@@@ATL@@QAE@I@Z ENDP	; ATL::CAutoPtrList<ssf::Glyph>::CAutoPtrList<ssf::Glyph>
_TEXT	ENDS
PUBLIC	??1Renderer@ssf@@UAE@XZ				; ssf::Renderer::~Renderer
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
xdata$x	SEGMENT
__unwindtable$??1Renderer@ssf@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Renderer@ssf@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1Renderer@ssf@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1Renderer@ssf@@UAE@XZ$5
	DD	02H
	DD	FLAT:__unwindfunclet$??1Renderer@ssf@@UAE@XZ$6
	DD	00H
	DD	FLAT:__unwindfunclet$??1Renderer@ssf@@UAE@XZ$8
	DD	04H
	DD	FLAT:__unwindfunclet$??1Renderer@ssf@@UAE@XZ$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1Renderer@ssf@@UAE@XZ$11
	DD	06H
	DD	FLAT:__unwindfunclet$??1Renderer@ssf@@UAE@XZ$12
__ehfuncinfo$??1Renderer@ssf@@UAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1Renderer@ssf@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.cpp
xdata$x	ENDS
;	COMDAT ??1Renderer@ssf@@UAE@XZ
_TEXT	SEGMENT
$T617067 = -20						; size = 4
$T617014 = -20						; size = 4
$T616961 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Renderer@ssf@@UAE@XZ PROC				; ssf::Renderer::~Renderer, COMDAT
; _this$ = ecx

; 77   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1Renderer@ssf@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7Renderer@ssf@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 78   : 		DeleteDC(m_hDC);

	mov	eax, DWORD PTR [edi+4]
	push	eax
	call	DWORD PTR __imp__DeleteDC@4

; 79   : 	}

	lea	ecx, DWORD PTR [edi+248]
	push	ecx
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >
	lea	ebx, DWORD PTR [edi+168]
	mov	DWORD PTR $T616961[ebp], ebx
	mov	DWORD PTR [ebx], OFFSET ??_7?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@6B@
	push	ebx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	?RemoveAll@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::RenderedSubtitle *>::RemoveAll
	lea	esi, DWORD PTR [ebx+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	add	ebx, 4
	push	ebx
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >
	lea	ebx, DWORD PTR [edi+88]
	mov	DWORD PTR $T617014[ebp], ebx
	mov	DWORD PTR [ebx], OFFSET ??_7?$Cache@PAVGlyphPath@ssf@@@ssf@@6B@
	push	ebx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	call	?RemoveAll@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::GlyphPath *>::RemoveAll
	lea	esi, DWORD PTR [ebx+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	add	ebx, 4
	push	ebx
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >
	add	edi, 8
	mov	DWORD PTR $T617067[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7?$Cache@PAVFontWrapper@ssf@@@ssf@@6B@
	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	call	?RemoveAll@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::FontWrapper *>::RemoveAll
	lea	esi, DWORD PTR [edi+52]
	call	?RemoveAll@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveAll
	add	edi, 4
	push	edi
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Renderer@ssf@@UAE@XZ$0:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	??1FontCache@ssf@@UAE@XZ
	ret	0
__unwindfunclet$??1Renderer@ssf@@UAE@XZ$1:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	call	??1GlyphPathCache@ssf@@UAE@XZ
	ret	0
__unwindfunclet$??1Renderer@ssf@@UAE@XZ$5:
	mov	eax, DWORD PTR $T616961[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVRenderedSubtitle@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??1Renderer@ssf@@UAE@XZ$6:
	mov	esi, DWORD PTR $T616961[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__unwindfunclet$??1Renderer@ssf@@UAE@XZ$8:
	mov	eax, DWORD PTR $T617014[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVGlyphPath@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??1Renderer@ssf@@UAE@XZ$9:
	mov	esi, DWORD PTR $T617014[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__unwindfunclet$??1Renderer@ssf@@UAE@XZ$11:
	mov	eax, DWORD PTR $T617067[ebp]
	add	eax, 4
	jmp	??1?$StringMapW@PAVFontWrapper@ssf@@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__unwindfunclet$??1Renderer@ssf@@UAE@XZ$12:
	mov	esi, DWORD PTR $T617067[ebp]
	add	esi, 52					; 00000034H
	jmp	??1?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::~CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >
__ehhandler$??1Renderer@ssf@@UAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1Renderer@ssf@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1Renderer@ssf@@UAE@XZ ENDP				; ssf::Renderer::~Renderer
; Function compile flags: /Ogtp
;	COMDAT ??_GRenderer@ssf@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GRenderer@ssf@@UAEPAXI@Z PROC			; ssf::Renderer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1Renderer@ssf@@UAE@XZ			; ssf::Renderer::~Renderer
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar@41
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@41:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GRenderer@ssf@@UAEPAXI@Z ENDP			; ssf::Renderer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0Renderer@ssf@@QAE@XZ				; ssf::Renderer::Renderer
; Function compile flags: /Ogtp
;	COMDAT ??0Renderer@ssf@@QAE@XZ
_TEXT	SEGMENT
??0Renderer@ssf@@QAE@XZ PROC				; ssf::Renderer::Renderer, COMDAT
; _this$ = edi

; 69   : 	{

	push	esi
	lea	esi, DWORD PTR [edi+8]
	mov	DWORD PTR [edi], OFFSET ??_7Renderer@ssf@@6B@
	call	??0?$Cache@PAVFontWrapper@ssf@@@ssf@@QAE@I@Z ; ssf::Cache<ssf::FontWrapper *>::Cache<ssf::FontWrapper *>
	mov	DWORD PTR [esi], OFFSET ??_7FontCache@ssf@@6B@
	lea	esi, DWORD PTR [edi+88]
	call	??0?$Cache@PAVGlyphPath@ssf@@@ssf@@QAE@I@Z ; ssf::Cache<ssf::GlyphPath *>::Cache<ssf::GlyphPath *>
	mov	DWORD PTR [esi], OFFSET ??_7GlyphPathCache@ssf@@6B@
	lea	esi, DWORD PTR [edi+168]
	call	??0?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAE@I@Z ; ssf::Cache<ssf::RenderedSubtitle *>::Cache<ssf::RenderedSubtitle *>
	mov	DWORD PTR [esi], OFFSET ??_7RenderedSubtitleCache@ssf@@6B@
	lea	esi, DWORD PTR [edi+248]
	call	??0SubRectAllocator@ssf@@QAE@XZ

; 70   : 		m_hDC = CreateCompatibleDC(NULL);

	push	0
	call	DWORD PTR __imp__CreateCompatibleDC@4

; 71   : 		SetBkMode(m_hDC, TRANSPARENT); 

	push	1
	push	eax
	mov	DWORD PTR [edi+4], eax
	call	DWORD PTR __imp__SetBkMode@8

; 72   : 		SetTextColor(m_hDC, 0xffffff); 

	mov	eax, DWORD PTR [edi+4]
	push	16777215				; 00ffffffH
	push	eax
	call	DWORD PTR __imp__SetTextColor@8

; 73   : 		SetMapMode(m_hDC, MM_TEXT);

	mov	ecx, DWORD PTR [edi+4]
	push	1
	push	ecx
	call	DWORD PTR __imp__SetMapMode@8

; 74   : 	}

	mov	eax, edi
	pop	esi
	ret	0
??0Renderer@ssf@@QAE@XZ ENDP				; ssf::Renderer::Renderer
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$CAutoPtrList@VGlyph@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAutoPtrList@VGlyph@ssf@@@ATL@@QAE@XZ PROC		; ATL::CAutoPtrList<ssf::Glyph>::~CAutoPtrList<ssf::Glyph>, COMDAT
; _this$ = ecx
	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
??1?$CAutoPtrList@VGlyph@ssf@@@ATL@@QAE@XZ ENDP		; ATL::CAutoPtrList<ssf::Glyph>::~CAutoPtrList<ssf::Glyph>
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
_TEXT	ENDS
;	COMDAT ??0Row@ssf@@QAE@XZ
_TEXT	SEGMENT
??0Row@ssf@@QAE@XZ PROC					; ssf::Row::Row, COMDAT
; _this$ = eax

; 104  : 		Row() {ascent = descent = border = width = 0;}

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], 10			; 0000000aH
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax+32], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	DWORD PTR [eax+24], ecx
	ret	0
??0Row@ssf@@QAE@XZ ENDP					; ssf::Row::Row
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.cpp
;	COMDAT ??$ReverseList@VRow@ssf@@@ssf@@YAXAAVRow@0@@Z
_TEXT	SEGMENT
_pos$ = -4						; size = 4
??$ReverseList@VRow@ssf@@@ssf@@YAXAAVRow@0@@Z PROC	; ssf::ReverseList<ssf::Row>, COMDAT
; _l$ = eax

; 32   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, eax
	push	edi

; 33   : 		POSITION pos = l.GetHeadPosition();

	mov	edi, DWORD PTR [esi]

; 34   : 		while(pos)

	test	edi, edi
	je	$LN1@ReverseLis
	push	ebx
	jmp	SHORT $LN2@ReverseLis
$LL98@ReverseLis:
	mov	edi, DWORD PTR _pos$[ebp]
$LN2@ReverseLis:

; 35   : 		{
; 36   : 			POSITION cur = pos;
; 37   : 			l.GetNext(pos);

	test	edi, edi
	je	$LN95@ReverseLis
	mov	eax, DWORD PTR [edi]

; 38   : 			l.AddHead(l.GetAt(cur));

	mov	ebx, DWORD PTR [esi]
	mov	DWORD PTR _pos$[ebp], eax
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN44@ReverseLis
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [edi+8], 0
	mov	DWORD PTR [eax+8], edx
$LN44@ReverseLis:
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], ebx
	mov	ecx, DWORD PTR [esi]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN33@ReverseLis
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN32@ReverseLis
$LN33@ReverseLis:
	mov	DWORD PTR [esi+4], eax
$LN32@ReverseLis:
	mov	DWORD PTR [esi], eax

; 39   : 			l.RemoveAt(cur);

	cmp	edi, eax
	jne	SHORT $LN58@ReverseLis
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi], ecx
	jmp	SHORT $LN57@ReverseLis
$LN58@ReverseLis:
	mov	edx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [edx], eax
$LN57@ReverseLis:
	cmp	edi, DWORD PTR [esi+4]
	jne	SHORT $LN56@ReverseLis
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], ecx
	jmp	SHORT $LN55@ReverseLis
$LN56@ReverseLis:
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [edx+4], eax
$LN55@ReverseLis:
	mov	ebx, DWORD PTR [edi+8]
	test	ebx, ebx
	je	SHORT $LN91@ReverseLis
	mov	eax, ebx
	call	??1Glyph@ssf@@QAE@XZ
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN91@ReverseLis:
	mov	DWORD PTR [edi+8], 0
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [edi], ecx
	dec	DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], edi
	jne	SHORT $LN71@ReverseLis
	mov	ecx, esi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
$LN71@ReverseLis:

; 34   : 		while(pos)

	cmp	DWORD PTR _pos$[ebp], 0
	jne	$LL98@ReverseLis
	pop	ebx
$LN1@ReverseLis:
	pop	edi
	pop	esi

; 40   : 		}
; 41   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
$LN95@ReverseLis:

; 35   : 		{
; 36   : 			POSITION cur = pos;
; 37   : 			l.GetNext(pos);

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN100@ReverseLis:
$LN99@ReverseLis:
	int	3
??$ReverseList@VRow@ssf@@@ssf@@YAXAAVRow@0@@Z ENDP	; ssf::ReverseList<ssf::Row>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1Row@ssf@@QAE@XZ
_TEXT	SEGMENT
??1Row@ssf@@QAE@XZ PROC					; ssf::Row::~Row, COMDAT
; _this$ = ecx
	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
??1Row@ssf@@QAE@XZ ENDP					; ssf::Row::~Row
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GRow@ssf@@QAEPAXI@Z
_TEXT	SEGMENT
??_GRow@ssf@@QAEPAXI@Z PROC				; ssf::Row::`scalar deleting destructor', COMDAT
; _this$ = esi
	mov	ecx, esi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, esi
	ret	0
??_GRow@ssf@@QAEPAXI@Z ENDP				; ssf::Row::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ?Free@?$CAutoPtr@VRow@ssf@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Free@?$CAutoPtr@VRow@ssf@@@ATL@@QAEXXZ PROC		; ATL::CAutoPtr<ssf::Row>::Free, COMDAT
; _this$ = edi

; 886  : 	{

	push	esi

; 887  : 		delete m_p;

	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN20@Free@5
	mov	ecx, esi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN20@Free@5:

; 888  : 		m_p = NULL;

	mov	DWORD PTR [edi], 0
	pop	esi

; 889  : 	}

	ret	0
?Free@?$CAutoPtr@VRow@ssf@@@ATL@@QAEXXZ ENDP		; ATL::CAutoPtr<ssf::Row>::Free
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$CAutoPtr@VRow@ssf@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAutoPtr@VRow@ssf@@@ATL@@QAE@XZ PROC		; ATL::CAutoPtr<ssf::Row>::~CAutoPtr<ssf::Row>, COMDAT
; _this$ = edi

; 793  : 	{

	push	esi

; 794  : 		Free();

	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN22@CAutoPtr@5
	mov	ecx, esi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@CAutoPtr@5:
	mov	DWORD PTR [edi], 0
	pop	esi

; 795  : 	}

	ret	0
??1?$CAutoPtr@VRow@ssf@@@ATL@@QAE@XZ ENDP		; ATL::CAutoPtr<ssf::Row>::~CAutoPtr<ssf::Row>
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
_TEXT	ENDS
;	COMDAT ??1RenderedSubtitle@ssf@@UAE@XZ
_TEXT	SEGMENT
??1RenderedSubtitle@ssf@@UAE@XZ PROC			; ssf::RenderedSubtitle::~RenderedSubtitle, COMDAT
; _this$ = ecx

; 115  : 		virtual ~RenderedSubtitle() {}

	mov	DWORD PTR [ecx], OFFSET ??_7RenderedSubtitle@ssf@@6B@
	add	ecx, 36					; 00000024H
	jmp	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
??1RenderedSubtitle@ssf@@UAE@XZ ENDP			; ssf::RenderedSubtitle::~RenderedSubtitle
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0RenderedSubtitle@ssf@@QAE@ABVCRect@@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
??0RenderedSubtitle@ssf@@QAE@ABVCRect@@0@Z PROC		; ssf::RenderedSubtitle::RenderedSubtitle, COMDAT
; _spdrc$ = edx
; _clip$ = ecx

; 114  : 		RenderedSubtitle(const CRect& spdrc, const CRect& clip) : m_spdrc(spdrc), m_clip(clip) {}

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderedSubtitle@ssf@@6B@
	push	esi
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+12], esi
	mov	edx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+16], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+20], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+24], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+28], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+32], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+44], ecx
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], ecx
	mov	DWORD PTR [eax+56], 10			; 0000000aH
	pop	esi
	pop	ebp
	ret	4
??0RenderedSubtitle@ssf@@QAE@ABVCRect@@0@Z ENDP		; ssf::RenderedSubtitle::RenderedSubtitle
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
;	COMDAT ??1CNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@XZ PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CNode::~CNode, COMDAT
; _this$ = edi

; 1189 : 		{

	push	esi

; 1190 : 		}

	mov	esi, DWORD PTR [edi+8]
	test	esi, esi
	je	SHORT $LN24@CNode@22
	mov	ecx, esi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@CNode@22:
	mov	DWORD PTR [edi+8], 0
	pop	esi
	ret	0
??1CNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@XZ ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CNode::~CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GCNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
??_GCNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAXI@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CNode::`scalar deleting destructor', COMDAT
; _this$ = esi
	push	edi
	mov	edi, DWORD PTR [esi+8]
	test	edi, edi
	je	SHORT $LN27@scalar@47
	mov	ecx, edi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN27@scalar@47:
	mov	eax, esi
	mov	DWORD PTR [esi+8], 0
	pop	edi
	ret	0
??_GCNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAXI@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CNode::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z
_TEXT	SEGMENT
_pNode$ = 8						; size = 4
?FreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::FreeNode, COMDAT
; _this$ = ecx

; 1583 : {

	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi

; 1584 : 	pNode->~CNode();

	mov	edi, DWORD PTR _pNode$[ebp]
	mov	ebx, DWORD PTR [edi+8]
	mov	esi, ecx
	test	ebx, ebx
	je	SHORT $LN21@FreeNode@25
	mov	ecx, ebx
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN21@FreeNode@25:
	mov	DWORD PTR [edi+8], 0

; 1585 : 	pNode->m_pNext = m_pFree;

	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [edi], eax

; 1586 : 	m_pFree = pNode;
; 1587 : 	ATLASSUME( m_nElements > 0 );
; 1588 : 	m_nElements--;

	dec	DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], edi

; 1589 : 	if( m_nElements == 0 )

	jne	SHORT $LN1@FreeNode@25

; 1590 : 	{
; 1591 : 		RemoveAll();

	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAll
$LN1@FreeNode@25:
	pop	edi
	pop	esi
	pop	ebx

; 1592 : 	}
; 1593 : }

	pop	ebp
	ret	4
?FreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::FreeNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@AAV?$CAutoPtr@VRow@ssf@@@2@@Z
_TEXT	SEGMENT
??0CNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@AAV?$CAutoPtr@VRow@ssf@@@2@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CNode::CNode, COMDAT
; _this$ = eax
; _element$ = ecx

; 1186 : 		{

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [eax+8], edx

; 1187 : 		}

	ret	0
??0CNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAE@AAV?$CAutoPtr@VRow@ssf@@@2@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::CNode::CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?NewNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEPAVCNode@12@AAV?$CAutoPtr@VRow@ssf@@@2@PAV312@1@Z
_TEXT	SEGMENT
_pPrev$ = 8						; size = 4
_pNext$ = 12						; size = 4
?NewNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEPAVCNode@12@AAV?$CAutoPtr@VRow@ssf@@@2@PAV312@1@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::NewNode, COMDAT
; _this$ = eax
; _element$ = edi

; 1562 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, eax

; 1563 : 	GetFreeNode();

	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetFreeNode

; 1564 : 
; 1565 : 	CNode* pNewNode = m_pFree;

	mov	eax, DWORD PTR [esi+16]

; 1566 : 	CNode* pNextFree = m_pFree->m_pNext;

	mov	ecx, DWORD PTR [eax]

; 1567 : 
; 1568 : 	::new( pNewNode ) CNode( element );

	test	eax, eax
	je	SHORT $LN9@NewNode@18
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [edi], 0
	mov	DWORD PTR [eax+8], edx
$LN9@NewNode@18:

; 1569 : 
; 1570 : 	m_pFree = pNextFree;
; 1571 : 	pNewNode->m_pPrev = pPrev;
; 1572 : 	pNewNode->m_pNext = pNext;

	mov	edx, DWORD PTR _pNext$[ebp]
	mov	DWORD PTR [esi+16], ecx
	mov	ecx, DWORD PTR _pPrev$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], edx

; 1573 : 	m_nElements++;

	inc	DWORD PTR [esi+8]
	pop	esi

; 1574 : 	ATLASSUME( m_nElements > 0 );
; 1575 : 
; 1576 : 	return( pNewNode );
; 1577 : }

	pop	ebp
	ret	8
?NewNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEPAVCNode@12@AAV?$CAutoPtr@VRow@ssf@@@2@PAV312@1@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::NewNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?RemoveAt@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z
_TEXT	SEGMENT
?RemoveAt@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAt, COMDAT
; _this$ = eax
; _pos$ = edi

; 1838 : {

	push	esi
	mov	esi, eax

; 1839 : 	ATLASSERT_VALID(this);
; 1840 : 	ATLENSURE( pos != NULL );

	test	edi, edi
	jne	SHORT $LN13@RemoveAt@3
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN53@RemoveAt@3:
$LN13@RemoveAt@3:

; 1841 : 
; 1842 : 	CNode* pOldNode = (CNode*)pos;
; 1843 : 
; 1844 : 	// remove pOldNode from list
; 1845 : 	if( pOldNode == m_pHead )

	cmp	edi, DWORD PTR [esi]
	jne	SHORT $LN4@RemoveAt@3

; 1846 : 	{
; 1847 : 		m_pHead = pOldNode->m_pNext;

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax

; 1848 : 	}
; 1849 : 	else

	jmp	SHORT $LN3@RemoveAt@3
$LN4@RemoveAt@3:

; 1850 : 	{
; 1851 : 		ATLASSERT( AtlIsValidAddress( pOldNode->m_pPrev, sizeof(CNode) ));
; 1852 : 		pOldNode->m_pPrev->m_pNext = pOldNode->m_pNext;

	mov	ecx, DWORD PTR [edi+4]
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [ecx], edx
$LN3@RemoveAt@3:

; 1853 : 	}
; 1854 : 	if( pOldNode == m_pTail )

	cmp	edi, DWORD PTR [esi+4]
	jne	SHORT $LN2@RemoveAt@3

; 1855 : 	{
; 1856 : 		m_pTail = pOldNode->m_pPrev;

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], eax

; 1857 : 	}
; 1858 : 	else

	jmp	SHORT $LN1@RemoveAt@3
$LN2@RemoveAt@3:

; 1859 : 	{
; 1860 : 		ATLASSERT( AtlIsValidAddress( pOldNode->m_pNext, sizeof(CNode) ));
; 1861 : 		pOldNode->m_pNext->m_pPrev = pOldNode->m_pPrev;

	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx+4], edx
$LN1@RemoveAt@3:

; 1862 : 	}
; 1863 : 	FreeNode( pOldNode );

	push	ebx
	mov	ebx, DWORD PTR [edi+8]
	test	ebx, ebx
	je	SHORT $LN37@RemoveAt@3
	mov	ecx, ebx
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN37@RemoveAt@3:
	mov	DWORD PTR [edi+8], 0
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [edi], eax
	dec	DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], edi
	pop	ebx
	jne	SHORT $LN17@RemoveAt@3
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAll
$LN17@RemoveAt@3:

; 1864 : }

	pop	esi
	ret	0
$LN52@RemoveAt@3:
?RemoveAt@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXPAU__POSITION@@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?AddHead@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VRow@ssf@@@2@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?AddHead@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VRow@ssf@@@2@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::AddHead, COMDAT
; _this$ = eax

; 1614 : {

	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR _element$[ebp]
	push	esi
	mov	esi, eax
	push	edi

; 1615 : 	CNode* pNode;
; 1616 : 
; 1617 : 	pNode = NewNode( element, NULL, m_pHead );

	mov	edi, DWORD PTR [esi]
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN13@AddHead@5
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [eax+8], edx
$LN13@AddHead@5:
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], edi

; 1618 : 
; 1619 : 	if( m_pHead != NULL )

	mov	ecx, DWORD PTR [esi]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN2@AddHead@5

; 1620 : 	{
; 1621 : 		m_pHead->m_pPrev = pNode;

	pop	edi
	mov	DWORD PTR [ecx+4], eax

; 1626 : 	}
; 1627 : 	m_pHead = pNode;

	mov	DWORD PTR [esi], eax
	pop	esi
	pop	ebx

; 1628 : 
; 1629 : 	return( POSITION( pNode ) );
; 1630 : }

	pop	ebp
	ret	4
$LN2@AddHead@5:
	pop	edi

; 1622 : 	}
; 1623 : 	else
; 1624 : 	{
; 1625 : 		m_pTail = pNode;

	mov	DWORD PTR [esi+4], eax

; 1626 : 	}
; 1627 : 	m_pHead = pNode;

	mov	DWORD PTR [esi], eax
	pop	esi
	pop	ebx

; 1628 : 
; 1629 : 	return( POSITION( pNode ) );
; 1630 : }

	pop	ebp
	ret	4
?AddHead@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VRow@ssf@@@2@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::AddHead
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.cpp
_TEXT	ENDS
;	COMDAT ??$ReverseList@V?$CAutoPtrList@VRow@ssf@@@ATL@@@ssf@@YAXAAV?$CAutoPtrList@VRow@ssf@@@ATL@@@Z
_TEXT	SEGMENT
_pos$ = -4						; size = 4
??$ReverseList@V?$CAutoPtrList@VRow@ssf@@@ATL@@@ssf@@YAXAAV?$CAutoPtrList@VRow@ssf@@@ATL@@@Z PROC ; ssf::ReverseList<ATL::CAutoPtrList<ssf::Row> >, COMDAT
; _l$ = eax

; 32   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, eax
	push	edi

; 33   : 		POSITION pos = l.GetHeadPosition();

	mov	edi, DWORD PTR [esi]

; 34   : 		while(pos)

	test	edi, edi
	je	$LN1@ReverseLis@2
	push	ebx
	jmp	SHORT $LN2@ReverseLis@2
$LL110@ReverseLis@2:
	mov	edi, DWORD PTR _pos$[ebp]
$LN2@ReverseLis@2:

; 35   : 		{
; 36   : 			POSITION cur = pos;
; 37   : 			l.GetNext(pos);

	test	edi, edi
	je	$LN107@ReverseLis@2
	mov	eax, DWORD PTR [edi]

; 38   : 			l.AddHead(l.GetAt(cur));

	mov	ebx, DWORD PTR [esi]
	mov	DWORD PTR _pos$[ebp], eax
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN44@ReverseLis@2
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [edi+8], 0
	mov	DWORD PTR [eax+8], edx
$LN44@ReverseLis@2:
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], ebx
	mov	ecx, DWORD PTR [esi]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN33@ReverseLis@2
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN32@ReverseLis@2
$LN33@ReverseLis@2:
	mov	DWORD PTR [esi+4], eax
$LN32@ReverseLis@2:
	mov	DWORD PTR [esi], eax

; 39   : 			l.RemoveAt(cur);

	cmp	edi, eax
	jne	SHORT $LN58@ReverseLis@2
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi], ecx
	jmp	SHORT $LN57@ReverseLis@2
$LN58@ReverseLis@2:
	mov	edx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [edx], eax
$LN57@ReverseLis@2:
	cmp	edi, DWORD PTR [esi+4]
	jne	SHORT $LN56@ReverseLis@2
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], ecx
	jmp	SHORT $LN55@ReverseLis@2
$LN56@ReverseLis@2:
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [edx+4], eax
$LN55@ReverseLis@2:
	mov	ebx, DWORD PTR [edi+8]
	test	ebx, ebx
	je	SHORT $LN91@ReverseLis@2
	mov	ecx, ebx
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN91@ReverseLis@2:
	mov	DWORD PTR [edi+8], 0
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [edi], ecx
	dec	DWORD PTR [esi+8]
	mov	DWORD PTR [esi+16], edi
	jne	SHORT $LN71@ReverseLis@2
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAll
$LN71@ReverseLis@2:

; 34   : 		while(pos)

	cmp	DWORD PTR _pos$[ebp], 0
	jne	$LL110@ReverseLis@2
	pop	ebx
$LN1@ReverseLis@2:
	pop	edi
	pop	esi

; 40   : 		}
; 41   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
$LN107@ReverseLis@2:

; 35   : 		{
; 36   : 			POSITION cur = pos;
; 37   : 			l.GetNext(pos);

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN112@ReverseLis@2:
$LN111@ReverseLis@2:
	int	3
??$ReverseList@V?$CAutoPtrList@VRow@ssf@@@ATL@@@ssf@@YAXAAV?$CAutoPtrList@VRow@ssf@@@ATL@@@Z ENDP ; ssf::ReverseList<ATL::CAutoPtrList<ssf::Row> >
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
_TEXT	ENDS
;	COMDAT ?InsertBefore@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@PAU3@AAV?$CAutoPtr@VRow@ssf@@@2@@Z
_TEXT	SEGMENT
_p$666373 = -4						; size = 4
_element$ = 8						; size = 4
?InsertBefore@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@PAU3@AAV?$CAutoPtr@VRow@ssf@@@2@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::InsertBefore, COMDAT
; _this$ = ecx
; _pos$ = eax

; 1782 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	edi, eax
	mov	esi, ecx

; 1783 : 	ATLASSERT_VALID(this);
; 1784 : 
; 1785 : 	if( pos == NULL )

	test	edi, edi
	jne	SHORT $LN3@InsertBefo

; 1786 : 		return AddHead( element ); // insert before nothing -> head of the list

	mov	edi, DWORD PTR [esi]
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN18@InsertBefo
	mov	ebx, DWORD PTR _element$[ebp]
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [eax+8], edx
$LN18@InsertBefo:
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], edi
	mov	ecx, DWORD PTR [esi]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN7@InsertBefo
	pop	edi
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [esi], eax
	pop	esi
	pop	ebx

; 1803 : 
; 1804 : 	return( POSITION( pNewNode ) );
; 1805 : }

	mov	esp, ebp
	pop	ebp
	ret	4

; 1786 : 		return AddHead( element ); // insert before nothing -> head of the list

$LN7@InsertBefo:
	pop	edi
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi], eax
	pop	esi
	pop	ebx

; 1803 : 
; 1804 : 	return( POSITION( pNewNode ) );
; 1805 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN3@InsertBefo:

; 1787 : 
; 1788 : 	// Insert it before position
; 1789 : 	CNode* pOldNode = (CNode*)pos;
; 1790 : 	CNode* pNewNode = NewNode( element, pOldNode->m_pPrev, pOldNode );

	mov	ebx, DWORD PTR [edi+4]
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN37@InsertBefo
	mov	edx, DWORD PTR _element$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR _p$666373[ebp], edx
	mov	edx, DWORD PTR _element$[ebp]
	mov	DWORD PTR [edx], 0
	mov	edx, DWORD PTR _p$666373[ebp]
	mov	DWORD PTR [eax+8], edx
$LN37@InsertBefo:
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], edi
	inc	DWORD PTR [esi+8]

; 1791 : 
; 1792 : 	if( pOldNode->m_pPrev != NULL )

	mov	ecx, DWORD PTR [edi+4]
	test	ecx, ecx
	je	SHORT $LN2@InsertBefo

; 1793 : 	{
; 1794 : 		ATLASSERT(AtlIsValidAddress(pOldNode->m_pPrev, sizeof(CNode)));
; 1795 : 		pOldNode->m_pPrev->m_pNext = pNewNode;

	mov	DWORD PTR [ecx], eax

; 1801 : 	}
; 1802 : 	pOldNode->m_pPrev = pNewNode;

	mov	DWORD PTR [edi+4], eax
	pop	edi
	pop	esi
	pop	ebx

; 1803 : 
; 1804 : 	return( POSITION( pNewNode ) );
; 1805 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN2@InsertBefo:

; 1796 : 	}
; 1797 : 	else
; 1798 : 	{
; 1799 : 		ATLASSERT( pOldNode == m_pHead );
; 1800 : 		m_pHead = pNewNode;

	mov	DWORD PTR [esi], eax

; 1801 : 	}
; 1802 : 	pOldNode->m_pPrev = pNewNode;

	mov	DWORD PTR [edi+4], eax
	pop	edi
	pop	esi
	pop	ebx

; 1803 : 
; 1804 : 	return( POSITION( pNewNode ) );
; 1805 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?InsertBefore@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@PAU3@AAV?$CAutoPtr@VRow@ssf@@@2@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::InsertBefore
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?AddTail@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VRow@ssf@@@2@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?AddTail@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VRow@ssf@@@2@@Z PROC ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::AddTail, COMDAT
; _this$ = eax

; 1651 : {

	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR _element$[ebp]
	push	esi
	mov	esi, eax
	push	edi

; 1652 : 	CNode* pNode;
; 1653 : 
; 1654 : 	pNode = NewNode( element, m_pTail, NULL );

	mov	edi, DWORD PTR [esi+4]
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN13@AddTail@11
	mov	edx, DWORD PTR [ebx]
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [eax+8], edx
$LN13@AddTail@11:
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax], 0

; 1655 : 
; 1656 : 	if( m_pTail != NULL )

	mov	ecx, DWORD PTR [esi+4]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN2@AddTail@11

; 1657 : 	{
; 1658 : 		m_pTail->m_pNext = pNode;

	pop	edi
	mov	DWORD PTR [ecx], eax

; 1663 : 	}
; 1664 : 	m_pTail = pNode;

	mov	DWORD PTR [esi+4], eax
	pop	esi
	pop	ebx

; 1665 : 
; 1666 : 	return( POSITION( pNode ) );
; 1667 : }

	pop	ebp
	ret	4
$LN2@AddTail@11:
	pop	edi

; 1659 : 	}
; 1660 : 	else
; 1661 : 	{
; 1662 : 		m_pHead = pNode;

	mov	DWORD PTR [esi], eax

; 1663 : 	}
; 1664 : 	m_pTail = pNode;

	mov	DWORD PTR [esi+4], eax
	pop	esi
	pop	ebx

; 1665 : 
; 1666 : 	return( POSITION( pNode ) );
; 1667 : }

	pop	ebp
	ret	4
?AddTail@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@AAV?$CAutoPtr@VRow@ssf@@@2@@Z ENDP ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::AddTail
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GRenderedSubtitle@ssf@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GRenderedSubtitle@ssf@@UAEPAXI@Z PROC		; ssf::RenderedSubtitle::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR [esi], OFFSET ??_7RenderedSubtitle@ssf@@6B@
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN16@scalar@48
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@scalar@48:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GRenderedSubtitle@ssf@@UAEPAXI@Z ENDP		; ssf::RenderedSubtitle::`scalar deleting destructor'
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z$0
__ehfuncinfo$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
xdata$x	ENDS
;	COMDAT ??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z
_TEXT	SEGMENT
_chTemp$ = -20						; size = 2
$T692518 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_ch2$ = 12						; size = 2
??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z PROC ; ATL::operator+, COMDAT
; _str1$ = edi

; 2356 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T692518[ebp], 0

; 2357 : 		CStringT strResult( str1.GetManager() );

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax-16]
	test	ecx, ecx
	je	SHORT $LN5@operator@39
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	test	eax, eax
	jne	SHORT $LN27@operator@39
$LN5@operator@39:
	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN27@operator@39:
	xor	ecx, ecx
	test	eax, eax
	setne	cl
	test	ecx, ecx
	jne	SHORT $LN26@operator@39
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN44@operator@39:
$LN26@operator@39:
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	eax, 16					; 00000010H
	mov	DWORD PTR [esi], eax

; 2358 : 		XCHAR chTemp = XCHAR( ch2 );
; 2359 : 
; 2360 : 		Concatenate( strResult, str1, str1.GetLength(), &chTemp, 1 );
; 2361 : 
; 2362 : 		return( strResult );

	movzx	ecx, WORD PTR _ch2$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR [edi]
	push	1
	lea	edx, DWORD PTR _chTemp$[ebp]
	push	edx
	mov	DWORD PTR _chTemp$[ebp], ecx
	mov	ecx, DWORD PTR [eax-12]
	push	ecx
	push	eax
	push	esi
	mov	DWORD PTR $T692518[ebp], 1
	call	?Concatenate@?$CSimpleStringT@_W$0A@@ATL@@KAXAAV12@PB_WH1H@Z ; ATL::CSimpleStringT<wchar_t,0>::Concatenate

; 2363 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	add	esp, 20					; 00000014H
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN43@operator@39:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z$0:
	mov	eax, DWORD PTR $T692518[ebp]
	and	eax, 1
	je	$LN4@operator@39
	and	DWORD PTR $T692518[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
$LN4@operator@39:
	ret	0
__ehhandler$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z:
	mov	eax, OFFSET __ehfuncinfo$??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z ENDP ; ATL::operator+
; Function compile flags: /Ogtp
;	COMDAT ??4Background@ssf@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
??4Background@ssf@@QAEAAU01@ABU01@@Z PROC		; ssf::Background::operator=, COMDAT
; _this$ = esi
; ___that$ = eax
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [esi+12], edx
	fld	DWORD PTR [eax+16]
	fstp	DWORD PTR [esi+16]
	add	eax, 24					; 00000018H
	fld	DWORD PTR [eax-4]
	push	eax
	lea	ecx, DWORD PTR [esi+24]
	fstp	DWORD PTR [esi+20]
	call	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=
	mov	eax, esi
	ret	0
??4Background@ssf@@QAEAAU01@ABU01@@Z ENDP		; ssf::Background::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??4Font@ssf@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
??4Font@ssf@@QAEAAU01@ABU01@@Z PROC			; ssf::Font::operator=, COMDAT
; _this$ = esi
; ___that$ = edi
	push	edi
	mov	ecx, esi
	call	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=
	fld	DWORD PTR [edi+4]
	fstp	DWORD PTR [esi+4]
	fld	DWORD PTR [edi+8]
	fstp	DWORD PTR [esi+8]
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax
	mov	ecx, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], ecx
	mov	edx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], edx
	mov	eax, DWORD PTR [edi+24]
	mov	DWORD PTR [esi+24], eax
	mov	cl, BYTE PTR [edi+28]
	mov	BYTE PTR [esi+28], cl
	mov	dl, BYTE PTR [edi+29]
	mov	BYTE PTR [esi+29], dl
	movzx	eax, BYTE PTR [edi+30]
	mov	BYTE PTR [esi+30], al
	fld	DWORD PTR [edi+32]
	fstp	DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [edi+36]
	mov	DWORD PTR [esi+36], ecx
	mov	edx, DWORD PTR [edi+40]
	mov	DWORD PTR [esi+40], edx
	movzx	eax, BYTE PTR [edi+44]
	mov	BYTE PTR [esi+44], al
	mov	eax, esi
	ret	0
??4Font@ssf@@QAEAAU01@ABU01@@Z ENDP			; ssf::Font::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??4Style@ssf@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___that$ = 12						; size = 4
??4Style@ssf@@QAEAAU01@ABU01@@Z PROC			; ssf::Style::operator=, COMDAT
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[ebp]
	push	edi
	mov	ecx, ebx
	call	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=
	lea	eax, DWORD PTR [edi+4]
	lea	esi, DWORD PTR [ebx+4]
	call	??4Placement@ssf@@QAEAAU01@ABU01@@Z
	add	edi, 104				; 00000068H
	lea	esi, DWORD PTR [ebx+104]
	call	??4Font@ssf@@QAEAAU01@ABU01@@Z
	mov	esi, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [esi+152]
	mov	DWORD PTR [ebx+152], eax
	mov	ecx, DWORD PTR [esi+156]
	mov	DWORD PTR [ebx+156], ecx
	mov	edx, DWORD PTR [esi+160]
	mov	DWORD PTR [ebx+160], edx
	mov	eax, DWORD PTR [esi+164]
	mov	DWORD PTR [ebx+164], eax
	fld	DWORD PTR [esi+168]
	fstp	DWORD PTR [ebx+168]
	lea	ecx, DWORD PTR [esi+176]
	fld	DWORD PTR [esi+172]
	push	ecx
	lea	ecx, DWORD PTR [ebx+176]
	fstp	DWORD PTR [ebx+172]
	call	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=
	mov	eax, DWORD PTR ___that$[ebp]
	add	esi, 180				; 000000b4H
	lea	edi, DWORD PTR [ebx+180]
	mov	ecx, 7
	rep movsd
	mov	edx, DWORD PTR [eax+208]
	mov	DWORD PTR [ebx+208], edx
	mov	ecx, DWORD PTR [eax+212]
	mov	DWORD PTR [ebx+212], ecx
	mov	edx, DWORD PTR [eax+216]
	mov	DWORD PTR [ebx+216], edx
	mov	ecx, DWORD PTR [eax+220]
	mov	DWORD PTR [ebx+220], ecx
	mov	edx, DWORD PTR [eax+224]
	mov	DWORD PTR [ebx+224], edx
	mov	eax, DWORD PTR [eax+228]
	pop	edi
	mov	DWORD PTR [ebx+228], eax
	pop	esi
	mov	eax, ebx
	pop	ebx
	pop	ebp
	ret	8
??4Style@ssf@@QAEAAU01@ABU01@@Z ENDP			; ssf::Style::operator=
; Function compile flags: /Ogtp
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
;	COMDAT ??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@IAE@PB_W@Z
_TEXT	SEGMENT
??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@IAE@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CPair::CPair, COMDAT
; _this$ = esi
; _key$ = eax

; 2113 : 		{

	push	eax
	mov	ecx, esi
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >

; 2114 : 		}

	mov	eax, esi
	ret	0
??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@IAE@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CPair::CPair
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@IAE@PB_W@Z
_TEXT	SEGMENT
??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@IAE@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CPair::CPair, COMDAT
; _this$ = esi
; _key$ = eax

; 2113 : 		{

	push	eax
	mov	ecx, esi
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >

; 2114 : 		}

	mov	eax, esi
	ret	0
??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@IAE@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CPair::CPair
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@IAE@PB_W@Z
_TEXT	SEGMENT
??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@IAE@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CPair::CPair, COMDAT
; _this$ = esi
; _key$ = eax

; 2113 : 		{

	push	eax
	mov	ecx, esi
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >

; 2114 : 		}

	mov	eax, esi
	ret	0
??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@IAE@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CPair::CPair
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@IAE@PB_W@Z
_TEXT	SEGMENT
??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@IAE@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CPair::CPair, COMDAT
; _this$ = esi
; _key$ = eax

; 2113 : 		{

	push	eax
	mov	ecx, esi
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >

; 2114 : 		}

	mov	eax, esi
	ret	0
??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@IAE@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CPair::CPair
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@IAE@PB_W@Z
_TEXT	SEGMENT
??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@IAE@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CPair::CPair, COMDAT
; _this$ = esi
; _key$ = eax

; 2113 : 		{

	push	eax
	mov	ecx, esi
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax

; 2114 : 		}

	mov	eax, esi
	ret	0
??0CPair@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@IAE@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CPair::CPair
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@PB_WI@Z
_TEXT	SEGMENT
_nHash$ = 8						; size = 4
??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@PB_WI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::CNode, COMDAT
; _this$ = esi
; _key$ = eax

; 2131 : 		{

	push	ebp
	mov	ebp, esp
	push	eax
	mov	ecx, esi
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR [esi+12], ecx

; 2132 : 		}

	mov	eax, esi
	pop	ebp
	ret	4
??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@PB_WI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CNode::CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@PB_WI@Z
_TEXT	SEGMENT
_nHash$ = 8						; size = 4
??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@PB_WI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::CNode, COMDAT
; _this$ = esi
; _key$ = eax

; 2131 : 		{

	push	ebp
	mov	ebp, esp
	push	eax
	mov	ecx, esi
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	ecx, DWORD PTR _nHash$[ebp]
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+28], ecx

; 2132 : 		}

	mov	eax, esi
	pop	ebp
	ret	4
??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE@PB_WI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CNode::CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@PB_WI@Z
_TEXT	SEGMENT
_nHash$ = 8						; size = 4
??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@PB_WI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::CNode, COMDAT
; _this$ = esi
; _key$ = eax

; 2131 : 		{

	push	ebp
	mov	ebp, esp
	push	eax
	mov	ecx, esi
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR [esi+12], ecx

; 2132 : 		}

	mov	eax, esi
	pop	ebp
	ret	4
??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE@PB_WI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CNode::CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@PB_WI@Z
_TEXT	SEGMENT
_nHash$ = 8						; size = 4
??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@PB_WI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::CNode, COMDAT
; _this$ = esi
; _key$ = eax

; 2131 : 		{

	push	ebp
	mov	ebp, esp
	push	eax
	mov	ecx, esi
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR [esi+12], ecx

; 2132 : 		}

	mov	eax, esi
	pop	ebp
	ret	4
??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE@PB_WI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CNode::CNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@PB_WI@Z
_TEXT	SEGMENT
_nHash$ = 8						; size = 4
??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@PB_WI@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::CNode, COMDAT
; _this$ = esi
; _key$ = eax

; 2131 : 		{

	push	ebp
	mov	ebp, esp
	push	eax
	mov	ecx, esi
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR [esi+12], ecx

; 2132 : 		}

	mov	eax, esi
	pop	ebp
	ret	4
??0CNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE@PB_WI@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CNode::CNode
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$0
__tryblocktable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$5
__ehfuncinfo$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	DD	01H
	DD	FLAT:__tryblocktable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
_TEXT	SEGMENT
$T756936 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_key$ = 12						; size = 4
_pNewNode$ = 16						; size = 4
_iBin$ = 16						; size = 4
_nHash$ = 20						; size = 4
?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::NewNode, COMDAT

; 2682 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _iBin$[ebp]
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2683 : 	CNode* pNewNode;
; 2684 : 
; 2685 : 	if( m_pFree == NULL )

	cmp	DWORD PTR [esi+44], 0
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	jne	SHORT $LN12@NewNode@21

; 2686 : 	{
; 2687 : 		CAtlPlex* pPlex;
; 2688 : 		CNode* pNode;
; 2689 : 
; 2690 : 		pPlex = CAtlPlex::Create( m_pBlocks, m_nBlockSize, sizeof( CNode ) );

	mov	eax, DWORD PTR [esi+36]
	xor	ecx, ecx
	shld	ecx, eax, 4
	shl	eax, 4
	test	ecx, ecx
	ja	SHORT $LN63@NewNode@21
	jb	SHORT $LN64@NewNode@21
	cmp	eax, -1
	ja	SHORT $LN63@NewNode@21
$LN64@NewNode@21:
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, 4
	jb	SHORT $LN63@NewNode@21
	add	eax, 4
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $LN63@NewNode@21
	mov	edx, DWORD PTR [esi+40]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [esi+40], eax

; 2694 : 		}
; 2695 : 		pNode = (CNode*)pPlex->data();
; 2696 : 		pNode += m_nBlockSize-1;

	mov	ecx, DWORD PTR [esi+36]
	mov	edx, ecx
	add	edx, edx

; 2697 : 		for( int iBlock = m_nBlockSize-1; iBlock >= 0; iBlock-- )

	dec	ecx
	lea	eax, DWORD PTR [eax+edx*8-12]
	js	SHORT $LN12@NewNode@21
$LL15@NewNode@21:

; 2698 : 		{
; 2699 : 			pNode->m_pNext = m_pFree;

	mov	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [eax+8], edx

; 2700 : 			m_pFree = pNode;

	mov	DWORD PTR [esi+44], eax

; 2701 : 			pNode--;

	sub	eax, 16					; 00000010H
	dec	ecx
	jns	SHORT $LL15@NewNode@21
$LN12@NewNode@21:

; 2702 : 		}
; 2703 : 	}
; 2704 : 	ATLENSURE(m_pFree != NULL );

	mov	edi, DWORD PTR [esi+44]
	xor	eax, eax
	test	edi, edi
	setne	al
	test	eax, eax
	jne	SHORT $LN11@NewNode@21
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN70@NewNode@21:
$LN63@NewNode@21:

; 2691 : 		if( pPlex == NULL )
; 2692 : 		{
; 2693 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN71@NewNode@21:
$LN11@NewNode@21:

; 2705 : 	pNewNode = m_pFree;
; 2706 : 	m_pFree = pNewNode->m_pNext;

	mov	eax, DWORD PTR [edi+8]

; 2707 : 
; 2708 : 	_ATLTRY
; 2709 : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	DWORD PTR _pNewNode$[ebp], edi
	mov	DWORD PTR [esi+44], eax

; 2710 : 		::new( pNewNode ) CNode( key, nHash );

	mov	DWORD PTR $T756936[ebp], edi
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	edx, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	DWORD PTR [edi+12], edx
	inc	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+ebx*4]
	mov	DWORD PTR [edi+8], ecx
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [edx+ebx*4], edi
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+24]
	jbe	SHORT $LN1@NewNode@21

; 2718 : 	}
; 2719 : 	m_nElements++;
; 2720 : 
; 2721 : 	pNewNode->m_pNext = m_ppBins[iBin];
; 2722 : 	m_ppBins[iBin] = pNewNode;
; 2723 : 
; 2724 : 	if( (m_nElements > m_nHiRehashThreshold) && !IsLocked() )

	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN1@NewNode@21

; 2725 : 	{
; 2726 : 		Rehash( PickSize( m_nElements ) );

	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::PickSize
	push	eax
	push	esi
	call	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::Rehash
$LN1@NewNode@21:

; 2727 : 	}
; 2728 : 
; 2729 : 	return( pNewNode );
; 2730 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
__catch$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$0:

; 2711 : 	}
; 2712 : 	_ATLCATCHALL()
; 2713 : 	{
; 2714 : 		pNewNode->m_pNext = m_pFree;

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _pNewNode$[ebp]

; 2715 : 		m_pFree = pNewNode;
; 2716 : 
; 2717 : 		_ATLRETHROW;

	push	0
	mov	DWORD PTR [ecx+8], edx
	push	0
	mov	DWORD PTR [eax+44], ecx
	call	__CxxThrowException@8
$LN72@NewNode@21:
$LN69@NewNode@21:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$2:
	mov	eax, DWORD PTR _pNewNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T756936[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z:
	mov	eax, OFFSET __ehfuncinfo$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::NewNode
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$0
__tryblocktable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$5
__ehfuncinfo$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	DD	01H
	DD	FLAT:__tryblocktable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
_TEXT	SEGMENT
$T757047 = -24						; size = 4
_pNewNode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_key$ = 12						; size = 4
_iBin$ = 16						; size = 4
_nHash$ = 20						; size = 4
?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::NewNode, COMDAT

; 2682 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2683 : 	CNode* pNewNode;
; 2684 : 
; 2685 : 	if( m_pFree == NULL )

	xor	ebx, ebx
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	cmp	DWORD PTR [esi+44], ebx
	jne	SHORT $LN12@NewNode@22

; 2686 : 	{
; 2687 : 		CAtlPlex* pPlex;
; 2688 : 		CNode* pNode;
; 2689 : 
; 2690 : 		pPlex = CAtlPlex::Create( m_pBlocks, m_nBlockSize, sizeof( CNode ) );

	mov	eax, DWORD PTR [esi+36]
	xor	ecx, ecx
	shld	ecx, eax, 5
	shl	eax, 5
	cmp	ecx, ebx
	ja	SHORT $LN67@NewNode@22
	jb	SHORT $LN68@NewNode@22
	cmp	eax, -1
	ja	SHORT $LN67@NewNode@22
$LN68@NewNode@22:
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, 4
	jb	SHORT $LN67@NewNode@22
	add	eax, 4
	push	eax
	call	_malloc
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN67@NewNode@22
	mov	edx, DWORD PTR [esi+40]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [esi+40], eax

; 2694 : 		}
; 2695 : 		pNode = (CNode*)pPlex->data();
; 2696 : 		pNode += m_nBlockSize-1;

	mov	ecx, DWORD PTR [esi+36]
	mov	edx, ecx
	shl	edx, 5

; 2697 : 		for( int iBlock = m_nBlockSize-1; iBlock >= 0; iBlock-- )

	dec	ecx
	lea	eax, DWORD PTR [edx+eax-28]
	cmp	ecx, ebx
	jl	SHORT $LN12@NewNode@22
$LL15@NewNode@22:

; 2698 : 		{
; 2699 : 			pNode->m_pNext = m_pFree;

	mov	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [eax+24], edx

; 2700 : 			m_pFree = pNode;

	mov	DWORD PTR [esi+44], eax

; 2701 : 			pNode--;

	sub	eax, 32					; 00000020H
	dec	ecx
	jns	SHORT $LL15@NewNode@22
$LN12@NewNode@22:

; 2702 : 		}
; 2703 : 	}
; 2704 : 	ATLENSURE(m_pFree != NULL );

	mov	edi, DWORD PTR [esi+44]
	xor	eax, eax
	cmp	edi, ebx
	setne	al
	cmp	eax, ebx
	jne	SHORT $LN11@NewNode@22
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN74@NewNode@22:
$LN67@NewNode@22:

; 2691 : 		if( pPlex == NULL )
; 2692 : 		{
; 2693 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN75@NewNode@22:
$LN11@NewNode@22:

; 2705 : 	pNewNode = m_pFree;
; 2706 : 	m_pFree = pNewNode->m_pNext;

	mov	eax, DWORD PTR [edi+24]

; 2707 : 
; 2708 : 	_ATLTRY
; 2709 : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	DWORD PTR _pNewNode$[ebp], edi
	mov	DWORD PTR [esi+44], eax

; 2710 : 		::new( pNewNode ) CNode( key, nHash );

	mov	DWORD PTR $T757047[ebp], edi
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	edx, DWORD PTR _nHash$[ebp]

; 2718 : 	}
; 2719 : 	m_nElements++;
; 2720 : 
; 2721 : 	pNewNode->m_pNext = m_ppBins[iBin];

	mov	eax, DWORD PTR _iBin$[ebp]
	mov	DWORD PTR [edi+4], ebx
	mov	DWORD PTR [edi+8], ebx
	mov	DWORD PTR [edi+12], ebx
	mov	DWORD PTR [edi+16], ebx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	DWORD PTR [edi+28], edx
	inc	DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [edi+24], edx
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [ecx+eax*4], edi
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+24]
	jbe	SHORT $LN1@NewNode@22

; 2722 : 	m_ppBins[iBin] = pNewNode;
; 2723 : 
; 2724 : 	if( (m_nElements > m_nHiRehashThreshold) && !IsLocked() )

	cmp	DWORD PTR [esi+32], ebx
	jne	SHORT $LN1@NewNode@22

; 2725 : 	{
; 2726 : 		Rehash( PickSize( m_nElements ) );

	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::PickSize
	push	eax
	push	esi
	call	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::Rehash
$LN1@NewNode@22:

; 2727 : 	}
; 2728 : 
; 2729 : 	return( pNewNode );
; 2730 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
__catch$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$0:

; 2711 : 	}
; 2712 : 	_ATLCATCHALL()
; 2713 : 	{
; 2714 : 		pNewNode->m_pNext = m_pFree;

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _pNewNode$[ebp]

; 2715 : 		m_pFree = pNewNode;
; 2716 : 
; 2717 : 		_ATLRETHROW;

	xor	ebx, ebx
	push	ebx
	mov	DWORD PTR [ecx+24], edx
	push	ebx
	mov	DWORD PTR [eax+44], ecx
	call	__CxxThrowException@8
$LN76@NewNode@22:
$LN73@NewNode@22:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$2:
	mov	eax, DWORD PTR _pNewNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T757047[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z:
	mov	eax, OFFSET __ehfuncinfo$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::NewNode
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$0
__tryblocktable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$5
__ehfuncinfo$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	DD	01H
	DD	FLAT:__tryblocktable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
_TEXT	SEGMENT
$T757175 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_key$ = 12						; size = 4
_pNewNode$ = 16						; size = 4
_iBin$ = 16						; size = 4
_nHash$ = 20						; size = 4
?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::NewNode, COMDAT

; 2682 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _iBin$[ebp]
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2683 : 	CNode* pNewNode;
; 2684 : 
; 2685 : 	if( m_pFree == NULL )

	cmp	DWORD PTR [esi+44], 0
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	jne	SHORT $LN12@NewNode@23

; 2686 : 	{
; 2687 : 		CAtlPlex* pPlex;
; 2688 : 		CNode* pNode;
; 2689 : 
; 2690 : 		pPlex = CAtlPlex::Create( m_pBlocks, m_nBlockSize, sizeof( CNode ) );

	mov	eax, DWORD PTR [esi+36]
	xor	ecx, ecx
	shld	ecx, eax, 4
	shl	eax, 4
	test	ecx, ecx
	ja	SHORT $LN63@NewNode@23
	jb	SHORT $LN64@NewNode@23
	cmp	eax, -1
	ja	SHORT $LN63@NewNode@23
$LN64@NewNode@23:
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, 4
	jb	SHORT $LN63@NewNode@23
	add	eax, 4
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $LN63@NewNode@23
	mov	edx, DWORD PTR [esi+40]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [esi+40], eax

; 2694 : 		}
; 2695 : 		pNode = (CNode*)pPlex->data();
; 2696 : 		pNode += m_nBlockSize-1;

	mov	ecx, DWORD PTR [esi+36]
	mov	edx, ecx
	add	edx, edx

; 2697 : 		for( int iBlock = m_nBlockSize-1; iBlock >= 0; iBlock-- )

	dec	ecx
	lea	eax, DWORD PTR [eax+edx*8-12]
	js	SHORT $LN12@NewNode@23
$LL15@NewNode@23:

; 2698 : 		{
; 2699 : 			pNode->m_pNext = m_pFree;

	mov	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [eax+8], edx

; 2700 : 			m_pFree = pNode;

	mov	DWORD PTR [esi+44], eax

; 2701 : 			pNode--;

	sub	eax, 16					; 00000010H
	dec	ecx
	jns	SHORT $LL15@NewNode@23
$LN12@NewNode@23:

; 2702 : 		}
; 2703 : 	}
; 2704 : 	ATLENSURE(m_pFree != NULL );

	mov	edi, DWORD PTR [esi+44]
	xor	eax, eax
	test	edi, edi
	setne	al
	test	eax, eax
	jne	SHORT $LN11@NewNode@23
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN70@NewNode@23:
$LN63@NewNode@23:

; 2691 : 		if( pPlex == NULL )
; 2692 : 		{
; 2693 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN71@NewNode@23:
$LN11@NewNode@23:

; 2705 : 	pNewNode = m_pFree;
; 2706 : 	m_pFree = pNewNode->m_pNext;

	mov	eax, DWORD PTR [edi+8]

; 2707 : 
; 2708 : 	_ATLTRY
; 2709 : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	DWORD PTR _pNewNode$[ebp], edi
	mov	DWORD PTR [esi+44], eax

; 2710 : 		::new( pNewNode ) CNode( key, nHash );

	mov	DWORD PTR $T757175[ebp], edi
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	edx, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	DWORD PTR [edi+12], edx
	inc	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+ebx*4]
	mov	DWORD PTR [edi+8], ecx
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [edx+ebx*4], edi
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+24]
	jbe	SHORT $LN1@NewNode@23

; 2718 : 	}
; 2719 : 	m_nElements++;
; 2720 : 
; 2721 : 	pNewNode->m_pNext = m_ppBins[iBin];
; 2722 : 	m_ppBins[iBin] = pNewNode;
; 2723 : 
; 2724 : 	if( (m_nElements > m_nHiRehashThreshold) && !IsLocked() )

	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN1@NewNode@23

; 2725 : 	{
; 2726 : 		Rehash( PickSize( m_nElements ) );

	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::PickSize
	push	eax
	push	esi
	call	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::Rehash
$LN1@NewNode@23:

; 2727 : 	}
; 2728 : 
; 2729 : 	return( pNewNode );
; 2730 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
__catch$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$0:

; 2711 : 	}
; 2712 : 	_ATLCATCHALL()
; 2713 : 	{
; 2714 : 		pNewNode->m_pNext = m_pFree;

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _pNewNode$[ebp]

; 2715 : 		m_pFree = pNewNode;
; 2716 : 
; 2717 : 		_ATLRETHROW;

	push	0
	mov	DWORD PTR [ecx+8], edx
	push	0
	mov	DWORD PTR [eax+44], ecx
	call	__CxxThrowException@8
$LN72@NewNode@23:
$LN69@NewNode@23:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$2:
	mov	eax, DWORD PTR _pNewNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T757175[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z:
	mov	eax, OFFSET __ehfuncinfo$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::NewNode
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$0
__tryblocktable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$5
__ehfuncinfo$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	DD	01H
	DD	FLAT:__tryblocktable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
_TEXT	SEGMENT
$T757286 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_key$ = 12						; size = 4
_pNewNode$ = 16						; size = 4
_iBin$ = 16						; size = 4
_nHash$ = 20						; size = 4
?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::NewNode, COMDAT

; 2682 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _iBin$[ebp]
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2683 : 	CNode* pNewNode;
; 2684 : 
; 2685 : 	if( m_pFree == NULL )

	cmp	DWORD PTR [esi+44], 0
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	jne	SHORT $LN12@NewNode@24

; 2686 : 	{
; 2687 : 		CAtlPlex* pPlex;
; 2688 : 		CNode* pNode;
; 2689 : 
; 2690 : 		pPlex = CAtlPlex::Create( m_pBlocks, m_nBlockSize, sizeof( CNode ) );

	mov	eax, DWORD PTR [esi+36]
	xor	ecx, ecx
	shld	ecx, eax, 4
	shl	eax, 4
	test	ecx, ecx
	ja	SHORT $LN63@NewNode@24
	jb	SHORT $LN64@NewNode@24
	cmp	eax, -1
	ja	SHORT $LN63@NewNode@24
$LN64@NewNode@24:
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, 4
	jb	SHORT $LN63@NewNode@24
	add	eax, 4
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $LN63@NewNode@24
	mov	edx, DWORD PTR [esi+40]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [esi+40], eax

; 2694 : 		}
; 2695 : 		pNode = (CNode*)pPlex->data();
; 2696 : 		pNode += m_nBlockSize-1;

	mov	ecx, DWORD PTR [esi+36]
	mov	edx, ecx
	add	edx, edx

; 2697 : 		for( int iBlock = m_nBlockSize-1; iBlock >= 0; iBlock-- )

	dec	ecx
	lea	eax, DWORD PTR [eax+edx*8-12]
	js	SHORT $LN12@NewNode@24
$LL15@NewNode@24:

; 2698 : 		{
; 2699 : 			pNode->m_pNext = m_pFree;

	mov	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [eax+8], edx

; 2700 : 			m_pFree = pNode;

	mov	DWORD PTR [esi+44], eax

; 2701 : 			pNode--;

	sub	eax, 16					; 00000010H
	dec	ecx
	jns	SHORT $LL15@NewNode@24
$LN12@NewNode@24:

; 2702 : 		}
; 2703 : 	}
; 2704 : 	ATLENSURE(m_pFree != NULL );

	mov	edi, DWORD PTR [esi+44]
	xor	eax, eax
	test	edi, edi
	setne	al
	test	eax, eax
	jne	SHORT $LN11@NewNode@24
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN70@NewNode@24:
$LN63@NewNode@24:

; 2691 : 		if( pPlex == NULL )
; 2692 : 		{
; 2693 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN71@NewNode@24:
$LN11@NewNode@24:

; 2705 : 	pNewNode = m_pFree;
; 2706 : 	m_pFree = pNewNode->m_pNext;

	mov	eax, DWORD PTR [edi+8]

; 2707 : 
; 2708 : 	_ATLTRY
; 2709 : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	DWORD PTR _pNewNode$[ebp], edi
	mov	DWORD PTR [esi+44], eax

; 2710 : 		::new( pNewNode ) CNode( key, nHash );

	mov	DWORD PTR $T757286[ebp], edi
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	edx, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	DWORD PTR [edi+12], edx
	inc	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+ebx*4]
	mov	DWORD PTR [edi+8], ecx
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [edx+ebx*4], edi
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+24]
	jbe	SHORT $LN1@NewNode@24

; 2718 : 	}
; 2719 : 	m_nElements++;
; 2720 : 
; 2721 : 	pNewNode->m_pNext = m_ppBins[iBin];
; 2722 : 	m_ppBins[iBin] = pNewNode;
; 2723 : 
; 2724 : 	if( (m_nElements > m_nHiRehashThreshold) && !IsLocked() )

	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN1@NewNode@24

; 2725 : 	{
; 2726 : 		Rehash( PickSize( m_nElements ) );

	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::PickSize
	push	eax
	push	esi
	call	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::Rehash
$LN1@NewNode@24:

; 2727 : 	}
; 2728 : 
; 2729 : 	return( pNewNode );
; 2730 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
__catch$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$0:

; 2711 : 	}
; 2712 : 	_ATLCATCHALL()
; 2713 : 	{
; 2714 : 		pNewNode->m_pNext = m_pFree;

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _pNewNode$[ebp]

; 2715 : 		m_pFree = pNewNode;
; 2716 : 
; 2717 : 		_ATLRETHROW;

	push	0
	mov	DWORD PTR [ecx+8], edx
	push	0
	mov	DWORD PTR [eax+44], ecx
	call	__CxxThrowException@8
$LN72@NewNode@24:
$LN69@NewNode@24:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$2:
	mov	eax, DWORD PTR _pNewNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T757286[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z:
	mov	eax, OFFSET __ehfuncinfo$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::NewNode
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$0
__tryblocktable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$5
__ehfuncinfo$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	DD	01H
	DD	FLAT:__tryblocktable$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
_TEXT	SEGMENT
$T757397 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_key$ = 12						; size = 4
_pNewNode$ = 16						; size = 4
_iBin$ = 16						; size = 4
_nHash$ = 20						; size = 4
?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::NewNode, COMDAT

; 2682 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _iBin$[ebp]
	push	esi
	mov	esi, DWORD PTR _this$[ebp]

; 2683 : 	CNode* pNewNode;
; 2684 : 
; 2685 : 	if( m_pFree == NULL )

	cmp	DWORD PTR [esi+44], 0
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	jne	SHORT $LN12@NewNode@25

; 2686 : 	{
; 2687 : 		CAtlPlex* pPlex;
; 2688 : 		CNode* pNode;
; 2689 : 
; 2690 : 		pPlex = CAtlPlex::Create( m_pBlocks, m_nBlockSize, sizeof( CNode ) );

	mov	eax, DWORD PTR [esi+36]
	xor	ecx, ecx
	shld	ecx, eax, 4
	shl	eax, 4
	test	ecx, ecx
	ja	SHORT $LN63@NewNode@25
	jb	SHORT $LN64@NewNode@25
	cmp	eax, -1
	ja	SHORT $LN63@NewNode@25
$LN64@NewNode@25:
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, 4
	jb	SHORT $LN63@NewNode@25
	add	eax, 4
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $LN63@NewNode@25
	mov	edx, DWORD PTR [esi+40]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [esi+40], eax

; 2694 : 		}
; 2695 : 		pNode = (CNode*)pPlex->data();
; 2696 : 		pNode += m_nBlockSize-1;

	mov	ecx, DWORD PTR [esi+36]
	mov	edx, ecx
	add	edx, edx

; 2697 : 		for( int iBlock = m_nBlockSize-1; iBlock >= 0; iBlock-- )

	dec	ecx
	lea	eax, DWORD PTR [eax+edx*8-12]
	js	SHORT $LN12@NewNode@25
$LL15@NewNode@25:

; 2698 : 		{
; 2699 : 			pNode->m_pNext = m_pFree;

	mov	edx, DWORD PTR [esi+44]
	mov	DWORD PTR [eax+8], edx

; 2700 : 			m_pFree = pNode;

	mov	DWORD PTR [esi+44], eax

; 2701 : 			pNode--;

	sub	eax, 16					; 00000010H
	dec	ecx
	jns	SHORT $LL15@NewNode@25
$LN12@NewNode@25:

; 2702 : 		}
; 2703 : 	}
; 2704 : 	ATLENSURE(m_pFree != NULL );

	mov	edi, DWORD PTR [esi+44]
	xor	eax, eax
	test	edi, edi
	setne	al
	test	eax, eax
	jne	SHORT $LN11@NewNode@25
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN70@NewNode@25:
$LN63@NewNode@25:

; 2691 : 		if( pPlex == NULL )
; 2692 : 		{
; 2693 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN71@NewNode@25:
$LN11@NewNode@25:

; 2705 : 	pNewNode = m_pFree;
; 2706 : 	m_pFree = pNewNode->m_pNext;

	mov	eax, DWORD PTR [edi+8]

; 2707 : 
; 2708 : 	_ATLTRY
; 2709 : 	{

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	DWORD PTR _pNewNode$[ebp], edi
	mov	DWORD PTR [esi+44], eax

; 2710 : 		::new( pNewNode ) CNode( key, nHash );

	mov	DWORD PTR $T757397[ebp], edi
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	edx, DWORD PTR _nHash$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	DWORD PTR [edi+12], edx
	inc	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+ebx*4]
	mov	DWORD PTR [edi+8], ecx
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [edx+ebx*4], edi
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, DWORD PTR [esi+24]
	jbe	SHORT $LN1@NewNode@25

; 2718 : 	}
; 2719 : 	m_nElements++;
; 2720 : 
; 2721 : 	pNewNode->m_pNext = m_ppBins[iBin];
; 2722 : 	m_ppBins[iBin] = pNewNode;
; 2723 : 
; 2724 : 	if( (m_nElements > m_nHiRehashThreshold) && !IsLocked() )

	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN1@NewNode@25

; 2725 : 	{
; 2726 : 		Rehash( PickSize( m_nElements ) );

	mov	ecx, esi
	call	?PickSize@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::PickSize
	push	eax
	push	esi
	call	?Rehash@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEXI@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::Rehash
$LN1@NewNode@25:

; 2727 : 	}
; 2728 : 
; 2729 : 	return( pNewNode );
; 2730 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
__catch$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$0:

; 2711 : 	}
; 2712 : 	_ATLCATCHALL()
; 2713 : 	{
; 2714 : 		pNewNode->m_pNext = m_pFree;

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _pNewNode$[ebp]

; 2715 : 		m_pFree = pNewNode;
; 2716 : 
; 2717 : 		_ATLRETHROW;

	push	0
	mov	DWORD PTR [ecx+8], edx
	push	0
	mov	DWORD PTR [eax+44], ecx
	call	__CxxThrowException@8
$LN72@NewNode@25:
$LN69@NewNode@25:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z$2:
	mov	eax, DWORD PTR _pNewNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T757397[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z:
	mov	eax, OFFSET __ehfuncinfo$?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::NewNode
; Function compile flags: /Ogtp
;	COMDAT ?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_iBin$ = 12						; size = 4
_nHash$ = 16						; size = 4
?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CreateNode, COMDAT
; _this$ = esi

; 2452 : {

	push	ebp
	mov	ebp, esp

; 2453 : 	CNode* pNode;
; 2454 : 
; 2455 : 	if( m_ppBins == NULL )

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN1@CreateNode@5

; 2456 : 	{
; 2457 : 		bool bSuccess;
; 2458 : 
; 2459 : 		bSuccess = InitHashTable( m_nBins );

	mov	eax, DWORD PTR [esi+8]
	push	1
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::InitHashTable

; 2460 : 		if( !bSuccess )

	test	al, al
	jne	SHORT $LN1@CreateNode@5

; 2461 : 		{
; 2462 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN6@CreateNode@5:
$LN1@CreateNode@5:

; 2463 : 		}
; 2464 : 	}
; 2465 : 
; 2466 : 	pNode = NewNode( key, iBin, nHash );

	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	edx, DWORD PTR _iBin$[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	push	ecx
	push	edx
	push	eax
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::NewNode

; 2467 : 
; 2468 : 	return( pNode );
; 2469 : }

	pop	ebp
	ret	12					; 0000000cH
$LN5@CreateNode@5:
?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::CreateNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_iBin$ = 12						; size = 4
_nHash$ = 16						; size = 4
?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CreateNode, COMDAT
; _this$ = esi

; 2452 : {

	push	ebp
	mov	ebp, esp

; 2453 : 	CNode* pNode;
; 2454 : 
; 2455 : 	if( m_ppBins == NULL )

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN1@CreateNode@6

; 2456 : 	{
; 2457 : 		bool bSuccess;
; 2458 : 
; 2459 : 		bSuccess = InitHashTable( m_nBins );

	mov	eax, DWORD PTR [esi+8]
	push	1
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::InitHashTable

; 2460 : 		if( !bSuccess )

	test	al, al
	jne	SHORT $LN1@CreateNode@6

; 2461 : 		{
; 2462 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN6@CreateNode@6:
$LN1@CreateNode@6:

; 2463 : 		}
; 2464 : 	}
; 2465 : 
; 2466 : 	pNode = NewNode( key, iBin, nHash );

	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	edx, DWORD PTR _iBin$[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	push	ecx
	push	edx
	push	eax
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::NewNode

; 2467 : 
; 2468 : 	return( pNode );
; 2469 : }

	pop	ebp
	ret	12					; 0000000cH
$LN5@CreateNode@6:
?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::CreateNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_iBin$ = 12						; size = 4
_nHash$ = 16						; size = 4
?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CreateNode, COMDAT
; _this$ = esi

; 2452 : {

	push	ebp
	mov	ebp, esp

; 2453 : 	CNode* pNode;
; 2454 : 
; 2455 : 	if( m_ppBins == NULL )

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN1@CreateNode@7

; 2456 : 	{
; 2457 : 		bool bSuccess;
; 2458 : 
; 2459 : 		bSuccess = InitHashTable( m_nBins );

	mov	eax, DWORD PTR [esi+8]
	push	1
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::InitHashTable

; 2460 : 		if( !bSuccess )

	test	al, al
	jne	SHORT $LN1@CreateNode@7

; 2461 : 		{
; 2462 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN6@CreateNode@7:
$LN1@CreateNode@7:

; 2463 : 		}
; 2464 : 	}
; 2465 : 
; 2466 : 	pNode = NewNode( key, iBin, nHash );

	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	edx, DWORD PTR _iBin$[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	push	ecx
	push	edx
	push	eax
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::NewNode

; 2467 : 
; 2468 : 	return( pNode );
; 2469 : }

	pop	ebp
	ret	12					; 0000000cH
$LN5@CreateNode@7:
?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::CreateNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_iBin$ = 12						; size = 4
_nHash$ = 16						; size = 4
?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CreateNode, COMDAT
; _this$ = esi

; 2452 : {

	push	ebp
	mov	ebp, esp

; 2453 : 	CNode* pNode;
; 2454 : 
; 2455 : 	if( m_ppBins == NULL )

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN1@CreateNode@8

; 2456 : 	{
; 2457 : 		bool bSuccess;
; 2458 : 
; 2459 : 		bSuccess = InitHashTable( m_nBins );

	mov	eax, DWORD PTR [esi+8]
	push	1
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::InitHashTable

; 2460 : 		if( !bSuccess )

	test	al, al
	jne	SHORT $LN1@CreateNode@8

; 2461 : 		{
; 2462 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN6@CreateNode@8:
$LN1@CreateNode@8:

; 2463 : 		}
; 2464 : 	}
; 2465 : 
; 2466 : 	pNode = NewNode( key, iBin, nHash );

	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	edx, DWORD PTR _iBin$[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	push	ecx
	push	edx
	push	eax
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::NewNode

; 2467 : 
; 2468 : 	return( pNode );
; 2469 : }

	pop	ebp
	ret	12					; 0000000cH
$LN5@CreateNode@8:
?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::CreateNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_iBin$ = 12						; size = 4
_nHash$ = 16						; size = 4
?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CreateNode, COMDAT
; _this$ = esi

; 2452 : {

	push	ebp
	mov	ebp, esp

; 2453 : 	CNode* pNode;
; 2454 : 
; 2455 : 	if( m_ppBins == NULL )

	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN1@CreateNode@9

; 2456 : 	{
; 2457 : 		bool bSuccess;
; 2458 : 
; 2459 : 		bSuccess = InitHashTable( m_nBins );

	mov	eax, DWORD PTR [esi+8]
	push	1
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::InitHashTable

; 2460 : 		if( !bSuccess )

	test	al, al
	jne	SHORT $LN1@CreateNode@9

; 2461 : 		{
; 2462 : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN6@CreateNode@9:
$LN1@CreateNode@9:

; 2463 : 		}
; 2464 : 	}
; 2465 : 
; 2466 : 	pNode = NewNode( key, iBin, nHash );

	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	edx, DWORD PTR _iBin$[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	push	ecx
	push	edx
	push	eax
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::NewNode

; 2467 : 
; 2468 : 	return( pNode );
; 2469 : }

	pop	ebp
	ret	12					; 0000000cH
$LN5@CreateNode@9:
?CreateNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::CreateNode
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEAA_NPB_W@Z
_TEXT	SEGMENT
_pPrev$ = -12						; size = 4
_iBin$ = -8						; size = 4
_nHash$ = -4						; size = 4
??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEAA_NPB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::operator[], COMDAT
; _this$ = esi
; _key$ = edi

; 2311 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2312 : 	CNode* pNode;
; 2313 : 	UINT iBin;
; 2314 : 	UINT nHash;
; 2315 : 	CNode* pPrev;
; 2316 : 
; 2317 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::GetNode

; 2318 : 	if( pNode == NULL )

	test	eax, eax
	jne	SHORT $LN6@operator@41

; 2319 : 	{
; 2320 : 		pNode = CreateNode( key, iBin, nHash );

	cmp	DWORD PTR [esi], eax
	jne	SHORT $LN4@operator@41
	mov	eax, DWORD PTR [esi+8]
	push	1
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::InitHashTable
	test	al, al
	jne	SHORT $LN4@operator@41
	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN10@operator@41:
$LN4@operator@41:
	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	edx, DWORD PTR _iBin$[ebp]
	push	ecx
	push	edx
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::NewNode
$LN6@operator@41:

; 2321 : 	}
; 2322 : 
; 2323 : 	return( pNode->m_value );

	add	eax, 4

; 2324 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@operator@41:
??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAEAA_NPB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::operator[]
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?SetAt@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAU__POSITION@@PB_WABVSubRect@ssf@@@Z
_TEXT	SEGMENT
_pPrev$ = -8						; size = 4
_iBin$ = -4						; size = 4
_nHash$ = 8						; size = 4
_key$ = 8						; size = 4
?SetAt@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAU__POSITION@@PB_WABVSubRect@ssf@@@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::SetAt, COMDAT
; _this$ = edi
; _value$ = esi

; 2495 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _key$[ebp]

; 2496 : 	CNode* pNode;
; 2497 : 	UINT iBin;
; 2498 : 	UINT nHash;
; 2499 : 	CNode* pPrev;
; 2500 : 
; 2501 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	ebx
	mov	eax, edi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNode

; 2502 : 	if( pNode == NULL )

	test	eax, eax
	jne	SHORT $LN3@SetAt

; 2503 : 	{
; 2504 : 		pNode = CreateNode( key, iBin, nHash );

	cmp	DWORD PTR [edi], eax
	jne	SHORT $LN10@SetAt
	mov	eax, DWORD PTR [edi+8]
	push	1
	push	eax
	push	edi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::InitHashTable
	test	al, al
	jne	SHORT $LN10@SetAt
	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN17@SetAt:
$LN10@SetAt:
	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	edx, DWORD PTR _iBin$[ebp]
	push	ecx
	push	edx
	push	ebx
	push	edi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::NewNode

; 2505 : 		_ATLTRY
; 2506 : 		{
; 2507 : 			pNode->m_value = value;

	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax+20], ecx
	pop	ebx

; 2518 : 	}
; 2519 : 
; 2520 : 	return( POSITION( pNode ) );
; 2521 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN3@SetAt:

; 2508 : 		}
; 2509 : 		_ATLCATCHALL()
; 2510 : 		{
; 2511 : 			RemoveAtPos( POSITION( pNode ) );
; 2512 : 			_ATLRETHROW;
; 2513 : 		}
; 2514 : 	}
; 2515 : 	else
; 2516 : 	{
; 2517 : 		pNode->m_value = value;

	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax+20], edx
	pop	ebx

; 2518 : 	}
; 2519 : 
; 2520 : 	return( POSITION( pNode ) );
; 2521 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN16@SetAt:
?SetAt@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAU__POSITION@@PB_WABVSubRect@ssf@@@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::SetAt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEAAPAVRenderedSubtitle@ssf@@PB_W@Z
_TEXT	SEGMENT
_pPrev$ = -12						; size = 4
_iBin$ = -8						; size = 4
_nHash$ = -4						; size = 4
??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEAAPAVRenderedSubtitle@ssf@@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::operator[], COMDAT
; _this$ = esi
; _key$ = edi

; 2311 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2312 : 	CNode* pNode;
; 2313 : 	UINT iBin;
; 2314 : 	UINT nHash;
; 2315 : 	CNode* pPrev;
; 2316 : 
; 2317 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode

; 2318 : 	if( pNode == NULL )

	test	eax, eax
	jne	SHORT $LN6@operator@42

; 2319 : 	{
; 2320 : 		pNode = CreateNode( key, iBin, nHash );

	cmp	DWORD PTR [esi], eax
	jne	SHORT $LN4@operator@42
	mov	eax, DWORD PTR [esi+8]
	push	1
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::InitHashTable
	test	al, al
	jne	SHORT $LN4@operator@42
	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN10@operator@42:
$LN4@operator@42:
	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	edx, DWORD PTR _iBin$[ebp]
	push	ecx
	push	edx
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::NewNode
$LN6@operator@42:

; 2321 : 	}
; 2322 : 
; 2323 : 	return( pNode->m_value );

	add	eax, 4

; 2324 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@operator@42:
??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAEAAPAVRenderedSubtitle@ssf@@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::operator[]
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEAAPAVGlyphPath@ssf@@PB_W@Z
_TEXT	SEGMENT
_pPrev$ = -12						; size = 4
_iBin$ = -8						; size = 4
_nHash$ = -4						; size = 4
??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEAAPAVGlyphPath@ssf@@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::operator[], COMDAT
; _this$ = esi
; _key$ = edi

; 2311 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2312 : 	CNode* pNode;
; 2313 : 	UINT iBin;
; 2314 : 	UINT nHash;
; 2315 : 	CNode* pPrev;
; 2316 : 
; 2317 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode

; 2318 : 	if( pNode == NULL )

	test	eax, eax
	jne	SHORT $LN6@operator@43

; 2319 : 	{
; 2320 : 		pNode = CreateNode( key, iBin, nHash );

	cmp	DWORD PTR [esi], eax
	jne	SHORT $LN4@operator@43
	mov	eax, DWORD PTR [esi+8]
	push	1
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::InitHashTable
	test	al, al
	jne	SHORT $LN4@operator@43
	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN10@operator@43:
$LN4@operator@43:
	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	edx, DWORD PTR _iBin$[ebp]
	push	ecx
	push	edx
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::NewNode
$LN6@operator@43:

; 2321 : 	}
; 2322 : 
; 2323 : 	return( pNode->m_value );

	add	eax, 4

; 2324 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@operator@43:
??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAEAAPAVGlyphPath@ssf@@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::operator[]
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEAAPAVFontWrapper@ssf@@PB_W@Z
_TEXT	SEGMENT
_pPrev$ = -12						; size = 4
_iBin$ = -8						; size = 4
_nHash$ = -4						; size = 4
??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEAAPAVFontWrapper@ssf@@PB_W@Z PROC ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::operator[], COMDAT
; _this$ = esi
; _key$ = edi

; 2311 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2312 : 	CNode* pNode;
; 2313 : 	UINT iBin;
; 2314 : 	UINT nHash;
; 2315 : 	CNode* pPrev;
; 2316 : 
; 2317 : 	pNode = GetNode( key, iBin, nHash, pPrev );

	lea	eax, DWORD PTR _pPrev$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nHash$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$[ebp]
	push	edx
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode

; 2318 : 	if( pNode == NULL )

	test	eax, eax
	jne	SHORT $LN6@operator@44

; 2319 : 	{
; 2320 : 		pNode = CreateNode( key, iBin, nHash );

	cmp	DWORD PTR [esi], eax
	jne	SHORT $LN4@operator@44
	mov	eax, DWORD PTR [esi+8]
	push	1
	push	eax
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::InitHashTable
	test	al, al
	jne	SHORT $LN4@operator@44
	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN10@operator@44:
$LN4@operator@44:
	mov	ecx, DWORD PTR _nHash$[ebp]
	mov	edx, DWORD PTR _iBin$[ebp]
	push	ecx
	push	edx
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::NewNode
$LN6@operator@44:

; 2321 : 	}
; 2322 : 
; 2323 : 	return( pNode->m_value );

	add	eax, 4

; 2324 : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@operator@44:
??A?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAEAAPAVFontWrapper@ssf@@PB_W@Z ENDP ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::operator[]
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ$0
__ehfuncinfo$?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
xdata$x	ENDS
;	COMDAT ?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ
_TEXT	SEGMENT
_iBin$757681 = -40					; size = 4
_nHash$757682 = -36					; size = 4
_pPrev$757632 = -32					; size = 4
_iBin$757630 = -28					; size = 4
_nHash$757631 = -24					; size = 4
_key$158947 = -20					; size = 4
_pPrev$757683 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ PROC ; ssf::Cache<ssf::RenderedSubtitle *>::Flush, COMDAT

; 60   : 		{

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0

; 61   : 			while(m_objs.GetCount() > m_limit)

	mov	ecx, DWORD PTR _this$[ebp]
	push	-1
	push	__ehhandler$?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+60]
	sub	esp, 28					; 0000001cH
	cmp	eax, DWORD PTR [ecx+76]
	jbe	$LN1@Flush
	push	ebx
	push	esi
	push	edi
	lea	esi, DWORD PTR [ecx+4]
	xor	ebx, ebx
	jmp	SHORT $LN2@Flush
$LL61@Flush:
	mov	ecx, eax
$LN2@Flush:

; 62   : 			{
; 63   : 				CStringW key = m_objs.RemoveHead();

	lea	eax, DWORD PTR _key$158947[ebp]
	push	eax
	lea	eax, DWORD PTR [ecx+52]
	call	?RemoveHead@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@2@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveHead

; 64   : 				ASSERT(m_key2obj.Lookup(key));
; 65   : 				delete m_key2obj[key];

	lea	ecx, DWORD PTR _pPrev$757632[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$757631[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$757630[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	edi, DWORD PTR _key$158947[ebp]
	push	eax
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
	cmp	eax, ebx
	jne	SHORT $LN17@Flush
	cmp	DWORD PTR [esi], ebx
	jne	SHORT $LN15@Flush
	mov	ecx, DWORD PTR [esi+8]
	push	1
	push	ecx
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::InitHashTable
	cmp	al, bl
	je	$LN59@Flush
$LN15@Flush:
	mov	edx, DWORD PTR _nHash$757631[ebp]
	mov	eax, DWORD PTR _iBin$757630[ebp]
	push	edx
	push	eax
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::NewNode
$LN17@Flush:
	mov	eax, DWORD PTR [eax+4]
	cmp	eax, ebx
	je	SHORT $LN5@Flush
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN5@Flush:

; 66   : 				m_key2obj.RemoveKey(key);

	lea	ecx, DWORD PTR _pPrev$757683[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$757682[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$757681[ebp]
	push	eax
	push	edi
	mov	eax, esi
	mov	DWORD PTR _pPrev$757683[ebp], ebx
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
	mov	ecx, eax
	cmp	ecx, ebx
	je	SHORT $LN44@Flush
	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR [esi+8]
	mov	eax, DWORD PTR _pPrev$757683[ebp]
	cmp	eax, ebx
	jne	SHORT $LN33@Flush
	mov	ebx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax+edx*4], ebx
	xor	ebx, ebx
	jmp	SHORT $LN26@Flush
$LN33@Flush:
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
$LN26@Flush:
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::FreeNode
$LN44@Flush:

; 67   : 			}

	lea	eax, DWORD PTR [edi-16]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN55@Flush
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN55@Flush:

; 61   : 			while(m_objs.GetCount() > m_limit)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	cmp	ecx, DWORD PTR [eax+76]
	ja	$LL61@Flush
	pop	edi
	pop	esi
	pop	ebx
$LN1@Flush:

; 68   : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN59@Flush:

; 64   : 				ASSERT(m_key2obj.Lookup(key));
; 65   : 				delete m_key2obj[key];

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN64@Flush:
$LN63@Flush:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ$0:
	lea	ecx, DWORD PTR _key$158947[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__ehhandler$?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ ENDP ; ssf::Cache<ssf::RenderedSubtitle *>::Flush
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ$0
__ehfuncinfo$?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
xdata$x	ENDS
;	COMDAT ?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ
_TEXT	SEGMENT
_iBin$757855 = -40					; size = 4
_nHash$757856 = -36					; size = 4
_pPrev$757788 = -32					; size = 4
_iBin$757786 = -28					; size = 4
_nHash$757787 = -24					; size = 4
_key$158927 = -20					; size = 4
_pPrev$757857 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ PROC	; ssf::Cache<ssf::GlyphPath *>::Flush, COMDAT

; 60   : 		{

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0

; 61   : 			while(m_objs.GetCount() > m_limit)

	mov	ecx, DWORD PTR _this$[ebp]
	push	-1
	push	__ehhandler$?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+60]
	sub	esp, 28					; 0000001cH
	cmp	eax, DWORD PTR [ecx+76]
	jbe	$LN1@Flush@2
	push	ebx
	push	esi
	push	edi
	lea	esi, DWORD PTR [ecx+4]
	xor	ebx, ebx
	jmp	SHORT $LN2@Flush@2
$LL61@Flush@2:
	mov	ecx, eax
$LN2@Flush@2:

; 62   : 			{
; 63   : 				CStringW key = m_objs.RemoveHead();

	lea	eax, DWORD PTR _key$158927[ebp]
	push	eax
	lea	eax, DWORD PTR [ecx+52]
	call	?RemoveHead@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@2@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveHead

; 64   : 				ASSERT(m_key2obj.Lookup(key));
; 65   : 				delete m_key2obj[key];

	lea	ecx, DWORD PTR _pPrev$757788[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$757787[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$757786[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	edi, DWORD PTR _key$158927[ebp]
	push	eax
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode
	cmp	eax, ebx
	jne	SHORT $LN17@Flush@2
	cmp	DWORD PTR [esi], ebx
	jne	SHORT $LN15@Flush@2
	mov	ecx, DWORD PTR [esi+8]
	push	1
	push	ecx
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::InitHashTable
	cmp	al, bl
	je	$LN59@Flush@2
$LN15@Flush@2:
	mov	edx, DWORD PTR _nHash$757787[ebp]
	mov	eax, DWORD PTR _iBin$757786[ebp]
	push	edx
	push	eax
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::NewNode
$LN17@Flush@2:
	mov	eax, DWORD PTR [eax+4]
	cmp	eax, ebx
	je	SHORT $LN5@Flush@2
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN5@Flush@2:

; 66   : 				m_key2obj.RemoveKey(key);

	lea	ecx, DWORD PTR _pPrev$757857[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$757856[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$757855[ebp]
	push	eax
	push	edi
	mov	eax, esi
	mov	DWORD PTR _pPrev$757857[ebp], ebx
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode
	mov	ecx, eax
	cmp	ecx, ebx
	je	SHORT $LN44@Flush@2
	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR [esi+8]
	mov	eax, DWORD PTR _pPrev$757857[ebp]
	cmp	eax, ebx
	jne	SHORT $LN33@Flush@2
	mov	ebx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax+edx*4], ebx
	xor	ebx, ebx
	jmp	SHORT $LN26@Flush@2
$LN33@Flush@2:
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
$LN26@Flush@2:
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::FreeNode
$LN44@Flush@2:

; 67   : 			}

	lea	eax, DWORD PTR [edi-16]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN55@Flush@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN55@Flush@2:

; 61   : 			while(m_objs.GetCount() > m_limit)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	cmp	ecx, DWORD PTR [eax+76]
	ja	$LL61@Flush@2
	pop	edi
	pop	esi
	pop	ebx
$LN1@Flush@2:

; 68   : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN59@Flush@2:

; 64   : 				ASSERT(m_key2obj.Lookup(key));
; 65   : 				delete m_key2obj[key];

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN64@Flush@2:
$LN63@Flush@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ$0:
	lea	ecx, DWORD PTR _key$158927[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__ehhandler$?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ ENDP	; ssf::Cache<ssf::GlyphPath *>::Flush
; Function compile flags: /Ogtp
;	COMDAT ?Invalidate@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z
_TEXT	SEGMENT
_pPrev$757945 = -12					; size = 4
_iBin$757913 = -12					; size = 4
_iBin$757943 = -8					; size = 4
_pPrev$757916 = -8					; size = 4
_nHash$757944 = -4					; size = 4
_nHash$757914 = -4					; size = 4
?Invalidate@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z PROC ; ssf::Cache<ssf::RenderedSubtitle *>::Invalidate, COMDAT
; _this$ = ecx
; _key$ = eax

; 76   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi

; 77   : 			T val;
; 78   : 			if(m_key2obj.Lookup(key, val))

	lea	esi, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR _pPrev$757916[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$757914[ebp]
	mov	edi, eax
	mov	eax, DWORD PTR [edi]
	push	edx
	lea	ecx, DWORD PTR _iBin$757913[ebp]
	push	ecx
	push	eax
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
	test	eax, eax
	je	SHORT $LN1@Invalidate
	mov	eax, DWORD PTR [eax+4]

; 79   : 			{
; 80   : 				delete val;

	test	eax, eax
	je	SHORT $LN4@Invalidate
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN4@Invalidate:

; 81   : 				m_key2obj[key] = NULL;

	mov	edi, DWORD PTR [edi]
	lea	ecx, DWORD PTR _pPrev$757945[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$757944[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$757943[ebp]
	push	eax
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
	test	eax, eax
	jne	SHORT $LN18@Invalidate
	cmp	DWORD PTR [esi], eax
	jne	SHORT $LN16@Invalidate
	mov	ecx, DWORD PTR [esi+8]
	push	1
	push	ecx
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::InitHashTable
	test	al, al
	jne	SHORT $LN16@Invalidate
	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN24@Invalidate:
$LN16@Invalidate:
	mov	edx, DWORD PTR _nHash$757944[ebp]
	mov	eax, DWORD PTR _iBin$757943[ebp]
	push	edx
	push	eax
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::NewNode
$LN18@Invalidate:
	mov	DWORD PTR [eax+4], 0
$LN1@Invalidate:
	pop	edi
	pop	esi

; 82   : 			}
; 83   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
$LN23@Invalidate:
?Invalidate@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ENDP ; ssf::Cache<ssf::RenderedSubtitle *>::Invalidate
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Add@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVRenderedSubtitle@2@_N@Z
_TEXT	SEGMENT
_pPrev$757996 = -8					; size = 4
_iBin$757966 = -8					; size = 4
_iBin$757994 = -4					; size = 4
_nHash$757967 = -4					; size = 4
_nHash$757995 = 8					; size = 4
_pPrev$757969 = 8					; size = 4
_this$ = 8						; size = 4
_obj$ = 12						; size = 4
?Add@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVRenderedSubtitle@2@_N@Z PROC ; ssf::Cache<ssf::RenderedSubtitle *>::Add, COMDAT
; _key$ = eax

; 50   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	push	edi

; 51   : 			if(StringMapW<T>::CPair* p = m_key2obj.Lookup(key)) delete p->m_value;

	lea	ecx, DWORD PTR _pPrev$757969[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$757967[ebp]
	mov	edi, eax
	mov	eax, DWORD PTR [edi]
	push	edx
	lea	ecx, DWORD PTR _iBin$757966[ebp]
	push	ecx
	lea	esi, DWORD PTR [ebx+4]
	push	eax
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
	test	eax, eax
	je	SHORT $LN3@Add@5
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN2@Add@5
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax

; 52   : 			else m_objs.AddTail(key);

	jmp	SHORT $LN2@Add@5
$LN3@Add@5:
	push	edi
	lea	ecx, DWORD PTR [ebx+52]
	call	?AddTail@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEPAU__POSITION@@ABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@2@@Z ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::AddTail
$LN2@Add@5:

; 53   : 
; 54   : 			m_key2obj[key] = obj;

	mov	edi, DWORD PTR [edi]
	lea	ecx, DWORD PTR _pPrev$757996[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$757995[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$757994[ebp]
	push	eax
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
	test	eax, eax
	jne	SHORT $LN19@Add@5
	cmp	DWORD PTR [esi], eax
	jne	SHORT $LN17@Add@5
	mov	ecx, DWORD PTR [esi+8]
	push	1
	push	ecx
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::InitHashTable
	test	al, al
	jne	SHORT $LN17@Add@5
	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN24@Add@5:
$LN17@Add@5:
	mov	edx, DWORD PTR _nHash$757995[ebp]
	mov	eax, DWORD PTR _iBin$757994[ebp]
	push	edx
	push	eax
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::NewNode
$LN19@Add@5:
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]

; 55   : 
; 56   : 			if(fFlush) Flush();

	push	ebx
	mov	DWORD PTR [eax+4], edx
	call	?Flush@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::RenderedSubtitle *>::Flush
	pop	edi
	pop	esi
	pop	ebx

; 57   : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN23@Add@5:
?Add@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVRenderedSubtitle@2@_N@Z ENDP ; ssf::Cache<ssf::RenderedSubtitle *>::Add
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Add@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVGlyphPath@2@_N@Z
_TEXT	SEGMENT
_pPrev$758046 = -8					; size = 4
_iBin$758016 = -8					; size = 4
_iBin$758044 = -4					; size = 4
_nHash$758017 = -4					; size = 4
_nHash$758045 = 8					; size = 4
_pPrev$758019 = 8					; size = 4
_this$ = 8						; size = 4
_obj$ = 12						; size = 4
?Add@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVGlyphPath@2@_N@Z PROC ; ssf::Cache<ssf::GlyphPath *>::Add, COMDAT
; _key$ = eax

; 50   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	push	edi

; 51   : 			if(StringMapW<T>::CPair* p = m_key2obj.Lookup(key)) delete p->m_value;

	lea	ecx, DWORD PTR _pPrev$758019[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$758017[ebp]
	mov	edi, eax
	mov	eax, DWORD PTR [edi]
	push	edx
	lea	ecx, DWORD PTR _iBin$758016[ebp]
	push	ecx
	lea	esi, DWORD PTR [ebx+4]
	push	eax
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode
	test	eax, eax
	je	SHORT $LN3@Add@6
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN2@Add@6
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax

; 52   : 			else m_objs.AddTail(key);

	jmp	SHORT $LN2@Add@6
$LN3@Add@6:
	push	edi
	lea	ecx, DWORD PTR [ebx+52]
	call	?AddTail@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEPAU__POSITION@@ABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@2@@Z ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::AddTail
$LN2@Add@6:

; 53   : 
; 54   : 			m_key2obj[key] = obj;

	mov	edi, DWORD PTR [edi]
	lea	ecx, DWORD PTR _pPrev$758046[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$758045[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$758044[ebp]
	push	eax
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode
	test	eax, eax
	jne	SHORT $LN19@Add@6
	cmp	DWORD PTR [esi], eax
	jne	SHORT $LN17@Add@6
	mov	ecx, DWORD PTR [esi+8]
	push	1
	push	ecx
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::InitHashTable
	test	al, al
	jne	SHORT $LN17@Add@6
	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN24@Add@6:
$LN17@Add@6:
	mov	edx, DWORD PTR _nHash$758045[ebp]
	mov	eax, DWORD PTR _iBin$758044[ebp]
	push	edx
	push	eax
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::NewNode
$LN19@Add@6:
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]

; 55   : 
; 56   : 			if(fFlush) Flush();

	push	ebx
	mov	DWORD PTR [eax+4], edx
	call	?Flush@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::GlyphPath *>::Flush
	pop	edi
	pop	esi
	pop	ebx

; 57   : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN23@Add@6:
?Add@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVGlyphPath@2@_N@Z ENDP ; ssf::Cache<ssf::GlyphPath *>::Add
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ$0
__ehfuncinfo$?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.h
xdata$x	ENDS
;	COMDAT ?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ
_TEXT	SEGMENT
_iBin$758157 = -40					; size = 4
_nHash$758158 = -36					; size = 4
_pPrev$758090 = -32					; size = 4
_iBin$758088 = -28					; size = 4
_nHash$758089 = -24					; size = 4
_key$158712 = -20					; size = 4
_pPrev$758159 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ PROC	; ssf::Cache<ssf::FontWrapper *>::Flush, COMDAT

; 60   : 		{

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0

; 61   : 			while(m_objs.GetCount() > m_limit)

	mov	ecx, DWORD PTR _this$[ebp]
	push	-1
	push	__ehhandler$?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+60]
	sub	esp, 28					; 0000001cH
	cmp	eax, DWORD PTR [ecx+76]
	jbe	$LN1@Flush@3
	push	ebx
	push	esi
	push	edi
	lea	esi, DWORD PTR [ecx+4]
	xor	ebx, ebx
	jmp	SHORT $LN2@Flush@3
$LL61@Flush@3:
	mov	ecx, eax
$LN2@Flush@3:

; 62   : 			{
; 63   : 				CStringW key = m_objs.RemoveHead();

	lea	eax, DWORD PTR _key$158712[ebp]
	push	eax
	lea	eax, DWORD PTR [ecx+52]
	call	?RemoveHead@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAE?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@2@XZ ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::RemoveHead

; 64   : 				ASSERT(m_key2obj.Lookup(key));
; 65   : 				delete m_key2obj[key];

	lea	ecx, DWORD PTR _pPrev$758090[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$758089[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$758088[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	edi, DWORD PTR _key$158712[ebp]
	push	eax
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode
	cmp	eax, ebx
	jne	SHORT $LN17@Flush@3
	cmp	DWORD PTR [esi], ebx
	jne	SHORT $LN15@Flush@3
	mov	ecx, DWORD PTR [esi+8]
	push	1
	push	ecx
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::InitHashTable
	cmp	al, bl
	je	$LN59@Flush@3
$LN15@Flush@3:
	mov	edx, DWORD PTR _nHash$758089[ebp]
	mov	eax, DWORD PTR _iBin$758088[ebp]
	push	edx
	push	eax
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::NewNode
$LN17@Flush@3:
	mov	eax, DWORD PTR [eax+4]
	cmp	eax, ebx
	je	SHORT $LN5@Flush@3
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN5@Flush@3:

; 66   : 				m_key2obj.RemoveKey(key);

	lea	ecx, DWORD PTR _pPrev$758159[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$758158[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$758157[ebp]
	push	eax
	push	edi
	mov	eax, esi
	mov	DWORD PTR _pPrev$758159[ebp], ebx
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode
	mov	ecx, eax
	cmp	ecx, ebx
	je	SHORT $LN44@Flush@3
	mov	eax, DWORD PTR [ecx+12]
	xor	edx, edx
	div	DWORD PTR [esi+8]
	mov	eax, DWORD PTR _pPrev$758159[ebp]
	cmp	eax, ebx
	jne	SHORT $LN33@Flush@3
	mov	ebx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax+edx*4], ebx
	xor	ebx, ebx
	jmp	SHORT $LN26@Flush@3
$LN33@Flush@3:
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
$LN26@Flush@3:
	mov	eax, ecx
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::FreeNode
$LN44@Flush@3:

; 67   : 			}

	lea	eax, DWORD PTR [edi-16]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN55@Flush@3
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN55@Flush@3:

; 61   : 			while(m_objs.GetCount() > m_limit)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	cmp	ecx, DWORD PTR [eax+76]
	ja	$LL61@Flush@3
	pop	edi
	pop	esi
	pop	ebx
$LN1@Flush@3:

; 68   : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN59@Flush@3:

; 64   : 				ASSERT(m_key2obj.Lookup(key));
; 65   : 				delete m_key2obj[key];

	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN64@Flush@3:
$LN63@Flush@3:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ$0:
	lea	ecx, DWORD PTR _key$158712[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__ehhandler$?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ ENDP	; ssf::Cache<ssf::FontWrapper *>::Flush
; Function compile flags: /Ogtp
;	COMDAT ?Add@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVFontWrapper@2@_N@Z
_TEXT	SEGMENT
_pPrev$758245 = -8					; size = 4
_iBin$758215 = -8					; size = 4
_iBin$758243 = -4					; size = 4
_nHash$758216 = -4					; size = 4
_nHash$758244 = 8					; size = 4
_pPrev$758218 = 8					; size = 4
_this$ = 8						; size = 4
_obj$ = 12						; size = 4
?Add@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVFontWrapper@2@_N@Z PROC ; ssf::Cache<ssf::FontWrapper *>::Add, COMDAT
; _key$ = eax

; 50   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	mov	ebx, DWORD PTR _this$[ebp]
	push	esi
	push	edi

; 51   : 			if(StringMapW<T>::CPair* p = m_key2obj.Lookup(key)) delete p->m_value;

	lea	ecx, DWORD PTR _pPrev$758218[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$758216[ebp]
	mov	edi, eax
	mov	eax, DWORD PTR [edi]
	push	edx
	lea	ecx, DWORD PTR _iBin$758215[ebp]
	push	ecx
	lea	esi, DWORD PTR [ebx+4]
	push	eax
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode
	test	eax, eax
	je	SHORT $LN3@Add@7
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN23@Add@7
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax

; 52   : 			else m_objs.AddTail(key);

	jmp	SHORT $LN23@Add@7
$LN3@Add@7:
	push	edi
	lea	ecx, DWORD PTR [ebx+52]
	call	?AddTail@?$CAtlList@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@V?$CElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@@ATL@@QAEPAU__POSITION@@ABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@2@@Z ; ATL::CAtlList<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ATL::CElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > > >::AddTail
$LN23@Add@7:

; 53   : 
; 54   : 			m_key2obj[key] = obj;

	mov	edi, DWORD PTR [edi]
	lea	ecx, DWORD PTR _pPrev$758245[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$758244[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$758243[ebp]
	push	eax
	push	edi
	mov	eax, esi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode
	test	eax, eax
	jne	SHORT $LN19@Add@7
	cmp	DWORD PTR [esi], eax
	jne	SHORT $LN17@Add@7
	mov	ecx, DWORD PTR [esi+8]
	push	1
	push	ecx
	push	esi
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::InitHashTable
	test	al, al
	jne	SHORT $LN17@Add@7
	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN25@Add@7:
$LN17@Add@7:
	mov	edx, DWORD PTR _nHash$758244[ebp]
	mov	eax, DWORD PTR _iBin$758243[ebp]
	push	edx
	push	eax
	push	edi
	push	esi
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::NewNode
$LN19@Add@7:
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax+4], edx
	pop	ebx

; 55   : 
; 56   : 			if(fFlush) Flush();
; 57   : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
$LN24@Add@7:
?Add@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVFontWrapper@2@_N@Z ENDP ; ssf::Cache<ssf::FontWrapper *>::Add
_TEXT	ENDS
PUBLIC	?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z ; ssf::GlyphPathCache::Create
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z$1
__ehfuncinfo$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.cpp
xdata$x	ENDS
;	COMDAT ?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z
_TEXT	SEGMENT
_iBin$758314 = -28					; size = 4
_nHash$758315 = -24					; size = 4
_pPrev$758317 = -20					; size = 4
_path$ = -20						; size = 4
$T758255 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_hDC$ = 12						; size = 4
_key$ = 16						; size = 4
_f$ = 16						; size = 4
_c$ = 20						; size = 2
?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z PROC ; ssf::GlyphPathCache::Create, COMDAT

; 783  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H

; 784  : 		CStringW key = CStringW((LPCWSTR)*f) + c;

	mov	eax, DWORD PTR _f$[ebp]
	mov	eax, DWORD PTR [eax+8]
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	ecx, DWORD PTR $T758255[ebp]
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	lea	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	edi, eax
	call	??HATL@@YA?AV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@ABV10@_W@Z ; ATL::operator+
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T758255[ebp]
	add	eax, -16				; fffffff0H
	or	esi, -1
	lea	ecx, DWORD PTR [eax+12]
	mov	edx, esi
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN24@Create
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN24@Create:

; 785  : 
; 786  : 		GlyphPath* path = NULL;
; 787  : 
; 788  : 		if(m_key2obj.Lookup(key, path))

	lea	ecx, DWORD PTR _pPrev$758317[ebp]
	push	ecx
	mov	ecx, DWORD PTR _key$[ebp]
	lea	edx, DWORD PTR _nHash$758315[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$758314[ebp]
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	add	eax, 4
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVGlyphPath@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVGlyphPath@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::GlyphPath *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::GlyphPath *> >::GetNode
	cmp	eax, ebx
	je	SHORT $LN4@Create
	mov	edi, DWORD PTR [eax+4]

; 789  : 		{
; 790  : 			return path;

	mov	DWORD PTR __$EHRec$[ebp+8], esi
	mov	eax, DWORD PTR _key$[ebp]
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	lock	 xadd	 DWORD PTR [edx], esi
	dec	esi
	test	esi, esi
	jg	SHORT $LN38@Create
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN38@Create:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 818  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN4@Create:

; 791  : 		}
; 792  : 
; 793  : 		BeginPath(hDC);

	mov	edi, DWORD PTR _hDC$[ebp]
	push	edi
	call	DWORD PTR __imp__BeginPath@4

; 794  : 		TextOutW(hDC, 0, 0, &c, 1);

	push	1
	lea	ecx, DWORD PTR _c$[ebp]
	push	ecx
	push	ebx
	push	ebx
	push	edi
	call	DWORD PTR __imp__TextOutW@20

; 795  : 		CloseFigure(hDC);

	push	edi
	call	DWORD PTR __imp__CloseFigure@4

; 796  : 		if(!EndPath(hDC)) {AbortPath(hDC); ASSERT(0); return NULL;}

	push	edi
	call	DWORD PTR __imp__EndPath@4
	test	eax, eax
	jne	SHORT $LN3@Create
	push	edi
	call	DWORD PTR __imp__AbortPath@4
	mov	DWORD PTR __$EHRec$[ebp+8], esi
	mov	eax, DWORD PTR _key$[ebp]
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	lock	 xadd	 DWORD PTR [edx], esi
	dec	esi
	test	esi, esi
$LN81@Create:
	jg	SHORT $LN47@Create
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN47@Create:
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx

; 818  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN3@Create:

; 797  : 
; 798  : 		path = new GlyphPath();

	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN7@Create
	mov	DWORD PTR [eax], OFFSET ??_7GlyphPath@ssf@@6B@
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	DWORD PTR [eax+16], ebx
	mov	DWORD PTR [eax+20], ebx
	mov	DWORD PTR [eax+24], ebx
	mov	DWORD PTR [eax+28], ebx
	mov	DWORD PTR [eax+32], ebx
	mov	esi, eax
	jmp	SHORT $LN8@Create
$LN7@Create:
	xor	esi, esi
$LN8@Create:

; 799  : 
; 800  : 		int count = GetPath(hDC, NULL, NULL, 0);

	push	ebx
	push	ebx
	push	ebx
	push	edi
	mov	DWORD PTR _path$[ebp], esi
	call	DWORD PTR __imp__GetPath@16
	mov	edi, eax

; 801  : 
; 802  : 		if(count > 0)

	cmp	edi, ebx
	jle	SHORT $LN79@Create

; 803  : 		{
; 804  : 			path->points.SetCount(count);

	lea	eax, DWORD PTR [esi+20]
	call	?SetCount@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAE_NIH@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::SetCount

; 805  : 			path->types.SetCount(count);

	lea	eax, DWORD PTR [esi+4]
	call	?SetCount@?$CAtlArray@EV?$CElementTraits@E@ATL@@@ATL@@QAE_NIH@Z ; ATL::CAtlArray<unsigned char,ATL::CElementTraits<unsigned char> >::SetCount

; 806  : 
; 807  : 			if(count != GetPath(hDC, path->points.GetData(), path->types.GetData(), count))

	mov	eax, DWORD PTR [esi+4]
	mov	ebx, DWORD PTR [esi+20]
	mov	ecx, DWORD PTR _hDC$[ebp]
	push	edi
	push	eax
	push	ebx
	push	ecx
	call	DWORD PTR __imp__GetPath@16
	cmp	edi, eax
	je	SHORT $LN79@Create

; 808  : 			{
; 809  : 				ASSERT(0);
; 810  : 				delete path;

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax

; 811  : 				return NULL;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _key$[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jmp	$LN81@Create
$LN79@Create:

; 812  : 			}
; 813  : 		}
; 814  : 
; 815  : 		Add(key, path);

	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR _path$[ebp]
	push	ecx
	push	edx
	lea	eax, DWORD PTR _key$[ebp]
	call	?Add@?$Cache@PAVGlyphPath@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVGlyphPath@2@_N@Z ; ssf::Cache<ssf::GlyphPath *>::Add

; 816  : 
; 817  : 		return path;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _key$[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN75@Create
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN75@Create:

; 818  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z$0:
	lea	ecx, DWORD PTR $T758255[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z$1:
	lea	ecx, DWORD PTR _key$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__ehhandler$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z:
	mov	eax, OFFSET __ehfuncinfo$?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z ENDP ; ssf::GlyphPathCache::Create
PUBLIC	?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z ; ssf::FontCache::Create
;	COMDAT xdata$x
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z$2
__ehfuncinfo$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.cpp
xdata$x	ENDS
;	COMDAT ?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z
_TEXT	SEGMENT
_iBin$758562 = -28					; size = 4
$T758466 = -28						; size = 4
_nHash$758563 = -24					; size = 4
_pPrev$758565 = -20					; size = 4
$T758462 = -20						; size = 4
_key$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pFW$ = 12						; size = 4
_hDC$ = 12						; size = 4
?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z PROC ; ssf::FontCache::Create, COMDAT
; _lf$ = ecx

; 751  : 	{

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H
	push	esi
	push	edi
	mov	esi, ecx

; 752  : 		CStringW key;

	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	xor	ecx, ecx
	test	eax, eax
	setne	cl
	test	ecx, ecx
	jne	SHORT $LN22@Create@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN78@Create@2:
$LN22@Create@2:
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	eax, 16					; 00000010H
	mov	DWORD PTR _key$[ebp], eax

; 753  : 
; 754  : 		key.Format(L"%s,%d,%d,%d", 
; 755  : 			CStringW(lf.lfFaceName), lf.lfHeight, lf.lfWeight, 
; 756  : 			((lf.lfItalic&1)<<2) | ((lf.lfUnderline&1)<<1) | ((lf.lfStrikeOut&1)<<0));

	lea	ecx, DWORD PTR [esi+28]
	push	ecx
	lea	ecx, DWORD PTR $T758462[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	movzx	edx, BYTE PTR [esi+20]
	movzx	ecx, BYTE PTR [esi+21]
	and	edx, 1
	add	edx, edx
	and	ecx, 1
	or	edx, ecx
	movzx	ecx, BYTE PTR [esi+22]
	add	edx, edx
	and	ecx, 1
	or	edx, ecx
	mov	ecx, DWORD PTR [esi]
	push	edx
	mov	edx, DWORD PTR [esi+16]
	push	edx
	mov	edx, DWORD PTR [eax]
	push	ecx
	push	edx
	lea	eax, DWORD PTR _key$[ebp]
	push	OFFSET ??_C@_1BI@PHGAHBDA@?$AA?$CF?$AAs?$AA?0?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$AA@
	push	eax
	call	?Format@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAAXPB_WZZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::Format
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T758462[ebp]
	add	eax, -16				; fffffff0H
	add	esp, 24					; 00000018H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN38@Create@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN38@Create@2:

; 757  : 
; 758  : 		FontWrapper* pFW = NULL;
; 759  : 
; 760  : 		if(m_key2obj.Lookup(key, pFW))

	mov	edi, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _pPrev$758565[ebp]
	push	ecx
	lea	edx, DWORD PTR _nHash$758563[ebp]
	push	edx
	lea	eax, DWORD PTR _iBin$758562[ebp]
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	edi
	add	eax, 4
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVFontWrapper@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVFontWrapper@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::FontWrapper *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::FontWrapper *> >::GetNode
	test	eax, eax
	je	SHORT $LN2@Create@2
	mov	esi, DWORD PTR [eax+4]

; 761  : 		{
; 762  : 			return pFW;

	lea	eax, DWORD PTR [edi-16]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jmp	$LN77@Create@2
$LN2@Create@2:

; 763  : 		}
; 764  : 
; 765  : 		HFONT hFont;
; 766  : 
; 767  : 		if(!(hFont = CreateFontIndirect(&lf)))

	push	esi
	call	DWORD PTR __imp__CreateFontIndirectW@4
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN1@Create@2

; 768  : 		{
; 769  : 			ASSERT(0);
; 770  : 			return NULL;

	lea	eax, DWORD PTR [edi-16]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN61@Create@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN61@Create@2:
	pop	edi
	xor	eax, eax
	pop	esi

; 778  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN1@Create@2:

; 771  : 		}
; 772  : 
; 773  : 		pFW = new FontWrapper(hDC, hFont, key);

	push	120					; 00000078H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T758466[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	test	eax, eax
	je	SHORT $LN5@Create@2
	mov	edx, DWORD PTR _hDC$[ebp]
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	push	esi
	push	edx
	push	eax
	call	??0FontWrapper@ssf@@QAE@PAUHDC__@@PAUHFONT__@@ABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; ssf::FontWrapper::FontWrapper
	mov	esi, eax
	jmp	SHORT $LN6@Create@2
$LN5@Create@2:
	xor	esi, esi
$LN6@Create@2:

; 774  : 
; 775  : 		Add(key, pFW, false);

	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR _pFW$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	push	ecx
	lea	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _pFW$[ebp], esi
	call	?Add@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVFontWrapper@2@_N@Z ; ssf::Cache<ssf::FontWrapper *>::Add

; 776  : 
; 777  : 		return pFW;

	lea	eax, DWORD PTR [edi-16]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	edx, DWORD PTR [eax+12]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
$LN77@Create@2:
	jg	SHORT $LN70@Create@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN70@Create@2:

; 778  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN75@Create@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z$0:
	lea	ecx, DWORD PTR _key$[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z$1:
	lea	ecx, DWORD PTR $T758462[ebp]
	jmp	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
__unwindfunclet$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z$2:
	mov	eax, DWORD PTR $T758466[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z ENDP ; ssf::FontCache::Create
PUBLIC	?GetRect@SubRectAllocator@ssf@@QAEXAAVCRect@@PBVSubtitle@2@ABUAlign@2@HH@Z ; ssf::SubRectAllocator::GetRect
; Function compile flags: /Ogtp
;	COMDAT ?GetRect@SubRectAllocator@ssf@@QAEXAAVCRect@@PBVSubtitle@2@ABUAlign@2@HH@Z
_TEXT	SEGMENT
_sr$ = -52						; size = 20
$T758665 = -32						; size = 16
_iBin$758679 = -16					; size = 4
_nHash$758680 = -12					; size = 4
_pNode$758710 = -8					; size = 4
_pPrev$758682 = -8					; size = 4
_fOK$158602 = -2					; size = 1
_vertical$158601 = -1					; size = 1
_this$ = 8						; size = 4
_rect$ = 12						; size = 4
_s$ = 16						; size = 4
_align$ = 20						; size = 4
_tlb$ = 24						; size = 4
_brb$ = 28						; size = 4
?GetRect@SubRectAllocator@ssf@@QAEXAAVCRect@@PBVSubtitle@2@ABUAlign@2@HH@Z PROC ; ssf::SubRectAllocator::GetRect, COMDAT

; 680  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	ebx

; 681  : 		SubRect sr(rect, s->m_layer);

	mov	ebx, DWORD PTR _rect$[ebp]
	mov	eax, DWORD PTR [ebx]

; 682  : 		sr.rect.InflateRect(tlb, tlb, brb, brb);

	sub	eax, DWORD PTR _tlb$[ebp]
	mov	ecx, DWORD PTR [ebx+4]
	sub	ecx, DWORD PTR _tlb$[ebp]
	mov	edx, DWORD PTR [ebx+8]
	push	esi
	mov	esi, DWORD PTR _s$[ebp]
	fld	DWORD PTR [esi+40]
	push	edi
	mov	edi, DWORD PTR [ebx+12]
	fstp	DWORD PTR _sr$[ebp+16]
	mov	DWORD PTR _sr$[ebp], eax
	mov	eax, DWORD PTR _brb$[ebp]
	add	edx, eax
	mov	DWORD PTR _sr$[ebp+4], ecx

; 683  : 
; 684  : 		StringMapW<SubRect>::CPair* pPair = Lookup(s->m_name);

	lea	ecx, DWORD PTR _pPrev$758682[ebp]
	push	ecx
	mov	DWORD PTR _sr$[ebp+8], edx
	add	edi, eax
	mov	eax, DWORD PTR [esi+8]
	lea	edx, DWORD PTR _nHash$758680[ebp]
	push	edx
	lea	ecx, DWORD PTR _iBin$758679[ebp]
	mov	DWORD PTR _sr$[ebp+12], edi
	mov	edi, DWORD PTR _this$[ebp]
	push	ecx
	push	eax
	mov	eax, edi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetNode

; 685  : 
; 686  : 		if(pPair && pPair->m_value.rect != sr.rect)

	test	eax, eax
	je	SHORT $LN82@GetRect
	lea	edx, DWORD PTR _sr$[ebp]
	push	edx
	add	eax, 4
	push	eax
	call	DWORD PTR __imp__EqualRect@8
	test	eax, eax
	jne	$LN75@GetRect

; 687  : 		{
; 688  : 			RemoveKey(s->m_name);

	mov	eax, DWORD PTR [esi+8]
	push	eax
	mov	eax, edi
	call	?RemoveKey@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAE_NPB_W@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveKey
$LN82@GetRect:

; 689  : 			pPair = NULL;
; 690  : 		}
; 691  : 
; 692  : 		if(!pPair)
; 693  : 		{
; 694  : 			bool vertical = s->m_direction.primary == _T("down") || s->m_direction.primary == _T("up");

	lea	eax, DWORD PTR [esi+28]
	push	OFFSET ??_C@_19GMDMNN@?$AAd?$AAo?$AAw?$AAn?$AA?$AA@
	push	eax
	call	??8ATL@@YA_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@PB_W@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	jne	SHORT $LN16@GetRect
	lea	eax, DWORD PTR [esi+28]
	push	OFFSET ??_C@_15HOONGCLC@?$AAu?$AAp?$AA?$AA@
	push	eax
	call	??8ATL@@YA_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@PB_W@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	jne	SHORT $LN16@GetRect
	mov	BYTE PTR _vertical$158601[ebp], al
	jmp	SHORT $LN11@GetRect
$LN16@GetRect:
	mov	BYTE PTR _vertical$158601[ebp], 1
	jmp	SHORT $LN11@GetRect
	npad	3
$LL94@GetRect:
	mov	edi, DWORD PTR _this$[ebp]
$LN11@GetRect:

; 695  : 
; 696  : 			bool fOK = false;
; 697  : 
; 698  : 			while(!fOK)
; 699  : 			{
; 700  : 				fOK = true;
; 701  : 
; 702  : 				POSITION pos = GetStartPosition();

	mov	ecx, edi
	mov	BYTE PTR _fOK$158602[ebp], 1
	call	?GetStartPosition@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QBEPAU__POSITION@@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::GetStartPosition
	mov	edi, eax

; 703  : 				while(pos)

	test	edi, edi
	je	$LN10@GetRect
$LN9@GetRect:

; 704  : 				{
; 705  : 					const SubRect& sr2 = GetNextValue(pos);

	test	edi, edi
	je	$LN80@GetRect
	mov	ebx, DWORD PTR [edi+24]
	mov	DWORD PTR _pNode$758710[ebp], edi
	test	ebx, ebx
	jne	SHORT $LN49@GetRect
	mov	esi, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [edi+28]
	xor	edx, edx
	div	ecx
	inc	edx
$LL50@GetRect:
	cmp	edx, ecx
	jae	SHORT $LN49@GetRect
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN48@GetRect
	mov	ebx, DWORD PTR [eax]
$LN48@GetRect:
	inc	edx
	test	ebx, ebx
	je	SHORT $LL50@GetRect
$LN49@GetRect:
	mov	esi, DWORD PTR _pNode$758710[ebp]

; 706  : 
; 707  : 					if(sr.layer == sr2.layer && !(sr.rect & sr2.rect).IsRectEmpty())

	fld	DWORD PTR _sr$[ebp+16]
	fld	DWORD PTR [esi+20]
	add	esi, 4
	fucompp
	mov	edi, ebx
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	$LN7@GetRect
	push	esi
	xor	eax, eax
	lea	ecx, DWORD PTR _sr$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T758665[ebp]
	push	edx
	mov	DWORD PTR $T758665[ebp], eax
	mov	DWORD PTR $T758665[ebp+4], eax
	mov	DWORD PTR $T758665[ebp+8], eax
	mov	DWORD PTR $T758665[ebp+12], eax
	call	DWORD PTR __imp__IntersectRect@12
	lea	eax, DWORD PTR $T758665[ebp]
	push	eax
	call	DWORD PTR __imp__IsRectEmpty@4
	test	eax, eax
	jne	SHORT $LN7@GetRect

; 708  : 					{
; 709  : 						if(vertical)
; 710  : 						{
; 711  : 							if(align.h < 0.5)

	fld	DWORD PTR __real@3f000000
	cmp	BYTE PTR _vertical$158601[ebp], al
	je	SHORT $LN6@GetRect
	mov	ecx, DWORD PTR _align$[ebp]
	fcomp	DWORD PTR [ecx+4]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN5@GetRect

; 712  : 							{
; 713  : 								sr.rect.right = sr2.rect.right + sr.rect.Width();

	mov	edx, DWORD PTR [esi+8]
	sub	edx, DWORD PTR _sr$[ebp]
	add	DWORD PTR _sr$[ebp+8], edx

; 714  : 								sr.rect.left = sr2.rect.right;

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR _sr$[ebp], eax

; 715  : 							}
; 716  : 							else

	jmp	SHORT $LN1@GetRect
$LN5@GetRect:

; 717  : 							{
; 718  : 								sr.rect.left = sr2.rect.left - sr.rect.Width();

	mov	ecx, DWORD PTR [esi]
	sub	ecx, DWORD PTR _sr$[ebp+8]
	add	DWORD PTR _sr$[ebp], ecx

; 719  : 								sr.rect.right = sr2.rect.left;

	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR _sr$[ebp+8], edx

; 720  : 							}
; 721  : 						}
; 722  : 						else

	jmp	SHORT $LN1@GetRect
$LN6@GetRect:

; 723  : 						{
; 724  : 							if(align.v < 0.5)

	mov	eax, DWORD PTR _align$[ebp]
	fcomp	DWORD PTR [eax]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN2@GetRect

; 725  : 							{
; 726  : 								sr.rect.bottom = sr2.rect.bottom + sr.rect.Height();

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, DWORD PTR _sr$[ebp+4]
	add	DWORD PTR _sr$[ebp+12], ecx

; 727  : 								sr.rect.top = sr2.rect.bottom;

	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR _sr$[ebp+4], edx

; 728  : 							}
; 729  : 							else

	jmp	SHORT $LN1@GetRect
$LN2@GetRect:

; 730  : 							{
; 731  : 								sr.rect.top = sr2.rect.top - sr.rect.Height();

	mov	eax, DWORD PTR [esi+4]
	sub	eax, DWORD PTR _sr$[ebp+12]
	add	DWORD PTR _sr$[ebp+4], eax

; 732  : 								sr.rect.bottom = sr2.rect.top;

	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR _sr$[ebp+12], ecx
$LN1@GetRect:

; 733  : 							}
; 734  : 						}
; 735  : 
; 736  : 						fOK = false;

	mov	BYTE PTR _fOK$158602[ebp], 0
$LN7@GetRect:

; 703  : 				while(pos)

	test	ebx, ebx
	jne	$LN9@GetRect

; 704  : 				{
; 705  : 					const SubRect& sr2 = GetNextValue(pos);

	cmp	BYTE PTR _fOK$158602[ebp], 0
	mov	ebx, DWORD PTR _rect$[ebp]
	mov	esi, DWORD PTR _s$[ebp]
	je	$LL94@GetRect
$LN10@GetRect:

; 737  : 					}
; 738  : 				}
; 739  : 			}
; 740  : 
; 741  : 			SetAt(s->m_name, sr);

	mov	edx, DWORD PTR [esi+8]
	mov	edi, DWORD PTR _this$[ebp]
	push	edx
	lea	esi, DWORD PTR _sr$[ebp]
	call	?SetAt@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEPAU__POSITION@@PB_WABVSubRect@ssf@@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::SetAt

; 742  : 
; 743  : 			rect = sr.rect;

	mov	eax, DWORD PTR _sr$[ebp]
	mov	ecx, DWORD PTR _sr$[ebp+4]
	mov	edx, DWORD PTR _sr$[ebp+8]
	mov	DWORD PTR [ebx], eax
	mov	eax, DWORD PTR _sr$[ebp+12]
	mov	DWORD PTR [ebx+4], ecx
	mov	DWORD PTR [ebx+8], edx
	mov	DWORD PTR [ebx+12], eax

; 744  : 			rect.DeflateRect(tlb, tlb, brb, brb);

	mov	eax, DWORD PTR _tlb$[ebp]
	add	DWORD PTR [ebx], eax
	add	DWORD PTR [ebx+4], eax
	mov	eax, DWORD PTR _brb$[ebp]
	sub	DWORD PTR [ebx+8], eax
	sub	DWORD PTR [ebx+12], eax
$LN75@GetRect:

; 745  : 		}
; 746  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN80@GetRect:

; 704  : 				{
; 705  : 					const SubRect& sr2 = GetNextValue(pos);

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN98@GetRect:
$LN97@GetRect:
	int	3
?GetRect@SubRectAllocator@ssf@@QAEXAAVCRect@@PBVSubtitle@2@ABUAlign@2@HH@Z ENDP ; ssf::SubRectAllocator::GetRect
_TEXT	ENDS
PUBLIC	__real@bf800000
PUBLIC	?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z ; ssf::Renderer::Lookup
;	COMDAT __real@bf800000
; File d:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcoll.h
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$11
	DD	05H
	DD	FLAT:__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$13
	DD	05H
	DD	FLAT:__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$14
__ehfuncinfo$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File e:\github\codesandnotes\xy-vsfilter\src\subtitles\libssf\renderer.cpp
xdata$x	ENDS
;	COMDAT ?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z
_TEXT	SEGMENT
_lf$157812 = -356					; size = 92
_subrect$ = -260					; size = 16
tv5052 = -244						; size = 4
_glyphs$ = -240						; size = 24
tv5152 = -216						; size = 4
_spdrc$ = -212						; size = 16
$T758866 = -196						; size = 16
_size$761723 = -188					; size = 8
tv6152 = -184						; size = 4
tv5896 = -184						; size = 4
tv5739 = -184						; size = 4
tv5700 = -184						; size = 4
_iBin$758944 = -184					; size = 4
_w$158392 = -184					; size = 4
_g$157878 = -184					; size = 4
_clip$ = -180						; size = 16
$T758861 = -164						; size = 16
_frame$ = -164						; size = 16
$T758799 = -164						; size = 16
_r$158492 = -148					; size = 16
_r$158447 = -148					; size = 16
$T758859 = -140						; size = 8
_rows$ = -132						; size = 24
tv6146 = -108						; size = 4
tv6073 = -108						; size = 4
tv5072 = -108						; size = 4
_nHash$758945 = -108					; size = 4
tv5914 = -104						; size = 4
tv5831 = -104						; size = 4
_r$158170 = -104					; size = 4
_rs$ = -104						; size = 4
_glypsh2fill$ = -100					; size = 24
$T758864 = -76						; size = 8
_scale$ = -76						; size = 8
$T758858 = -68						; size = 8
tv5943 = -64						; size = 4
_gpos$158181 = -64					; size = 4
_pos$ = -64						; size = 4
tv7688 = -60						; size = 4
tv7683 = -60						; size = 4
tv5024 = -60						; size = 4
$T762505 = -60						; size = 4
$T762231 = -60						; size = 4
$T762010 = -60						; size = 4
_org$ = -56						; size = 8
$T760674 = -52						; size = 4
_pos$158409 = -52					; size = 4
_next$158191 = -52					; size = 4
_width$158180 = -52					; size = 4
_t$157811 = -52						; size = 4
_row$ = -48						; size = 4
_c$157831 = -48						; size = 4
_o$158503 = -44						; size = 8
_rsize$158461 = -44					; size = 8
_size$ = -44						; size = 8
$T758822 = -44						; size = 8
_extent$157879 = -44					; size = 8
_p$ = -36						; size = 8
tv5525 = -32						; size = 4
_c$158137 = -32						; size = 2
tv1534 = -32						; size = 4
_g$158389 = -32						; size = 4
$T758829 = -32						; size = 4
_minwidth$158165 = -32					; size = 4
_hOldFont$157826 = -32					; size = 4
_c_prev$ = -28						; size = 2
_g$158479 = -28						; size = 4
_g$158469 = -28						; size = 4
_w$158420 = -28						; size = 4
_pos$158380 = -28					; size = 4
$T758830 = -28						; size = 4
_maxwidth$158163 = -28					; size = 4
_rpos$158142 = -28					; size = 4
tv5919 = -24						; size = 4
$T758843 = -24						; size = 4
_fill_width$ = -24					; size = 4
_brpos$158171 = -24					; size = 4
_pos$158456 = -20					; size = 4
_h$158421 = -20						; size = 4
_gpos$158385 = -20					; size = 4
_pos$158203 = -20					; size = 4
_rpos$158166 = -20					; size = 4
_gpos$158147 = -20					; size = 4
_g$158126 = -20						; size = 4
_font$157821 = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_g0$ = 12						; size = 4
_r$158460 = 12						; size = 4
_s$ = 12						; size = 4
tv8204 = 16						; size = 4
tv8200 = 16						; size = 4
tv5113 = 16						; size = 4
tv5100 = 16						; size = 4
$T762492 = 16						; size = 4
_pPrev$758947 = 16					; size = 4
_cur$158490 = 16					; size = 4
_vs$ = 16						; size = 4
_vertical$ = 19						; size = 1
?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z PROC ; ssf::Renderer::Lookup, COMDAT
; _vr$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 348				; 0000015cH
	push	ebx
	mov	ebx, DWORD PTR _vs$[ebp]

; 98   : 		m_sra.UpdateTarget(vs, vr);

	mov	eax, DWORD PTR [ebx]
	push	esi
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 248				; 000000f8H
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [ebx+4]
	mov	DWORD PTR tv5024[ebp], esi
	cmp	DWORD PTR [esi+48], eax
	jne	SHORT $LN172@Lookup@36
	cmp	DWORD PTR [esi+52], ecx
	jne	SHORT $LN172@Lookup@36
	push	edi
	lea	eax, DWORD PTR [esi+56]
	push	eax
	call	DWORD PTR __imp__EqualRect@8
	test	eax, eax
	jne	SHORT $LN173@Lookup@36
$LN172@Lookup@36:
	mov	eax, esi
	call	?RemoveAll@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::RemoveAll
$LN173@Lookup@36:
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR [esi+48], ecx
	mov	edx, DWORD PTR [ebx+4]
	mov	DWORD PTR [esi+52], edx
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi+56], eax
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+60], ecx
	mov	edx, DWORD PTR [edi+8]

; 99   : 
; 100  : 		if(s->m_text.IsEmpty())

	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [esi+64], edx
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+68], eax
	cmp	DWORD PTR [ecx+60], 0
	jne	SHORT $LN118@Lookup@36
$LN2454@Lookup@36:

; 101  : 			return NULL;

	xor	eax, eax

; 607  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN118@Lookup@36:

; 102  : 
; 103  : 		CRect spdrc = s->m_frame.reference == _T("video") ? vr : CRect(CPoint(0, 0), vs);

	mov	esi, ecx
	lea	edx, DWORD PTR [esi+16]
	push	OFFSET ??_C@_1M@NHCOFMD@?$AAv?$AAi?$AAd?$AAe?$AAo?$AA?$AA@
	push	edx
	call	??8ATL@@YA_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@PB_W@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	jne	SHORT $LN122@Lookup@36
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ebx+4]
	xor	edx, edx
	mov	DWORD PTR $T758799[ebp], edx
	mov	DWORD PTR $T758799[ebp+8], eax
	mov	DWORD PTR $T758799[ebp+4], edx
	mov	DWORD PTR $T758799[ebp+12], ecx
	lea	edi, DWORD PTR $T758799[ebp]
$LN122@Lookup@36:
	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR _spdrc$[ebp+4], ecx
	mov	DWORD PTR _spdrc$[ebp], eax
	mov	eax, DWORD PTR [edi+12]

; 104  : 
; 105  : 		if(spdrc.IsRectEmpty())

	lea	ecx, DWORD PTR _spdrc$[ebp]
	push	ecx
	mov	DWORD PTR _spdrc$[ebp+8], edx
	mov	DWORD PTR _spdrc$[ebp+12], eax
	call	DWORD PTR __imp__IsRectEmpty@4
	test	eax, eax

; 106  : 			return NULL;

	jne	$LN2454@Lookup@36

; 107  : 
; 108  : 		RenderedSubtitle* rs = NULL;
; 109  : 
; 110  : 		if(m_rsc.Lookup(s->m_name, rs))

	mov	eax, DWORD PTR [esi+8]
	lea	edx, DWORD PTR _pPrev$758947[ebp]
	push	edx
	lea	ecx, DWORD PTR _nHash$758945[ebp]
	push	ecx
	lea	edi, DWORD PTR [esi+8]
	lea	edx, DWORD PTR _iBin$758944[ebp]
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 172				; 000000acH
	mov	DWORD PTR tv5052[ebp], edi
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@PAVRenderedSubtitle@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@PAVRenderedSubtitle@ssf@@@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::RenderedSubtitle *,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::RenderedSubtitle *> >::GetNode
	test	eax, eax
	je	SHORT $LN116@Lookup@36
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	SHORT $LN116@Lookup@36

; 111  : 		{
; 112  : 			if(!s->m_animated && rs->m_spdrc == spdrc)

	mov	eax, DWORD PTR _s$[ebp]
	cmp	BYTE PTR [eax+12], 0
	jne	SHORT $LN115@Lookup@36
	lea	ecx, DWORD PTR _spdrc$[ebp]
	lea	eax, DWORD PTR [esi+4]
	push	ecx
	push	eax
	call	DWORD PTR __imp__EqualRect@8
	test	eax, eax
	je	SHORT $LN115@Lookup@36

; 113  : 				return rs;

	mov	eax, esi

; 607  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN115@Lookup@36:

; 114  : 
; 115  : 			m_rsc.Invalidate(s->m_name);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 168				; 000000a8H
	mov	eax, edi
	call	?Invalidate@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@Z ; ssf::Cache<ssf::RenderedSubtitle *>::Invalidate
$LN116@Lookup@36:

; 116  : 		}
; 117  : 
; 118  : 		const Style& style = s->m_text.GetHead().style;

	mov	eax, DWORD PTR _s$[ebp]
	mov	esi, DWORD PTR [eax+52]
	xor	ecx, ecx
	xor	edi, edi
	cmp	esi, edi
	setne	cl
	mov	DWORD PTR tv5072[ebp], esi
	cmp	ecx, edi
	jne	SHORT $LN209@Lookup@36
$LN2234@Lookup@36:
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN2456@Lookup@36:
$LN209@Lookup@36:

; 119  : 
; 120  : 		Size scale;
; 121  : 
; 122  : 		scale.cx = (float)spdrc.Width() / s->m_frame.resolution.cx;

	mov	edx, DWORD PTR _spdrc$[ebp+8]
	sub	edx, DWORD PTR _spdrc$[ebp]

; 123  : 		scale.cy = (float)spdrc.Height() / s->m_frame.resolution.cy;

	mov	ecx, DWORD PTR _spdrc$[ebp+12]
	mov	DWORD PTR tv8204[ebp], edx
	fild	DWORD PTR tv8204[ebp]
	sub	ecx, DWORD PTR _spdrc$[ebp+4]
	fdiv	DWORD PTR [eax+20]
	mov	DWORD PTR tv8200[ebp], ecx
	fstp	DWORD PTR _scale$[ebp]
	fild	DWORD PTR tv8200[ebp]
	fdiv	DWORD PTR [eax+24]
	fstp	DWORD PTR _scale$[ebp+4]

; 124  : 
; 125  : 		CRect frame;
; 126  : 
; 127  : 		frame.left = (int)(64.0f * (spdrc.left + style.placement.margin.l * scale.cx) + 0.5);

	fild	DWORD PTR _spdrc$[ebp]
	fstp	DWORD PTR tv5100[ebp]
	fld	DWORD PTR [esi+40]
	fld	DWORD PTR _scale$[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fld	DWORD PTR tv5100[ebp]
	fld	ST(0)
	faddp	ST(3), ST(0)
	fld	QWORD PTR __real@4050000000000000
	fmul	ST(3), ST(0)
	fld	QWORD PTR __real@3fe0000000000000
	fadd	ST(4), ST(0)
	fxch	ST(4)
	call	__ftol2_sse

; 128  : 		frame.top = (int)(64.0f * (spdrc.top + style.placement.margin.t * scale.cy) + 0.5);

	fild	DWORD PTR _spdrc$[ebp+4]
	mov	DWORD PTR _frame$[ebp], eax
	fstp	DWORD PTR tv5113[ebp]
	fld	DWORD PTR [esi+28]
	fld	DWORD PTR _scale$[ebp+4]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fld	DWORD PTR tv5113[ebp]
	faddp	ST(2), ST(0)
	fxch	ST(1)
	fmul	ST(0), ST(2)
	fadd	ST(0), ST(5)
	call	__ftol2_sse

; 129  : 		frame.right = (int)(64.0f * (spdrc.right - style.placement.margin.r * scale.cx) + 0.5);

	fild	DWORD PTR _spdrc$[ebp+8]
	fld	DWORD PTR [esi+32]
	mov	DWORD PTR _frame$[ebp+4], eax
	fmul	ST(0), ST(5)
	fsubp	ST(1), ST(0)
	fmul	ST(0), ST(2)
	fadd	ST(0), ST(5)
	call	__ftol2_sse

; 130  : 		frame.bottom = (int)(64.0f * (spdrc.bottom - style.placement.margin.b * scale.cy) + 0.5);

	fild	DWORD PTR _spdrc$[ebp+12]
	fld	DWORD PTR [esi+36]
	mov	DWORD PTR _frame$[ebp+8], eax
	fmul	ST(0), ST(2)
	fsubp	ST(1), ST(0)
	fmul	ST(0), ST(2)
	faddp	ST(5), ST(0)
	fxch	ST(4)
	call	__ftol2_sse

; 131  : 
; 132  : 		CRect clip;

	mov	DWORD PTR _clip$[ebp], edi
	mov	DWORD PTR _clip$[ebp+4], edi
	mov	DWORD PTR _clip$[ebp+8], edi
	mov	DWORD PTR _clip$[ebp+12], edi

; 133  : 
; 134  : 		if(style.placement.clip.l == -1) clip.left = 0;

	fld	DWORD PTR [esi+24]
	fld	DWORD PTR __real@bf800000
	mov	DWORD PTR _frame$[ebp+12], eax
	fld	ST(0)
	fucomp	ST(2)
	fnstsw	ax
	fstp	ST(1)
	test	ah, 68					; 00000044H
	jp	SHORT $LN114@Lookup@36
	mov	DWORD PTR _clip$[ebp], edi
	jmp	SHORT $LN113@Lookup@36
$LN114@Lookup@36:

; 135  : 		else clip.left = (int)(spdrc.left + style.placement.clip.l * scale.cx);

	fld	ST(3)
	fmul	DWORD PTR [esi+24]
	fadd	ST(0), ST(3)
	call	__ftol2_sse
	mov	DWORD PTR _clip$[ebp], eax
$LN113@Lookup@36:

; 136  : 		if(style.placement.clip.t == -1) clip.top = 0;

	fld	DWORD PTR [esi+12]
	lea	ecx, DWORD PTR [esi+12]
	fld	ST(1)
	mov	DWORD PTR tv5152[ebp], ecx
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN112@Lookup@36
	xor	edi, edi
	jmp	SHORT $LN2448@Lookup@36
$LN112@Lookup@36:

; 137  : 		else clip.top = (int)(spdrc.top + style.placement.clip.t * scale.cy); 

	fld	ST(4)
	fmul	DWORD PTR [ecx]
	fadd	DWORD PTR tv5113[ebp]
	call	__ftol2_sse
	mov	edi, eax
$LN2448@Lookup@36:
	mov	DWORD PTR _clip$[ebp+4], edi

; 138  : 		if(style.placement.clip.r == -1) clip.right = vs.cx;

	fld	DWORD PTR [esi+16]
	fld	ST(1)
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN110@Lookup@36
	mov	edx, DWORD PTR [ebx]
	fstp	ST(2)
	mov	DWORD PTR _clip$[ebp+8], edx
	jmp	SHORT $LN109@Lookup@36
$LN110@Lookup@36:

; 139  : 		else clip.right = (int)(spdrc.left + style.placement.clip.r * scale.cx);

	fld	ST(3)
	fmul	DWORD PTR [esi+16]
	faddp	ST(3), ST(0)
	fxch	ST(2)
	call	__ftol2_sse
	mov	DWORD PTR _clip$[ebp+8], eax
$LN109@Lookup@36:

; 140  : 		if(style.placement.clip.b == -1) clip.bottom = vs.cy;

	fld	DWORD PTR [esi+20]
	fucomp	ST(2)
	fnstsw	ax
	fstp	ST(1)
	test	ah, 68					; 00000044H
	jp	SHORT $LN108@Lookup@36
	mov	esi, DWORD PTR [ebx+4]
	jmp	SHORT $LN2449@Lookup@36
$LN108@Lookup@36:

; 141  : 		else clip.bottom = (int)(spdrc.top + style.placement.clip.b * scale.cy);

	fld	DWORD PTR [esi+20]
	fmul	ST(0), ST(3)
	fadd	DWORD PTR tv5113[ebp]
	call	__ftol2_sse
	mov	esi, eax
$LN2449@Lookup@36:

; 142  : 
; 143  : 		clip.left = max(clip.left, 0);

	mov	ecx, DWORD PTR _clip$[ebp]
	xor	eax, eax
	test	ecx, ecx
	setle	al
	mov	DWORD PTR _clip$[ebp+12], esi
	dec	eax
	and	eax, ecx

; 144  : 		clip.top = max(clip.top, 0);

	xor	ecx, ecx
	test	edi, edi
	setle	cl
	mov	DWORD PTR _clip$[ebp], eax
	dec	ecx
	and	ecx, edi
	mov	DWORD PTR _clip$[ebp+4], ecx

; 145  : 		clip.right = min(clip.right, vs.cx);

	mov	ecx, DWORD PTR [ebx]
	cmp	DWORD PTR _clip$[ebp+8], ecx
	jl	SHORT $LN124@Lookup@36
	mov	DWORD PTR _clip$[ebp+8], ecx
$LN124@Lookup@36:

; 146  : 		clip.bottom = min(clip.bottom, vs.cy);

	mov	ebx, DWORD PTR [ebx+4]
	cmp	esi, ebx
	jl	SHORT $LN126@Lookup@36
	mov	DWORD PTR _clip$[ebp+12], ebx
$LN126@Lookup@36:

; 147  : 
; 148  : 		scale.cx *= 64;
; 149  : 		scale.cy *= 64;
; 150  : 
; 151  : 		bool vertical = s->m_direction.primary == _T("down") || s->m_direction.primary == _T("up");

	mov	esi, DWORD PTR _s$[ebp]
	fmul	ST(1), ST(0)
	fxch	ST(1)
	add	esi, 28					; 0000001cH
	push	OFFSET ??_C@_19GMDMNN@?$AAd?$AAo?$AAw?$AAn?$AA?$AA@
	fstp	DWORD PTR _scale$[ebp]
	push	esi
	fmulp	ST(1), ST(0)
	fstp	DWORD PTR _scale$[ebp+4]
	call	??8ATL@@YA_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@PB_W@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	jne	SHORT $LN127@Lookup@36
	push	OFFSET ??_C@_15HOONGCLC@?$AAu?$AAp?$AA?$AA@
	push	esi
	call	??8ATL@@YA_NABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@0@PB_W@Z ; ATL::operator==
	add	esp, 8
	mov	BYTE PTR _vertical$[ebp], 0
	test	al, al
	je	SHORT $LN128@Lookup@36
$LN127@Lookup@36:
	mov	BYTE PTR _vertical$[ebp], 1
$LN128@Lookup@36:

; 152  : 
; 153  : 		// create glyph paths
; 154  : 
; 155  : 		WCHAR c_prev = 0, c_next;

	xor	ebx, ebx

; 156  : 
; 157  : 		CAutoPtrList<Glyph> glyphs;

	xor	eax, eax
	mov	DWORD PTR _c_prev$[ebp], ebx
	mov	DWORD PTR _glyphs$[ebp], eax
	mov	DWORD PTR _glyphs$[ebp+4], ebx
	mov	DWORD PTR _glyphs$[ebp+8], ebx
	mov	DWORD PTR _glyphs$[ebp+12], ebx
	mov	DWORD PTR _glyphs$[ebp+16], ebx
	mov	DWORD PTR _glyphs$[ebp+20], 10		; 0000000aH

; 158  : 
; 159  : 		POSITION pos = s->m_text.GetHeadPosition();

	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	edi, DWORD PTR [edx+52]

; 160  : 		while(pos)

	cmp	edi, ebx
	je	$LN105@Lookup@36
	npad	6
$LL106@Lookup@36:

; 161  : 		{
; 162  : 			const Text& t = s->m_text.GetNext(pos);

	xor	eax, eax
	test	edi, edi
	setne	al
	test	eax, eax
	je	$LN2234@Lookup@36

; 163  : 
; 164  : 			LOGFONT lf;
; 165  : 			memset(&lf, 0, sizeof(lf));

	push	92					; 0000005cH
	mov	ebx, edi
	mov	edi, DWORD PTR [edi]
	lea	eax, DWORD PTR _lf$157812[ebp]
	push	0
	add	ebx, 8
	push	eax
	mov	DWORD PTR _pos$[ebp], edi
	mov	DWORD PTR _t$157811[ebp], ebx
	call	_memset

; 166  : 			lf.lfCharSet = DEFAULT_CHARSET;

	mov	BYTE PTR _lf$157812[ebp+23], 1

; 167  : 			_tcscpy_s(lf.lfFaceName, CString(t.style.font.face));

	mov	eax, DWORD PTR [ebx+104]
	sub	eax, 16					; 00000010H
	add	esp, 12					; 0000000cH
	push	eax
	call	?CloneData@?$CSimpleStringT@_W$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<wchar_t,0>::CloneData
	add	esp, 4
	lea	esi, DWORD PTR [eax+16]
	push	esi
	lea	ecx, DWORD PTR _lf$157812[ebp+28]
	push	32					; 00000020H
	push	ecx
	call	_wcscpy_s
	add	esi, -16				; fffffff0H
	add	esp, 12					; 0000000cH
	lea	edx, DWORD PTR [esi+12]
	or	eax, -1
	lock	 xadd	 DWORD PTR [edx], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN261@Lookup@36
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	esi
	call	eax
$LN261@Lookup@36:

; 168  : 			lf.lfHeight = (LONG)(t.style.font.size * scale.cy + 0.5);

	fld	DWORD PTR [ebx+108]
	fmul	DWORD PTR _scale$[ebp+4]
	fld	QWORD PTR __real@3fe0000000000000
	fadd	ST(1), ST(0)
	fxch	ST(1)
	call	__ftol2_sse
	mov	DWORD PTR _lf$157812[ebp], eax

; 169  : 			lf.lfWeight = (LONG)(t.style.font.weight + 0.5);

	fadd	DWORD PTR [ebx+112]
	call	__ftol2_sse

; 170  : 			lf.lfItalic = !!t.style.font.italic;
; 171  : 			lf.lfUnderline = !!t.style.font.underline;
; 172  : 			lf.lfStrikeOut = !!t.style.font.strikethrough;
; 173  : 			lf.lfOutPrecision = OUT_TT_PRECIS;
; 174  : 			lf.lfClipPrecision = CLIP_DEFAULT_PRECIS;
; 175  : 			lf.lfQuality = ANTIALIASED_QUALITY;
; 176  : 			lf.lfPitchAndFamily = DEFAULT_PITCH|FF_DONTCARE;
; 177  : 
; 178  : 			FontWrapper* font;
; 179  : 
; 180  : 			if(!(font = m_fc.Create(m_hDC, lf)))

	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR _lf$157812[ebp+16], eax
	cmp	BYTE PTR [ebx+134], 0
	setne	cl
	mov	BYTE PTR _lf$157812[ebp+20], cl
	cmp	BYTE PTR [ebx+132], 0
	mov	ecx, DWORD PTR [esi+4]
	setne	dl
	mov	BYTE PTR _lf$157812[ebp+21], dl
	cmp	BYTE PTR [ebx+133], 0
	push	ecx
	setne	al
	mov	BYTE PTR _lf$157812[ebp+22], al
	lea	eax, DWORD PTR [esi+8]
	push	eax
	lea	ecx, DWORD PTR _lf$157812[ebp]
	mov	DWORD PTR _lf$157812[ebp+24], 262148	; 00040004H
	call	?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z ; ssf::FontCache::Create
	mov	DWORD PTR _font$157821[ebp], eax
	test	eax, eax
	jne	SHORT $LN103@Lookup@36

; 181  : 			{
; 182  : 				_tcscpy_s(lf.lfFaceName, _T("Arial"));

	push	OFFSET ??_C@_1M@KAKMLIHO@?$AAA?$AAr?$AAi?$AAa?$AAl?$AA?$AA@
	lea	edx, DWORD PTR _lf$157812[ebp+28]
	push	32					; 00000020H
	push	edx
	call	_wcscpy_s

; 183  : 
; 184  : 				if(!(font = m_fc.Create(m_hDC, lf)))

	mov	eax, DWORD PTR [esi+4]
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR [esi+8]
	push	eax
	lea	ecx, DWORD PTR _lf$157812[ebp]
	call	?Create@FontCache@ssf@@QAEPAVFontWrapper@2@PAUHDC__@@ABUtagLOGFONTW@@@Z ; ssf::FontCache::Create
	mov	DWORD PTR _font$157821[ebp], eax
	test	eax, eax
	je	$LN2288@Lookup@36
$LN103@Lookup@36:

; 185  : 				{
; 186  : 					ASSERT(0);
; 187  : 					continue;
; 188  : 				}
; 189  : 			}
; 190  : 
; 191  : 			HFONT hOldFont = SelectFont(m_hDC, *font);

	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [esi+4]
	push	eax
	push	ecx
	call	DWORD PTR __imp__SelectObject@8

; 192  : 
; 193  : 			const TEXTMETRIC& tm = font->GetTextMetric();
; 194  : 
; 195  : 			for(LPCWSTR c = t.str; *c; c++)

	mov	ebx, DWORD PTR [ebx+232]
	cmp	WORD PTR [ebx], 0
	mov	DWORD PTR _hOldFont$157826[ebp], eax
	mov	DWORD PTR _c$157831[ebp], ebx
	je	$LN100@Lookup@36
$LN102@Lookup@36:

; 196  : 			{
; 197  : 				CAutoPtr<Glyph> g(new Glyph());

	push	820					; 00000334H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN129@Lookup@36
	mov	edi, eax
	call	??0Glyph@ssf@@QAE@XZ			; ssf::Glyph::Glyph
	mov	edi, eax
	jmp	SHORT $LN130@Lookup@36
$LN129@Lookup@36:
	xor	edi, edi
$LN130@Lookup@36:
	mov	DWORD PTR _g$157878[ebp], edi
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 198  : 
; 199  : 				g->c = *c;
; 200  : 				g->style = t.style;

	mov	eax, DWORD PTR _t$157811[ebp]
	mov	dx, WORD PTR [ebx]
	push	eax
	lea	ecx, DWORD PTR [edi+4]
	push	ecx
	mov	WORD PTR [edi], dx
	call	??4Style@ssf@@QAEAAU01@ABU01@@Z

; 201  : 				g->scale = scale;

	mov	edx, DWORD PTR _scale$[ebp]
	mov	eax, DWORD PTR _scale$[ebp+4]

; 202  : 				g->vertical = vertical;

	mov	cl, BYTE PTR _vertical$[ebp]
	mov	DWORD PTR [edi+252], edx

; 203  : 				g->font = font;

	mov	edx, DWORD PTR _font$157821[ebp]
	mov	DWORD PTR [edi+256], eax
	mov	BYTE PTR [edi+260], cl
	mov	DWORD PTR [edi+264], edx

; 204  : 
; 205  : 				c_next = !c[1] && pos ? c_next = s->m_text.GetAt(pos).str[0] : c[1];

	movzx	eax, WORD PTR [ebx+2]
	test	ax, ax
	jne	SHORT $LN131@Lookup@36
	mov	ecx, DWORD PTR _pos$[ebp]
	test	ecx, ecx
	je	SHORT $LN131@Lookup@36
	mov	eax, DWORD PTR [ecx+240]
	cmp	DWORD PTR [eax-12], 0
	jl	$LN2233@Lookup@36
	movzx	esi, WORD PTR [eax]
	jmp	SHORT $LN132@Lookup@36
$LN131@Lookup@36:
	mov	esi, eax
$LN132@Lookup@36:

; 206  : 				Arabic::Replace(g->c, c_prev, c_next);

	movzx	edx, WORD PTR [edi]
	lea	eax, DWORD PTR [edx-1536]
	mov	ecx, 255				; 000000ffH
	cmp	ax, cx
	ja	$LN363@Lookup@36
	mov	eax, DWORD PTR _c_prev$[ebp]
	add	eax, -1536				; fffffa00H
	cmp	ax, cx
	setbe	cl
	add	esi, -1536				; fffffa00H
	mov	eax, 255				; 000000ffH
	cmp	si, ax
	setbe	al
	test	cl, cl
	je	SHORT $LN345@Lookup@36
	xor	ecx, ecx
	test	al, al
	sete	cl
	add	ecx, 2
	jmp	SHORT $LN346@Lookup@36
$LN345@Lookup@36:
	xor	ecx, ecx
	test	al, al
	setne	cl
$LN346@Lookup@36:
	lea	eax, DWORD PTR [edx-1536]
	mov	esi, 255				; 000000ffH
	cmp	ax, si
	ja	SHORT $LN363@Lookup@36
	mov	eax, edx
	lea	eax, DWORD PTR [eax+eax*2-4608]
	lea	eax, DWORD PTR _ArabicForms[eax*4]
	cmp	ecx, 3
	ja	SHORT $LN363@Lookup@36
	jmp	DWORD PTR $LN2455@Lookup@36[ecx*4]
$LN362@Lookup@36:
	mov	cx, WORD PTR [eax+6]
	jmp	SHORT $LN2450@Lookup@36
$LN361@Lookup@36:
	mov	dx, WORD PTR [eax]
	mov	WORD PTR [edi], dx
	jmp	SHORT $LN363@Lookup@36
$LN360@Lookup@36:
	mov	ax, WORD PTR [eax+2]
	mov	WORD PTR [edi], ax
	jmp	SHORT $LN363@Lookup@36
$LN359@Lookup@36:
	mov	cx, WORD PTR [eax+4]
$LN2450@Lookup@36:
	mov	WORD PTR [edi], cx
$LN363@Lookup@36:

; 207  : 				c_prev = c[0];

	movzx	edx, WORD PTR [ebx]

; 208  : 
; 209  : 				CSize extent;
; 210  : 				GetTextExtentPoint32W(m_hDC, &g->c, 1, &extent);

	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR _extent$157879[ebp]
	push	eax
	push	1
	mov	DWORD PTR _c_prev$[ebp], edx
	mov	edx, DWORD PTR [ecx+4]
	push	edi
	xor	esi, esi
	push	edx
	mov	DWORD PTR _extent$157879[ebp], esi
	mov	DWORD PTR _extent$157879[ebp+4], esi
	call	DWORD PTR __imp__GetTextExtentPoint32W@16

; 211  : 				ASSERT(extent.cx >= 0 && extent.cy >= 0);
; 212  : 
; 213  : 				if(vertical) 

	cmp	BYTE PTR _vertical$[ebp], 0

; 214  : 				{
; 215  : 					g->spacing = (int)(t.style.font.spacing * scale.cy + 0.5);

	mov	eax, DWORD PTR _t$157811[ebp]
	fld	DWORD PTR [eax+136]
	je	SHORT $LN443@Lookup@36
	fmul	DWORD PTR _scale$[ebp+4]
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	DWORD PTR [edi+280], eax

; 216  : 					g->ascent = extent.cx / 2;

	mov	eax, DWORD PTR _extent$157879[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR [edi+268], eax

; 217  : 					g->descent = extent.cx - g->ascent;

	mov	ecx, DWORD PTR _extent$157879[ebp]
	sub	ecx, eax
	mov	DWORD PTR [edi+272], ecx

; 218  : 					g->width = extent.cy;

	mov	edx, DWORD PTR _extent$157879[ebp+4]
	mov	DWORD PTR [edi+276], edx

; 219  : 
; 220  : 					// TESTME
; 221  : 					if(g->c == Text::SP)

	cmp	WORD PTR [edi], 32			; 00000020H
	jne	SHORT $LN475@Lookup@36

; 222  : 					{
; 223  : 						g->width /= 2;

	mov	eax, edx
	cdq
	sub	eax, edx
	sar	eax, 1

; 224  : 					}
; 225  : 				}
; 226  : 				else

	jmp	SHORT $LN2451@Lookup@36

; 227  : 				{
; 228  : 					g->spacing = (int)(t.style.font.spacing * scale.cx + 0.5);

$LN443@Lookup@36:
	fmul	DWORD PTR _scale$[ebp]
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	DWORD PTR [edi+280], eax

; 229  : 					g->ascent = tm.tmAscent;

	mov	eax, DWORD PTR _font$157821[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edi+268], ecx

; 230  : 					g->descent = tm.tmDescent;

	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR [edi+272], edx

; 231  : 					g->width = extent.cx;

	mov	eax, DWORD PTR _extent$157879[ebp]
$LN2451@Lookup@36:
	mov	DWORD PTR [edi+276], eax

; 232  : 				}
; 233  : 
; 234  : 				if(g->c == Text::LSEP)

$LN475@Lookup@36:
	movzx	eax, WORD PTR [edi]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN515@Lookup@36

; 235  : 				{
; 236  : 					g->spacing = 0;

	mov	DWORD PTR [edi+280], esi

; 237  : 					g->width = 0;

	mov	DWORD PTR [edi+276], esi

; 238  : 					g->ascent /= 2;

	mov	eax, DWORD PTR [edi+268]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR [edi+268], eax

; 239  : 					g->descent /= 2;

	mov	eax, DWORD PTR [edi+272]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR [edi+272], eax

; 240  : 				}
; 241  : 				else

	jmp	SHORT $LN535@Lookup@36

; 242  : 				{
; 243  : 					GlyphPath* path = m_gpc.Create(m_hDC, font, g->c);

$LN515@Lookup@36:
	mov	ecx, DWORD PTR _font$157821[ebp]
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	push	ecx
	push	edx
	add	eax, 88					; 00000058H
	push	eax
	call	?Create@GlyphPathCache@ssf@@QAEPAVGlyphPath@2@PAUHDC__@@PBVFontWrapper@2@_W@Z ; ssf::GlyphPathCache::Create
	mov	esi, eax

; 244  : 					if(!path) {ASSERT(0); continue;}

	test	esi, esi
	jne	SHORT $LN532@Lookup@36
	mov	BYTE PTR __$EHRec$[ebp+8], al
	mov	eax, edi
	call	??1Glyph@ssf@@QAE@XZ
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	jmp	SHORT $LN101@Lookup@36

; 245  : 					g->path = *path;

$LN532@Lookup@36:
	lea	eax, DWORD PTR [esi+4]
	push	eax
	lea	eax, DWORD PTR [edi+300]
	call	?Copy@?$CAtlArray@EV?$CElementTraits@E@ATL@@@ATL@@QAEXABV12@@Z ; ATL::CAtlArray<unsigned char,ATL::CElementTraits<unsigned char> >::Copy
	add	esi, 20					; 00000014H
	push	esi
	lea	eax, DWORD PTR [edi+316]
	call	?Copy@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEXABV12@@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::Copy
$LN535@Lookup@36:

; 246  : 				}
; 247  : 
; 248  : 				glyphs.AddTail(g);

	mov	ebx, DWORD PTR _glyphs$[ebp+4]
	lea	esi, DWORD PTR _glyphs$[ebp]
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode
	mov	eax, DWORD PTR _glyphs$[ebp+16]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax+8], edi
	mov	DWORD PTR _glyphs$[ebp+16], ecx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _glyphs$[ebp+4]
	inc	DWORD PTR _glyphs$[ebp+8]
	test	ecx, ecx
	je	SHORT $LN538@Lookup@36
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN537@Lookup@36
$LN538@Lookup@36:
	mov	DWORD PTR _glyphs$[ebp], eax
$LN537@Lookup@36:

; 249  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ebx, DWORD PTR _c$157831[ebp]
	mov	DWORD PTR _glyphs$[ebp+4], eax
$LN101@Lookup@36:

; 192  : 
; 193  : 			const TEXTMETRIC& tm = font->GetTextMetric();
; 194  : 
; 195  : 			for(LPCWSTR c = t.str; *c; c++)

	add	ebx, 2
	cmp	WORD PTR [ebx], 0
	mov	DWORD PTR _c$157831[ebp], ebx
	jne	$LN102@Lookup@36
	mov	edi, DWORD PTR _pos$[ebp]
$LN100@Lookup@36:

; 250  : 
; 251  : 			SelectFont(m_hDC, hOldFont);

	mov	ecx, DWORD PTR _hOldFont$157826[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	ecx
	push	eax
	call	DWORD PTR __imp__SelectObject@8
$LN2288@Lookup@36:

; 160  : 		while(pos)

	test	edi, edi
	jne	$LL106@Lookup@36

; 605  : 
; 606  : 		return rs;

	mov	eax, DWORD PTR _glyphs$[ebp]
	xor	ebx, ebx
$LN105@Lookup@36:

; 252  : 		}
; 253  : 
; 254  : 		// break glyphs into rows
; 255  : 
; 256  : 		CAutoPtrList<Row> rows;

	xor	esi, esi
	mov	DWORD PTR _rows$[ebp], esi
	mov	DWORD PTR _rows$[ebp+4], ebx
	mov	DWORD PTR _rows$[ebp+8], ebx
	mov	DWORD PTR _rows$[ebp+12], ebx
	mov	DWORD PTR _rows$[ebp+16], ebx
	mov	DWORD PTR _rows$[ebp+20], 10		; 0000000aH

; 257  : 		CAutoPtr<Row> row;

	mov	DWORD PTR _row$[ebp], ebx
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 258  : 
; 259  : 		pos = glyphs.GetHeadPosition();

	mov	DWORD PTR _pos$[ebp], eax

; 260  : 		while(pos)

	cmp	eax, ebx
	je	$LN694@Lookup@36
	npad	4
$LL93@Lookup@36:

; 261  : 		{
; 262  : 			CAutoPtr<Glyph> g = glyphs.GetNext(pos);

	mov	eax, DWORD PTR _pos$[ebp]
	xor	ecx, ecx
	test	eax, eax
	setne	cl
	test	ecx, ecx
	je	$LN2234@Lookup@36
	mov	ecx, DWORD PTR [eax]
	mov	edi, DWORD PTR [eax+8]
	xor	esi, esi
	mov	DWORD PTR _pos$[ebp], ecx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR _g$158126[ebp], edi
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 263  : 			if(!row) row.Attach(new Row());

	cmp	DWORD PTR _row$[ebp], esi
	jne	SHORT $LN614@Lookup@36
	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, esi
	je	SHORT $LN133@Lookup@36
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], esi
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], esi
	mov	DWORD PTR [eax+16], esi
	mov	DWORD PTR [eax+20], 10			; 0000000aH
	mov	DWORD PTR [eax+36], esi
	mov	DWORD PTR [eax+32], esi
	mov	DWORD PTR [eax+28], esi
	mov	DWORD PTR [eax+24], esi
	jmp	SHORT $LN134@Lookup@36
$LN2233@Lookup@36:

; 204  : 
; 205  : 				c_next = !c[1] && pos ? c_next = s->m_text.GetAt(pos).str[0] : c[1];

	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN2457@Lookup@36:
$LN133@Lookup@36:

; 263  : 			if(!row) row.Attach(new Row());

	xor	eax, eax
$LN134@Lookup@36:
	mov	DWORD PTR _row$[ebp], eax

; 264  : 			WCHAR c = g->c;

$LN614@Lookup@36:
	movzx	edx, WORD PTR [edi]

; 265  : 			row->AddTail(g);

	mov	esi, DWORD PTR _row$[ebp]
	mov	ebx, DWORD PTR [esi+4]
	mov	DWORD PTR _c$158137[ebp], edx
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode
	mov	eax, esi
	mov	eax, DWORD PTR [eax+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN2380@Lookup@36
	xor	esi, esi
	mov	DWORD PTR _g$158126[ebp], esi
	mov	DWORD PTR [eax+8], edi
	jmp	SHORT $LN637@Lookup@36
$LN2380@Lookup@36:
	mov	esi, DWORD PTR _g$158126[ebp]
$LN637@Lookup@36:
	mov	edx, DWORD PTR _row$[ebp]
	mov	DWORD PTR [edx+16], ecx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [edx+4]
	mov	ebx, 1
	add	DWORD PTR [edx+8], ebx
	test	ecx, ecx
	je	SHORT $LN626@Lookup@36
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN625@Lookup@36
$LN626@Lookup@36:
	mov	DWORD PTR [edx], eax
$LN625@Lookup@36:

; 266  : 			if(c == Text::LSEP || !pos) rows.AddTail(row);

	cmp	WORD PTR _c$158137[ebp], 10		; 0000000aH
	mov	DWORD PTR [edx+4], eax
	je	SHORT $LN89@Lookup@36
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN650@Lookup@36
$LN89@Lookup@36:
	mov	edi, DWORD PTR _rows$[ebp+4]
	lea	esi, DWORD PTR _rows$[ebp]
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::GetFreeNode
	mov	eax, DWORD PTR _rows$[ebp+16]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _row$[ebp]
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR _rows$[ebp+16], ecx
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _rows$[ebp+4]
	add	DWORD PTR _rows$[ebp+8], ebx
	mov	DWORD PTR _row$[ebp], 0
	test	ecx, ecx
	je	SHORT $LN649@Lookup@36
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN648@Lookup@36
$LN649@Lookup@36:
	mov	DWORD PTR _rows$[ebp], eax
$LN648@Lookup@36:
	mov	esi, DWORD PTR _g$158126[ebp]
	mov	DWORD PTR _rows$[ebp+4], eax
$LN650@Lookup@36:

; 267  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	test	esi, esi
	je	SHORT $LN677@Lookup@36
	mov	eax, esi
	call	??1Glyph@ssf@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN677@Lookup@36:

; 260  : 		while(pos)

	cmp	DWORD PTR _pos$[ebp], 0
	jne	$LL93@Lookup@36

; 605  : 
; 606  : 		return rs;

	mov	esi, DWORD PTR _rows$[ebp]
	xor	ebx, ebx
$LN694@Lookup@36:

; 268  : 
; 269  : 		// kerning
; 270  : 
; 271  : 		if(s->m_direction.primary == _T("right")) // || s->m_direction.primary == _T("left")

	mov	eax, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	ecx, OFFSET ??_C@_1M@LLHNBKBP@?$AAr?$AAi?$AAg?$AAh?$AAt?$AA?$AA@
$LL2319@Lookup@36:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN2320@Lookup@36
	cmp	dx, bx
	je	SHORT $LN2321@Lookup@36
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN2320@Lookup@36
	add	eax, 4
	add	ecx, 4
	cmp	dx, bx
	jne	SHORT $LL2319@Lookup@36
$LN2321@Lookup@36:
	xor	eax, eax
	jmp	SHORT $LN2322@Lookup@36
$LN2320@Lookup@36:
	sbb	eax, eax
	sbb	eax, -1
$LN2322@Lookup@36:
	cmp	eax, ebx
	sete	al
	test	al, al
	je	$LN796@Lookup@36

; 272  : 		{
; 273  : 			for(POSITION rpos = rows.GetHeadPosition(); rpos; rows.GetNext(rpos))

	mov	eax, esi
	mov	DWORD PTR _rpos$158142[ebp], eax
	cmp	esi, ebx
	je	$LN796@Lookup@36
$LL716@Lookup@36:

; 274  : 			{
; 275  : 				Row* r = rows.GetAt(rpos);

	xor	edx, edx
	test	eax, eax
	setne	dl
	mov	DWORD PTR tv5525[ebp], edx
	test	edx, edx
	je	$LN2234@Lookup@36
	mov	ecx, DWORD PTR [eax+8]

; 276  : 
; 277  : 				POSITION gpos = r->GetHeadPosition();

	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR _gpos$158147[ebp], ecx

; 278  : 				while(gpos)

	test	ecx, ecx
	je	$LN86@Lookup@36
$LN84@Lookup@36:

; 279  : 				{
; 280  : 					Glyph* g1 = r->GetNext(gpos);

	mov	eax, DWORD PTR _gpos$158147[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _gpos$158147[ebp], eax

; 281  : 					if(!gpos) break;

	test	eax, eax
	je	$LN2370@Lookup@36

; 282  : 
; 283  : 					Glyph* g2 = r->GetAt(gpos);
; 284  : 					if(g1->font != g2->font || !g1->style.font.kerning || !g2->style.font.kerning)

	mov	esi, DWORD PTR [ecx+264]
	mov	edx, eax
	mov	ebx, DWORD PTR [edx+8]
	cmp	esi, DWORD PTR [ebx+264]
	jne	SHORT $LN84@Lookup@36
	cmp	BYTE PTR [ecx+152], 0
	je	SHORT $LN84@Lookup@36
	cmp	BYTE PTR [ebx+152], 0
	je	SHORT $LN84@Lookup@36

; 285  : 						continue;
; 286  : 
; 287  : 					if(int size = g1->font->GetKernAmount(g1->c, g2->c))

	movzx	ecx, WORD PTR [ecx]
	movzx	eax, WORD PTR [ebx]
	shl	ecx, 16					; 00000010H
	or	ecx, eax
	xor	edx, edx
	mov	eax, ecx
	div	DWORD PTR [esi+80]
	mov	esi, DWORD PTR [esi+72]
	xor	edi, edi
	test	esi, esi
	je	SHORT $LN2318@Lookup@36
	mov	eax, DWORD PTR [esi+edx*4]
	test	eax, eax
	je	SHORT $LN2318@Lookup@36
$LL770@Lookup@36:
	cmp	DWORD PTR [eax+12], ecx
	jne	SHORT $LN767@Lookup@36
	cmp	DWORD PTR [eax], ecx
	je	SHORT $LN764@Lookup@36
$LN767@Lookup@36:
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	jne	SHORT $LL770@Lookup@36
$LN2318@Lookup@36:
	xor	al, al
	jmp	SHORT $LN765@Lookup@36
$LN764@Lookup@36:
	mov	edi, DWORD PTR [eax+4]
	mov	al, 1
$LN765@Lookup@36:
	movzx	esi, al
	neg	esi
	sbb	esi, esi
	and	esi, edi
	je	SHORT $LN84@Lookup@36

; 288  : 					{
; 289  : 						g2->path.MovePoints(CPoint(size, 0));

	lea	eax, DWORD PTR [ebx+296]
	lea	edi, DWORD PTR $T758822[ebp]
	mov	DWORD PTR $T758822[ebp], esi
	mov	DWORD PTR $T758822[ebp+4], 0
	call	?MovePoints@GlyphPath@ssf@@QAEXABVCPoint@@@Z ; ssf::GlyphPath::MovePoints

; 290  : 						g2->width += size;

	add	DWORD PTR [ebx+276], esi
	jmp	$LN84@Lookup@36
$LN2370@Lookup@36:

; 278  : 				while(gpos)

	mov	eax, DWORD PTR _rpos$158142[ebp]
	mov	edx, DWORD PTR tv5525[ebp]
$LN86@Lookup@36:

; 272  : 		{
; 273  : 			for(POSITION rpos = rows.GetHeadPosition(); rpos; rows.GetNext(rpos))

	test	edx, edx
	je	$LN2234@Lookup@36
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _rpos$158142[ebp], eax
	test	eax, eax
	jne	$LL716@Lookup@36

; 605  : 
; 606  : 		return rs;

	xor	ebx, ebx

; 291  : 					}
; 292  : 				}
; 293  : 			}				
; 294  : 		}
; 295  : 
; 296  : 		// wrap rows
; 297  : 
; 298  : 		if(s->m_wrap == _T("normal") || s->m_wrap == _T("even"))

$LN796@Lookup@36:
	mov	ecx, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [ecx+36]
	mov	edx, OFFSET ??_C@_1O@DIMONLGD@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AA?$AA@
	mov	ecx, eax
$LL2323@Lookup@36:
	mov	si, WORD PTR [ecx]
	cmp	si, WORD PTR [edx]
	jne	SHORT $LN2324@Lookup@36
	cmp	si, bx
	je	SHORT $LN2325@Lookup@36
	mov	si, WORD PTR [ecx+2]
	cmp	si, WORD PTR [edx+2]
	jne	SHORT $LN2324@Lookup@36
	add	ecx, 4
	add	edx, 4
	cmp	si, bx
	jne	SHORT $LL2323@Lookup@36
$LN2325@Lookup@36:
	xor	ecx, ecx
	jmp	SHORT $LN2326@Lookup@36
$LN2324@Lookup@36:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN2326@Lookup@36:
	cmp	ecx, ebx
	sete	cl
	test	cl, cl
	jne	SHORT $LN77@Lookup@36
	mov	ecx, OFFSET ??_C@_19MCEENOHD@?$AAe?$AAv?$AAe?$AAn?$AA?$AA@
	npad	2
$LL2327@Lookup@36:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN2328@Lookup@36
	cmp	dx, bx
	je	SHORT $LN2329@Lookup@36
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN2328@Lookup@36
	add	eax, 4
	add	ecx, 4
	cmp	dx, bx
	jne	SHORT $LL2327@Lookup@36
$LN2329@Lookup@36:
	xor	eax, eax
	jmp	SHORT $LN2330@Lookup@36
$LN2328@Lookup@36:
	sbb	eax, eax
	sbb	eax, -1
$LN2330@Lookup@36:
	cmp	eax, ebx
	sete	al
	test	al, al
	je	$LN74@Lookup@36
$LN77@Lookup@36:

; 299  : 		{
; 300  : 			int maxwidth = abs((int)(vertical ? frame.Height() : frame.Width()));

	cmp	BYTE PTR _vertical$[ebp], 0
	je	SHORT $LN135@Lookup@36
	mov	eax, DWORD PTR _frame$[ebp+12]
	sub	eax, DWORD PTR _frame$[ebp+4]
	jmp	SHORT $LN136@Lookup@36
$LN135@Lookup@36:
	mov	eax, DWORD PTR _frame$[ebp+8]
	sub	eax, DWORD PTR _frame$[ebp]
$LN136@Lookup@36:
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _maxwidth$158163[ebp], eax

; 301  : 			int minwidth = 0;
; 302  : 
; 303  : 			for(POSITION rpos = rows.GetHeadPosition(); rpos; rows.GetNext(rpos))

	mov	eax, DWORD PTR _rows$[ebp]
	mov	DWORD PTR _minwidth$158165[ebp], ebx
	mov	DWORD PTR _rpos$158166[ebp], eax
	cmp	eax, ebx
	je	$LN74@Lookup@36
$LN846@Lookup@36:

; 304  : 			{
; 305  : 				Row* r = rows.GetAt(rpos);

	xor	eax, eax
	cmp	DWORD PTR _rpos$158166[ebp], ebx
	setne	al
	mov	DWORD PTR tv5700[ebp], eax
	cmp	eax, ebx
	je	$LN2234@Lookup@36
	mov	edx, DWORD PTR _rpos$158166[ebp]
	mov	edi, DWORD PTR [edx+8]

; 306  : 				
; 307  : 				POSITION brpos = NULL;
; 308  : 
; 309  : 				if(s->m_wrap == _T("even"))

	mov	eax, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	DWORD PTR _r$158170[ebp], edi
	mov	DWORD PTR _brpos$158171[ebp], ebx
	mov	ecx, OFFSET ??_C@_19MCEENOHD@?$AAe?$AAv?$AAe?$AAn?$AA?$AA@
$LL2331@Lookup@36:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN2332@Lookup@36
	cmp	dx, bx
	je	SHORT $LN2333@Lookup@36
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN2332@Lookup@36
	add	eax, 4
	add	ecx, 4
	cmp	dx, bx
	jne	SHORT $LL2331@Lookup@36
$LN2333@Lookup@36:
	xor	eax, eax
	jmp	SHORT $LN2334@Lookup@36
$LN2332@Lookup@36:
	sbb	eax, eax
	sbb	eax, -1
$LN2334@Lookup@36:
	cmp	eax, ebx
	sete	al
	test	al, al
	je	SHORT $LN69@Lookup@36

; 310  : 				{
; 311  : 					int fullwidth = 0;
; 312  : 
; 313  : 					for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	mov	ecx, DWORD PTR [edi]
	xor	eax, eax
	cmp	ecx, ebx
	je	SHORT $LN70@Lookup@36
	npad	3
$LL898@Lookup@36:

; 314  : 					{
; 315  : 						const Glyph* g = r->GetAt(gpos);

	xor	edx, edx
	cmp	ecx, ebx
	setne	dl
	mov	esi, edx
	cmp	esi, ebx
	je	$LN2234@Lookup@36
	mov	edx, DWORD PTR [ecx+8]

; 316  : 
; 317  : 						fullwidth += g->width + g->spacing;

	mov	ebx, DWORD PTR [edx+280]
	add	ebx, DWORD PTR [edx+276]
	add	eax, ebx
	xor	ebx, ebx
	cmp	esi, ebx
	je	$LN2234@Lookup@36

; 310  : 				{
; 311  : 					int fullwidth = 0;
; 312  : 
; 313  : 					for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, ebx
	jne	SHORT $LL898@Lookup@36
$LN70@Lookup@36:

; 318  : 					}
; 319  : 
; 320  : 					fullwidth = abs(fullwidth);
; 321  : 					
; 322  : 					if(fullwidth > maxwidth)

	mov	esi, DWORD PTR _maxwidth$158163[ebp]
	cdq
	mov	ecx, eax
	xor	ecx, edx
	sub	ecx, edx
	cmp	ecx, esi
	jle	SHORT $LN69@Lookup@36

; 323  : 					{
; 324  : 						maxwidth = fullwidth / ((fullwidth / maxwidth) + 1);

	mov	eax, ecx
	cdq
	idiv	esi
	lea	esi, DWORD PTR [eax+1]
	mov	eax, ecx
	cdq
	idiv	esi
	mov	DWORD PTR _maxwidth$158163[ebp], eax

; 325  : 						minwidth = maxwidth;

	mov	DWORD PTR _minwidth$158165[ebp], eax
$LN69@Lookup@36:

; 326  : 					}
; 327  : 				}
; 328  : 
; 329  : 				int width = 0;
; 330  : 
; 331  : 				for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	mov	edi, DWORD PTR [edi]
	mov	DWORD PTR _width$158180[ebp], ebx
	mov	DWORD PTR _gpos$158181[ebp], edi
	cmp	edi, ebx
	je	$LN75@Lookup@36
	jmp	SHORT $LN926@Lookup@36
$LL2389@Lookup@36:
	mov	edi, DWORD PTR _gpos$158181[ebp]
$LN926@Lookup@36:

; 332  : 				{
; 333  : 					const Glyph* g = r->GetAt(gpos);

	xor	eax, eax
	cmp	edi, ebx
	setne	al
	cmp	eax, ebx
	je	$LN2234@Lookup@36
	mov	eax, DWORD PTR _gpos$158181[ebp]
	mov	esi, DWORD PTR [eax+8]

; 334  : 
; 335  : 					width += g->width + g->spacing;

	mov	ecx, DWORD PTR [esi+280]
	add	ecx, DWORD PTR [esi+276]

; 336  : 
; 337  : 					if(brpos && abs(width) > maxwidth && g->c != Text::SP)

	mov	edi, DWORD PTR _brpos$158171[ebp]
	add	DWORD PTR _width$158180[ebp], ecx
	cmp	edi, ebx
	je	$LN65@Lookup@36
	mov	eax, DWORD PTR _width$158180[ebp]
	cdq
	xor	eax, edx
	sub	eax, edx
	cmp	eax, DWORD PTR _maxwidth$158163[ebp]
	jle	$LN65@Lookup@36
	cmp	WORD PTR [esi], 32			; 00000020H
	je	$LN65@Lookup@36

; 338  : 					{
; 339  : 						row.Attach(new Row());

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN137@Lookup@36
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	DWORD PTR [eax+16], ebx
	mov	DWORD PTR [eax+20], 10			; 0000000aH
	mov	DWORD PTR [eax+36], ebx
	mov	DWORD PTR [eax+32], ebx
	mov	DWORD PTR [eax+28], ebx
	mov	DWORD PTR [eax+24], ebx
	mov	esi, eax
	jmp	SHORT $LN138@Lookup@36
$LN137@Lookup@36:
	xor	esi, esi
$LN138@Lookup@36:

; 340  : 						POSITION next = brpos;
; 341  : 						r->GetNext(next);

	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR _row$[ebp], esi
	mov	DWORD PTR _next$158191[ebp], edx
$LN64@Lookup@36:

; 342  : 						do {row->AddHead(r->GetPrev(brpos));} while(brpos);

	xor	eax, eax
	cmp	DWORD PTR _brpos$158171[ebp], eax
	setne	al
	test	eax, eax
	je	$LN2234@Lookup@36
	mov	edi, DWORD PTR _brpos$158171[ebp]
	mov	eax, DWORD PTR [edi+4]
	mov	ebx, DWORD PTR [esi]
	mov	DWORD PTR _brpos$158171[ebp], eax
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN1000@Lookup@36
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [edi+8], 0
	mov	DWORD PTR [eax+8], edx
$LN1000@Lookup@36:
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], ebx
	mov	ecx, DWORD PTR [esi]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN989@Lookup@36
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN988@Lookup@36
$LN989@Lookup@36:
	mov	DWORD PTR [esi+4], eax
$LN988@Lookup@36:
	cmp	DWORD PTR _brpos$158171[ebp], 0
	mov	DWORD PTR [esi], eax
	jne	SHORT $LN64@Lookup@36

; 343  : 						rows.InsertBefore(rpos, row);

	mov	eax, DWORD PTR _rpos$158166[ebp]
	lea	ecx, DWORD PTR _row$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _rows$[ebp]
	call	?InsertBefore@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEPAU__POSITION@@PAU3@AAV?$CAutoPtr@VRow@ssf@@@2@@Z ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::InsertBefore

; 344  : 						while(!r->IsEmpty() && r->GetHeadPosition() != next) r->RemoveHeadNoReturn();

	mov	edi, DWORD PTR _r$158170[ebp]
	cmp	DWORD PTR [edi+8], 0
	mov	ebx, DWORD PTR _next$158191[ebp]
	je	SHORT $LN60@Lookup@36
$LL61@Lookup@36:
	mov	esi, DWORD PTR [edi]
	cmp	esi, ebx
	je	SHORT $LN60@Lookup@36
	xor	eax, eax
	xor	ecx, ecx
	cmp	esi, ecx
	setne	al
	cmp	eax, ecx
	je	$LN2234@Lookup@36
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	cmp	eax, ecx
	je	SHORT $LN1016@Lookup@36
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN1015@Lookup@36
$LN1016@Lookup@36:
	mov	DWORD PTR [edi+4], ecx
$LN1015@Lookup@36:
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR $T760674[ebp], eax
	cmp	eax, ecx
	je	SHORT $LN1049@Lookup@36
	call	??1Glyph@ssf@@QAE@XZ
	mov	edx, DWORD PTR $T760674[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1049@Lookup@36:
	mov	DWORD PTR [esi+8], 0
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi], eax
	dec	DWORD PTR [edi+8]
	mov	DWORD PTR [edi+16], esi
	jne	SHORT $LN1029@Lookup@36
	mov	ecx, edi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
$LN1029@Lookup@36:
	cmp	DWORD PTR [edi+8], 0
	jne	SHORT $LL61@Lookup@36
$LN60@Lookup@36:

; 345  : 						g = r->GetAt(gpos = next);

	xor	eax, eax
	test	ebx, ebx
	setne	al
	mov	DWORD PTR _gpos$158181[ebp], ebx
	test	eax, eax
	je	$LN2234@Lookup@36
	mov	esi, DWORD PTR [ebx+8]

; 346  : 						width = g->width + g->spacing;

	mov	eax, DWORD PTR [esi+280]
	add	eax, DWORD PTR [esi+276]
	xor	ebx, ebx
	mov	DWORD PTR _width$158180[ebp], eax
$LN65@Lookup@36:

; 347  : 					}
; 348  : 
; 349  : 					if(abs(width) >= minwidth)

	mov	eax, DWORD PTR _width$158180[ebp]
	cdq
	xor	eax, edx
	sub	eax, edx
	cmp	eax, DWORD PTR _minwidth$158165[ebp]
	jl	$LN67@Lookup@36

; 350  : 					{
; 351  : 						if(g->style.linebreak == _T("char")
; 352  : 						|| g->style.linebreak == _T("word") && g->c == Text::SP)

	mov	edi, DWORD PTR [esi+4]
	mov	ecx, OFFSET ??_C@_19CHDFCHBM@?$AAc?$AAh?$AAa?$AAr?$AA?$AA@
	mov	eax, edi
	npad	4
$LL2335@Lookup@36:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN2336@Lookup@36
	cmp	dx, bx
	je	SHORT $LN2337@Lookup@36
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN2336@Lookup@36
	add	eax, 4
	add	ecx, 4
	cmp	dx, bx
	jne	SHORT $LL2335@Lookup@36
$LN2337@Lookup@36:
	xor	eax, eax
	jmp	SHORT $LN2338@Lookup@36
$LN2336@Lookup@36:
	sbb	eax, eax
	sbb	eax, -1
$LN2338@Lookup@36:
	cmp	eax, ebx
	sete	al
	test	al, al
	jne	SHORT $LN57@Lookup@36
	mov	ecx, OFFSET ??_C@_19PDIFHHOB@?$AAw?$AAo?$AAr?$AAd?$AA?$AA@
	mov	eax, edi
	npad	5
$LL2339@Lookup@36:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN2340@Lookup@36
	cmp	dx, bx
	je	SHORT $LN2341@Lookup@36
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN2340@Lookup@36
	add	eax, 4
	add	ecx, 4
	cmp	dx, bx
	jne	SHORT $LL2339@Lookup@36
$LN2341@Lookup@36:
	xor	eax, eax
	jmp	SHORT $LN2342@Lookup@36
$LN2340@Lookup@36:
	sbb	eax, eax
	sbb	eax, -1
$LN2342@Lookup@36:
	cmp	eax, ebx
	sete	al
	test	al, al
	je	SHORT $LN67@Lookup@36
	cmp	WORD PTR [esi], 32			; 00000020H
	jne	SHORT $LN67@Lookup@36
$LN57@Lookup@36:

; 353  : 						{
; 354  : 							brpos = gpos;

	mov	ecx, DWORD PTR _gpos$158181[ebp]
	mov	DWORD PTR _brpos$158171[ebp], ecx
$LN67@Lookup@36:

; 326  : 					}
; 327  : 				}
; 328  : 
; 329  : 				int width = 0;
; 330  : 
; 331  : 				for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	mov	ecx, DWORD PTR _gpos$158181[ebp]
	xor	eax, eax
	cmp	ecx, ebx
	setne	al
	cmp	eax, ebx
	je	$LN2234@Lookup@36
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR _gpos$158181[ebp], ecx
	cmp	ecx, ebx
	jne	$LL2389@Lookup@36
$LN75@Lookup@36:

; 301  : 			int minwidth = 0;
; 302  : 
; 303  : 			for(POSITION rpos = rows.GetHeadPosition(); rpos; rows.GetNext(rpos))

	cmp	DWORD PTR tv5700[ebp], ebx
	je	$LN2234@Lookup@36
	mov	edx, DWORD PTR _rpos$158166[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _rpos$158166[ebp], eax
	cmp	eax, ebx
	jne	$LN846@Lookup@36
$LN74@Lookup@36:

; 355  : 						}
; 356  : 					}
; 357  : 				}
; 358  : 			}
; 359  : 		}
; 360  : 
; 361  : 		// trim rows
; 362  : 
; 363  : 		for(POSITION pos = rows.GetHeadPosition(); pos; rows.GetNext(pos))

	mov	eax, DWORD PTR _rows$[ebp]
	mov	DWORD PTR _pos$158203[ebp], eax
	cmp	eax, ebx
	je	$LN2384@Lookup@36
	npad	4
$LL1126@Lookup@36:

; 364  : 		{
; 365  : 			Row* r = rows.GetAt(pos);

	xor	ecx, ecx
	test	eax, eax
	setne	cl
	mov	DWORD PTR tv5739[ebp], ecx
	test	ecx, ecx
	je	$LN2234@Lookup@36
	mov	edi, DWORD PTR [eax+8]

; 366  : 
; 367  : 			while(!r->IsEmpty() && r->GetHead()->c == Text::SP)

	xor	ebx, ebx
	cmp	DWORD PTR [edi+8], ebx
	je	$LN55@Lookup@36
$LN53@Lookup@36:
	mov	eax, DWORD PTR [edi]
	xor	ecx, ecx
	cmp	eax, ebx
	setne	cl
	cmp	ecx, ebx
	je	$LN2234@Lookup@36
	mov	eax, DWORD PTR [eax+8]
	cmp	WORD PTR [eax], 32			; 00000020H
	jne	SHORT $LN2211@Lookup@36

; 368  : 				r->RemoveHead();

	lea	eax, DWORD PTR $T758829[ebp]
	push	eax
	call	?RemoveHead@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE?AV?$CAutoPtr@VGlyph@ssf@@@2@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveHead
	mov	esi, DWORD PTR $T758829[ebp]
	cmp	esi, ebx
	je	SHORT $LN1170@Lookup@36
	mov	eax, esi
	call	??1Glyph@ssf@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1170@Lookup@36:
	mov	DWORD PTR $T758829[ebp], ebx
	cmp	DWORD PTR [edi+8], ebx
	jne	SHORT $LN53@Lookup@36
$LN2211@Lookup@36:

; 369  : 
; 370  : 			while(!r->IsEmpty() && r->GetTail()->c == Text::SP)

	cmp	DWORD PTR [edi+8], ebx
	je	SHORT $LN55@Lookup@36
$LN51@Lookup@36:
	mov	eax, DWORD PTR [edi+4]
	xor	ecx, ecx
	cmp	eax, ebx
	setne	cl
	cmp	ecx, ebx
	je	$LN2234@Lookup@36
	mov	eax, DWORD PTR [eax+8]
	cmp	WORD PTR [eax], 32			; 00000020H
	jne	SHORT $LN55@Lookup@36

; 371  : 				r->RemoveTail();

	lea	ecx, DWORD PTR $T758830[ebp]
	push	ecx
	call	?RemoveTail@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAE?AV?$CAutoPtr@VGlyph@ssf@@@2@XZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveTail
	mov	esi, DWORD PTR $T758830[ebp]
	cmp	esi, ebx
	je	SHORT $LN1201@Lookup@36
	mov	eax, esi
	call	??1Glyph@ssf@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1201@Lookup@36:
	mov	DWORD PTR $T758830[ebp], ebx
	cmp	DWORD PTR [edi+8], ebx
	jne	SHORT $LN51@Lookup@36
$LN55@Lookup@36:

; 355  : 						}
; 356  : 					}
; 357  : 				}
; 358  : 			}
; 359  : 		}
; 360  : 
; 361  : 		// trim rows
; 362  : 
; 363  : 		for(POSITION pos = rows.GetHeadPosition(); pos; rows.GetNext(pos))

	cmp	DWORD PTR tv5739[ebp], ebx
	je	$LN2234@Lookup@36
	mov	edx, DWORD PTR _pos$158203[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _pos$158203[ebp], eax
	cmp	eax, ebx
	jne	$LL1126@Lookup@36
$LN2384@Lookup@36:

; 605  : 
; 606  : 		return rs;

	xor	esi, esi
	mov	DWORD PTR _glypsh2fill$[ebp], esi
	mov	DWORD PTR _glypsh2fill$[ebp+4], esi
	mov	DWORD PTR _glypsh2fill$[ebp+8], esi
	mov	DWORD PTR _glypsh2fill$[ebp+12], esi
	mov	DWORD PTR _glypsh2fill$[ebp+16], esi
	mov	DWORD PTR _glypsh2fill$[ebp+20], 10	; 0000000aH
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR _rows$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR _fill_width$[ebp], esi
	mov	DWORD PTR _pos$158380[ebp], edx
	cmp	edx, esi
	je	$LN47@Lookup@36
	npad	5

; 372  : 		}
; 373  : 
; 374  : 		// calc fill width for each glyph
; 375  : 
; 376  : 		CAtlList<Glyph*> glypsh2fill;
; 377  : 		int fill_id = 0;
; 378  : 		int fill_width = 0;
; 379  : 
; 380  : 		for(POSITION pos = rows.GetHeadPosition(); pos; rows.GetNext(pos))

$LL1218@Lookup@36:

; 381  : 		{
; 382  : 			Row* r = rows.GetAt(pos);

	xor	eax, eax
	test	edx, edx
	setne	al
	mov	edi, eax
	mov	DWORD PTR tv5831[ebp], edi
	test	edi, edi
	je	$LN2234@Lookup@36
	mov	eax, DWORD PTR [edx+8]

; 383  : 
; 384  : 			POSITION gpos = r->GetHeadPosition();

	mov	ecx, DWORD PTR [eax]

; 385  : 			while(gpos)

	test	ecx, ecx
	je	$LN48@Lookup@36
$LL46@Lookup@36:

; 386  : 			{
; 387  : 				Glyph* g = r->GetNext(gpos);

	xor	eax, eax
	test	ecx, ecx
	setne	al
	test	eax, eax
	je	$LN2234@Lookup@36

; 388  : 
; 389  : 				if(!glypsh2fill.IsEmpty() && fill_id && (g->style.fill.id != fill_id || !pos && !gpos))

	cmp	DWORD PTR _glypsh2fill$[ebp+8], 0
	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR _gpos$158385[ebp], ecx
	mov	DWORD PTR _g$158389[ebp], eax
	je	$LN44@Lookup@36
	test	ebx, ebx
	je	$LN44@Lookup@36
	cmp	DWORD PTR [eax+212], ebx
	jne	SHORT $LN43@Lookup@36
	test	edx, edx
	jne	$LN44@Lookup@36
	test	ecx, ecx
	jne	$LN44@Lookup@36
$LN43@Lookup@36:

; 390  : 				{
; 391  : 					int w = (int)(g->style.fill.width * fill_width + 0.5);

	fld	DWORD PTR [eax+232]
	fimul	DWORD PTR _fill_width$[ebp]
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	ecx, DWORD PTR _fill_width$[ebp]
	mov	DWORD PTR _w$158392[ebp], eax
	xor	ebx, ebx
	jmp	SHORT $LN42@Lookup@36
$LL2360@Lookup@36:
	mov	esi, DWORD PTR _glypsh2fill$[ebp+4]
$LN42@Lookup@36:

; 392  : 
; 393  : 					while(!glypsh2fill.IsEmpty())
; 394  : 					{
; 395  : 						Glyph* g = glypsh2fill.RemoveTail();

	xor	eax, eax
	cmp	esi, ebx
	setne	al
	cmp	eax, ebx
	je	$LN2234@Lookup@36
	mov	edi, DWORD PTR [esi+8]
	mov	eax, esi
	mov	esi, DWORD PTR [esi+4]
	mov	DWORD PTR _glypsh2fill$[ebp+4], esi
	cmp	esi, ebx
	je	SHORT $LN1255@Lookup@36
	mov	DWORD PTR [esi], ebx
	jmp	SHORT $LN1254@Lookup@36
$LN1255@Lookup@36:
	mov	DWORD PTR _glypsh2fill$[ebp], ebx
$LN1254@Lookup@36:
	mov	edx, DWORD PTR _glypsh2fill$[ebp+16]
	mov	DWORD PTR [eax], edx
	dec	DWORD PTR _glypsh2fill$[ebp+8]
	mov	DWORD PTR _glypsh2fill$[ebp+16], eax
	jne	SHORT $LN1282@Lookup@36
	mov	eax, DWORD PTR _glypsh2fill$[ebp+12]
	mov	DWORD PTR _glypsh2fill$[ebp], ebx
	mov	DWORD PTR _glypsh2fill$[ebp+4], ebx
	mov	DWORD PTR _glypsh2fill$[ebp+16], ebx
	cmp	eax, ebx
	je	SHORT $LN1282@Lookup@36
	npad	5
$LL1304@Lookup@36:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, esi
	cmp	esi, ebx
	jne	SHORT $LL1304@Lookup@36
	mov	ecx, DWORD PTR _fill_width$[ebp]
	mov	DWORD PTR _glypsh2fill$[ebp+12], ebx
$LN1282@Lookup@36:

; 396  : 						fill_width -= g->width;

	sub	ecx, DWORD PTR [edi+276]

; 397  : 						g->fill = w - fill_width;

	mov	eax, DWORD PTR _w$158392[ebp]
	sub	eax, ecx
	mov	DWORD PTR [edi+284], eax
	mov	DWORD PTR _fill_width$[ebp], ecx
	cmp	DWORD PTR _glypsh2fill$[ebp+8], ebx
	jne	SHORT $LL2360@Lookup@36

; 398  : 					}
; 399  : 
; 400  : 					ASSERT(glypsh2fill.IsEmpty());
; 401  : 					ASSERT(fill_width == 0);
; 402  : 
; 403  : 					glypsh2fill.RemoveAll();

	mov	eax, DWORD PTR _glypsh2fill$[ebp+12]
	xor	esi, esi
	mov	DWORD PTR _glypsh2fill$[ebp], ebx
	mov	DWORD PTR _glypsh2fill$[ebp+4], esi
	mov	DWORD PTR _glypsh2fill$[ebp+16], ebx
	cmp	eax, ebx
	je	SHORT $LN1309@Lookup@36
$LL1345@Lookup@36:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, esi
	cmp	esi, ebx
	jne	SHORT $LL1345@Lookup@36
	mov	esi, DWORD PTR _glypsh2fill$[ebp+4]
	mov	DWORD PTR _glypsh2fill$[ebp+12], ebx
$LN1309@Lookup@36:

; 404  : 					fill_width = 0;

	mov	eax, DWORD PTR _g$158389[ebp]
	mov	ecx, DWORD PTR _gpos$158385[ebp]
	mov	edx, DWORD PTR _pos$158380[ebp]
	mov	DWORD PTR _fill_width$[ebp], ebx
$LN44@Lookup@36:

; 405  : 				}
; 406  : 
; 407  : 				fill_id = g->style.fill.id;

	mov	ebx, DWORD PTR [eax+212]

; 408  : 
; 409  : 				if(g->style.fill.id)

	test	ebx, ebx
	je	SHORT $LN40@Lookup@36

; 410  : 				{
; 411  : 					glypsh2fill.AddTail(g);

	mov	edi, esi
	lea	esi, DWORD PTR _glypsh2fill$[ebp]
	call	?GetFreeNode@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@AAEXXZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::GetFreeNode
	mov	esi, DWORD PTR _glypsh2fill$[ebp+16]
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _g$158389[ebp]
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR _glypsh2fill$[ebp+16], eax
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi], 0
	mov	eax, DWORD PTR _glypsh2fill$[ebp+4]
	inc	DWORD PTR _glypsh2fill$[ebp+8]
	test	eax, eax
	je	SHORT $LN1349@Lookup@36
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN1348@Lookup@36
$LN1349@Lookup@36:
	mov	DWORD PTR _glypsh2fill$[ebp], esi
$LN1348@Lookup@36:

; 412  : 					fill_width += g->width;

	mov	edx, DWORD PTR _pos$158380[ebp]
	mov	DWORD PTR _glypsh2fill$[ebp+4], esi
	mov	ecx, DWORD PTR [ecx+276]
	add	DWORD PTR _fill_width$[ebp], ecx
	mov	ecx, DWORD PTR _gpos$158385[ebp]
$LN40@Lookup@36:

; 385  : 			while(gpos)

	test	ecx, ecx
	jne	$LL46@Lookup@36
	mov	edi, DWORD PTR tv5831[ebp]
$LN48@Lookup@36:

; 372  : 		}
; 373  : 
; 374  : 		// calc fill width for each glyph
; 375  : 
; 376  : 		CAtlList<Glyph*> glypsh2fill;
; 377  : 		int fill_id = 0;
; 378  : 		int fill_width = 0;
; 379  : 
; 380  : 		for(POSITION pos = rows.GetHeadPosition(); pos; rows.GetNext(pos))

	test	edi, edi
	je	$LN2234@Lookup@36
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR _pos$158380[ebp], edx
	test	edx, edx
	jne	$LL1218@Lookup@36
$LN47@Lookup@36:

; 413  : 				}
; 414  : 			}
; 415  : 		}
; 416  : 
; 417  : 		// calc row sizes and total subtitle size
; 418  : 
; 419  : 		CSize size(0, 0);
; 420  : 
; 421  : 		if(s->m_direction.secondary == _T("left") || s->m_direction.secondary == _T("up"))

	mov	edx, DWORD PTR _s$[ebp]
	mov	esi, DWORD PTR [edx+32]
	xor	edi, edi
	mov	DWORD PTR _size$[ebp], edi
	mov	DWORD PTR _size$[ebp+4], edi
	mov	ecx, OFFSET ??_C@_19HFFFAGCE@?$AAl?$AAe?$AAf?$AAt?$AA?$AA@
	mov	eax, esi
	npad	5
$LL2343@Lookup@36:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN2344@Lookup@36
	cmp	dx, di
	je	SHORT $LN2345@Lookup@36
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN2344@Lookup@36
	add	eax, 4
	add	ecx, 4
	cmp	dx, di
	jne	SHORT $LL2343@Lookup@36
$LN2345@Lookup@36:
	xor	eax, eax
	jmp	SHORT $LN2346@Lookup@36
$LN2344@Lookup@36:
	sbb	eax, eax
	sbb	eax, -1
$LN2346@Lookup@36:
	cmp	eax, edi
	sete	al
	test	al, al
	jne	SHORT $LN38@Lookup@36
	mov	ecx, OFFSET ??_C@_15HOONGCLC@?$AAu?$AAp?$AA?$AA@
	mov	eax, esi
	npad	5
$LL2347@Lookup@36:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN2348@Lookup@36
	cmp	dx, di
	je	SHORT $LN2349@Lookup@36
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN2348@Lookup@36
	add	eax, 4
	add	ecx, 4
	cmp	dx, di
	jne	SHORT $LL2347@Lookup@36
$LN2349@Lookup@36:
	xor	eax, eax
	jmp	SHORT $LN2350@Lookup@36
$LN2348@Lookup@36:
	sbb	eax, eax
	sbb	eax, -1
$LN2350@Lookup@36:
	cmp	eax, edi
	sete	al
	test	al, al
	je	SHORT $LN39@Lookup@36
$LN38@Lookup@36:

; 422  : 			ReverseList(rows);

	lea	eax, DWORD PTR _rows$[ebp]
	call	??$ReverseList@V?$CAutoPtrList@VRow@ssf@@@ATL@@@ssf@@YAXAAV?$CAutoPtrList@VRow@ssf@@@ATL@@@Z ; ssf::ReverseList<ATL::CAutoPtrList<ssf::Row> >
$LN39@Lookup@36:

; 423  : 
; 424  : 		for(POSITION pos = rows.GetHeadPosition(); pos; rows.GetNext(pos))

	mov	eax, DWORD PTR _rows$[ebp]
	mov	DWORD PTR _pos$158409[ebp], eax
	cmp	eax, edi
	je	$LN35@Lookup@36
$LL1429@Lookup@36:

; 425  : 		{
; 426  : 			Row* r = rows.GetAt(pos);

	mov	eax, DWORD PTR _pos$158409[ebp]
	xor	ecx, ecx
	test	eax, eax
	setne	cl
	mov	DWORD PTR tv5943[ebp], ecx
	test	ecx, ecx
	je	$LN2234@Lookup@36
	mov	esi, DWORD PTR [eax+8]

; 427  : 
; 428  : 			if(s->m_direction.primary == _T("left") || s->m_direction.primary == _T("up"))

	mov	eax, DWORD PTR _s$[ebp]
	mov	edi, DWORD PTR [eax+28]
	mov	ecx, OFFSET ??_C@_19HFFFAGCE@?$AAl?$AAe?$AAf?$AAt?$AA?$AA@
	mov	eax, edi
$LL2351@Lookup@36:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN2352@Lookup@36
	test	dx, dx
	je	SHORT $LN2353@Lookup@36
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN2352@Lookup@36
	add	eax, 4
	add	ecx, 4
	test	dx, dx
	jne	SHORT $LL2351@Lookup@36
$LN2353@Lookup@36:
	xor	eax, eax
	jmp	SHORT $LN2354@Lookup@36
$LN2352@Lookup@36:
	sbb	eax, eax
	sbb	eax, -1
$LN2354@Lookup@36:
	test	eax, eax
	sete	al
	test	al, al
	jne	SHORT $LN33@Lookup@36
	mov	ecx, OFFSET ??_C@_15HOONGCLC@?$AAu?$AAp?$AA?$AA@
	mov	eax, edi
$LL2355@Lookup@36:
	mov	dx, WORD PTR [eax]
	cmp	dx, WORD PTR [ecx]
	jne	SHORT $LN2356@Lookup@36
	test	dx, dx
	je	SHORT $LN2357@Lookup@36
	mov	dx, WORD PTR [eax+2]
	cmp	dx, WORD PTR [ecx+2]
	jne	SHORT $LN2356@Lookup@36
	add	eax, 4
	add	ecx, 4
	test	dx, dx
	jne	SHORT $LL2355@Lookup@36
$LN2357@Lookup@36:
	xor	eax, eax
	jmp	SHORT $LN2358@Lookup@36
$LN2356@Lookup@36:
	sbb	eax, eax
	sbb	eax, -1
$LN2358@Lookup@36:
	test	eax, eax
	sete	al
	test	al, al
	je	SHORT $LN34@Lookup@36
$LN33@Lookup@36:

; 429  : 				ReverseList(*r);

	mov	eax, esi
	call	??$ReverseList@VRow@ssf@@@ssf@@YAXAAVRow@0@@Z ; ssf::ReverseList<ssf::Row>
$LN34@Lookup@36:

; 430  : 
; 431  : 			int w = 0, h = 0;
; 432  : 
; 433  : 			r->width = 0;
; 434  : 
; 435  : 			for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	mov	edi, DWORD PTR [esi]
	xor	ebx, ebx
	mov	DWORD PTR _h$158421[ebp], ebx
	mov	DWORD PTR [esi+36], ebx
	cmp	edi, ebx
	je	$LN30@Lookup@36
	fld	QWORD PTR __real@3fe0000000000000
$LN1505@Lookup@36:

; 436  : 			{
; 437  : 				const Glyph* g = r->GetAt(gpos);

	xor	eax, eax
	test	edi, edi
	setne	al
	mov	DWORD PTR tv5919[ebp], eax
	test	eax, eax
	je	$LN2418@Lookup@36
	mov	eax, DWORD PTR [edi+8]

; 438  : 
; 439  : 				w += g->width;

	mov	ecx, DWORD PTR [eax+276]
	add	ebx, ecx
	mov	DWORD PTR _w$158420[ebp], ebx

; 440  : 				if(gpos) w += g->spacing;

	test	edi, edi
	je	SHORT $LN29@Lookup@36
	add	ebx, DWORD PTR [eax+280]
	mov	DWORD PTR _w$158420[ebp], ebx
$LN29@Lookup@36:

; 441  : 				h = max(h, g->ascent + g->descent);

	mov	edx, DWORD PTR [eax+268]
	add	edx, DWORD PTR [eax+272]
	cmp	DWORD PTR _h$158421[ebp], edx
	jg	SHORT $LN140@Lookup@36
	mov	DWORD PTR _h$158421[ebp], edx
$LN140@Lookup@36:

; 442  : 
; 443  : 				r->width += g->width;

	add	DWORD PTR [esi+36], ecx
	mov	ecx, DWORD PTR [esi+36]

; 444  : 				if(gpos) r->width += g->spacing;

	test	edi, edi
	je	SHORT $LN28@Lookup@36
	mov	edx, DWORD PTR [eax+280]
	add	edx, ecx
	mov	DWORD PTR [esi+36], edx
$LN28@Lookup@36:

; 445  : 				r->ascent = max(r->ascent, g->ascent);

	mov	ecx, DWORD PTR [esi+24]
	mov	edx, DWORD PTR [eax+268]
	cmp	ecx, edx
	jg	SHORT $LN142@Lookup@36
	mov	ecx, edx
$LN142@Lookup@36:
	mov	DWORD PTR [esi+24], ecx

; 446  : 				r->descent = max(r->descent, g->descent);

	mov	ecx, DWORD PTR [esi+28]
	mov	edx, DWORD PTR [eax+272]
	cmp	ecx, edx
	jg	SHORT $LN144@Lookup@36
	mov	ecx, edx
$LN144@Lookup@36:

; 447  : 				r->border = max(r->border, g->GetBackgroundSize());

	fild	DWORD PTR [esi+32]
	mov	DWORD PTR [esi+28], ecx
	fstp	DWORD PTR tv5896[ebp]
	fld	DWORD PTR [eax+256]
	fadd	DWORD PTR [eax+252]
	fmul	DWORD PTR [eax+172]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR tv5914[ebp]
	fld	DWORD PTR tv5896[ebp]
	fld	DWORD PTR tv5914[ebp]
	fcom	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN2438@Lookup@36
	fstp	ST(0)
	jmp	SHORT $LN2453@Lookup@36
$LN2438@Lookup@36:
	fstp	ST(1)
$LN2453@Lookup@36:
	fstp	DWORD PTR tv1534[ebp]
	fld	DWORD PTR tv1534[ebp]
	call	__ftol2_sse
	cmp	DWORD PTR tv5919[ebp], 0
	mov	DWORD PTR [esi+32], eax
	je	$LN2418@Lookup@36

; 430  : 
; 431  : 			int w = 0, h = 0;
; 432  : 
; 433  : 			r->width = 0;
; 434  : 
; 435  : 			for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	mov	edi, DWORD PTR [edi]
	mov	ebx, DWORD PTR _w$158420[ebp]
	test	edi, edi
	jne	$LN1505@Lookup@36
	fstp	ST(0)
$LN30@Lookup@36:

; 448  : 			}
; 449  : 
; 450  : 			for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN25@Lookup@36
$LL1537@Lookup@36:

; 451  : 			{
; 452  : 				Glyph* g = r->GetAt(gpos);

	xor	edx, edx
	test	eax, eax
	setne	dl
	test	edx, edx
	je	$LN2234@Lookup@36
	mov	ecx, DWORD PTR [eax+8]

; 453  : 				g->row_ascent = r->ascent;

	mov	edi, DWORD PTR [esi+24]
	mov	DWORD PTR [ecx+288], edi

; 454  : 				g->row_descent = r->descent;

	mov	edi, DWORD PTR [esi+28]
	mov	DWORD PTR [ecx+292], edi
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	jne	SHORT $LL1537@Lookup@36
$LN25@Lookup@36:

; 455  : 			}
; 456  : 
; 457  : 			if(vertical)

	cmp	BYTE PTR _vertical$[ebp], 0
	je	SHORT $LN24@Lookup@36

; 458  : 			{
; 459  : 				size.cx += h;

	mov	eax, DWORD PTR _h$158421[ebp]
	add	DWORD PTR _size$[ebp], eax

; 460  : 				size.cy = max(size.cy, w);

	cmp	DWORD PTR _size$[ebp+4], ebx
	jg	SHORT $LN36@Lookup@36
	mov	DWORD PTR _size$[ebp+4], ebx

; 461  : 			}
; 462  : 			else

	jmp	SHORT $LN36@Lookup@36
$LN24@Lookup@36:

; 463  : 			{
; 464  : 				size.cx = max(size.cx, w);

	cmp	DWORD PTR _size$[ebp], ebx
	jg	SHORT $LN150@Lookup@36
	mov	DWORD PTR _size$[ebp], ebx
$LN150@Lookup@36:

; 465  : 				size.cy += h;

	mov	ecx, DWORD PTR _h$158421[ebp]
	add	DWORD PTR _size$[ebp+4], ecx
$LN36@Lookup@36:

; 423  : 
; 424  : 		for(POSITION pos = rows.GetHeadPosition(); pos; rows.GetNext(pos))

	cmp	DWORD PTR tv5943[ebp], 0
	je	$LN2234@Lookup@36
	mov	edx, DWORD PTR _pos$158409[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _pos$158409[ebp], eax
	test	eax, eax
	jne	$LL1429@Lookup@36

; 605  : 
; 606  : 		return rs;

	xor	edi, edi
$LN35@Lookup@36:

; 466  : 			}
; 467  : 		}
; 468  : 
; 469  : 		// align rows and calc glyph positions
; 470  : 
; 471  : 		rs = new RenderedSubtitle(spdrc, clip);

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, edi
	je	SHORT $LN151@Lookup@36
	mov	DWORD PTR [eax], OFFSET ??_7RenderedSubtitle@ssf@@6B@
	mov	ecx, DWORD PTR _spdrc$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR _spdrc$[ebp+4]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR _spdrc$[ebp+8]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR _spdrc$[ebp+12]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _clip$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	edx, DWORD PTR _clip$[ebp+4]
	mov	DWORD PTR [eax+24], edx
	mov	ecx, DWORD PTR _clip$[ebp+8]
	mov	DWORD PTR [eax+28], ecx
	mov	edx, DWORD PTR _clip$[ebp+12]
	mov	DWORD PTR [eax+32], edx
	mov	DWORD PTR [eax+36], edi
	mov	DWORD PTR [eax+40], edi
	mov	DWORD PTR [eax+44], edi
	mov	DWORD PTR [eax+48], edi
	mov	DWORD PTR [eax+52], edi
	mov	DWORD PTR [eax+56], 10			; 0000000aH
	mov	DWORD PTR $T758843[ebp], eax
	jmp	SHORT $LN152@Lookup@36
$LN2418@Lookup@36:

; 436  : 			{
; 437  : 				const Glyph* g = r->GetAt(gpos);

	push	-2147467259				; 80004005H
	fstp	ST(0)
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN2458@Lookup@36:
$LN151@Lookup@36:

; 466  : 			}
; 467  : 		}
; 468  : 
; 469  : 		// align rows and calc glyph positions
; 470  : 
; 471  : 		rs = new RenderedSubtitle(spdrc, clip);

	mov	DWORD PTR $T758843[ebp], edi
$LN152@Lookup@36:
	mov	eax, DWORD PTR $T758843[ebp]

; 472  : 
; 473  : 		CPoint p = GetAlignPoint(style.placement, scale, frame, size);

	mov	esi, DWORD PTR tv5152[ebp]
	lea	ecx, DWORD PTR _size$[ebp]
	push	ecx
	lea	edx, DWORD PTR _frame$[ebp]
	mov	DWORD PTR _rs$[ebp], eax
	push	edx
	lea	eax, DWORD PTR _scale$[ebp]
	push	eax
	lea	edi, DWORD PTR _p$[ebp]
	call	?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@ABVCSize@@@Z ; ssf::GetAlignPoint
	add	esp, 12					; 0000000cH

; 474  : 		CPoint org = GetAlignPoint(style.placement, scale, frame);

	lea	ecx, DWORD PTR _size$761723[ebp]
	push	ecx
	lea	edx, DWORD PTR _frame$[ebp]
	push	edx
	lea	eax, DWORD PTR _scale$[ebp]
	xor	ebx, ebx
	push	eax
	lea	edi, DWORD PTR _org$[ebp]
	mov	DWORD PTR _size$761723[ebp], ebx
	mov	DWORD PTR _size$761723[ebp+4], ebx
	call	?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@ABVCSize@@@Z ; ssf::GetAlignPoint

; 475  : 
; 476  : 		// collision detection
; 477  : 
; 478  : 		if(!s->m_animated)

	mov	edx, DWORD PTR _s$[ebp]
	add	esp, 12					; 0000000cH
	cmp	BYTE PTR [edx+12], bl
	jne	$LN2361@Lookup@36

; 479  : 		{
; 480  : 			int tlb = !rows.IsEmpty() ? rows.GetHead()->border : 0;

	xor	ecx, ecx
	cmp	DWORD PTR _rows$[ebp+8], ebx
	je	SHORT $LN155@Lookup@36
	mov	eax, DWORD PTR _rows$[ebp]
	cmp	eax, ebx
	setne	cl
	cmp	ecx, ebx
	jne	SHORT $LN1573@Lookup@36
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN2459@Lookup@36:
$LN1573@Lookup@36:
	mov	eax, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [eax+32]

; 481  : 			int brb = !rows.IsEmpty() ? rows.GetTail()->border : 0;

	mov	esi, DWORD PTR _rows$[ebp+4]
	xor	eax, eax
	cmp	esi, ebx
	setne	al
	cmp	eax, ebx
	jne	SHORT $LN1595@Lookup@36
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN2460@Lookup@36:
$LN1595@Lookup@36:
	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax+32]
	jmp	SHORT $LN156@Lookup@36
$LN155@Lookup@36:
	xor	eax, eax
$LN156@Lookup@36:

; 482  : 
; 483  : 			CRect r(p, size);

	mov	esi, DWORD PTR _p$[ebp]
	mov	edi, DWORD PTR _size$[ebp]
	mov	ebx, DWORD PTR _size$[ebp+4]

; 484  : 			m_sra.GetRect(r, s, style.placement.align, tlb, brb);

	push	eax
	mov	eax, DWORD PTR tv5024[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv5072[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	push	edx
	add	edi, esi
	mov	DWORD PTR _r$158447[ebp+8], edi
	mov	edi, DWORD PTR _p$[ebp+4]
	lea	edx, DWORD PTR _r$158447[ebp]
	push	edx
	add	ebx, edi
	push	eax
	mov	DWORD PTR _r$158447[ebp], esi
	mov	DWORD PTR _r$158447[ebp+4], edi
	mov	DWORD PTR _r$158447[ebp+12], ebx
	call	?GetRect@SubRectAllocator@ssf@@QAEXAAVCRect@@PBVSubtitle@2@ABUAlign@2@HH@Z ; ssf::SubRectAllocator::GetRect

; 485  : 			org += r.TopLeft() - p;

	mov	edx, DWORD PTR _r$158447[ebp+4]
	mov	eax, edx
	sub	eax, edi
	mov	edi, DWORD PTR _r$158447[ebp]
	add	DWORD PTR _org$[ebp+4], eax
	mov	ecx, edi
	sub	ecx, esi
	add	DWORD PTR _org$[ebp], ecx

; 486  : 			p = r.TopLeft();

	mov	DWORD PTR _p$[ebp], edi
	mov	DWORD PTR _p$[ebp+4], edx
	xor	ebx, ebx
	jmp	SHORT $LN22@Lookup@36
$LN2361@Lookup@36:
	mov	edx, DWORD PTR _p$[ebp+4]
	mov	edi, DWORD PTR _p$[ebp]
$LN22@Lookup@36:

; 487  : 		}
; 488  : 
; 489  : 		CRect subrect(p, size);
; 490  : 
; 491  : 		// continue positioning
; 492  : 
; 493  : 		for(POSITION pos = rows.GetHeadPosition(); pos; rows.GetNext(pos))

	mov	eax, DWORD PTR _rows$[ebp]
	mov	DWORD PTR _subrect$[ebp], edi
	add	edi, DWORD PTR _size$[ebp]
	mov	DWORD PTR _subrect$[ebp+4], edx
	add	edx, DWORD PTR _size$[ebp+4]
	mov	DWORD PTR _subrect$[ebp+8], edi
	mov	DWORD PTR _subrect$[ebp+12], edx
	mov	DWORD PTR _pos$158456[ebp], eax
	cmp	eax, ebx
	je	$LN19@Lookup@36
$LN1633@Lookup@36:

; 494  : 		{
; 495  : 			Row* r = rows.GetAt(pos);

	mov	eax, DWORD PTR _pos$158456[ebp]
	xor	ecx, ecx
	test	eax, eax
	setne	cl
	mov	DWORD PTR tv6152[ebp], ecx
	test	ecx, ecx
	je	$LN2234@Lookup@36

; 496  : 
; 497  : 			CSize rsize;
; 498  : 			rsize.cx = rsize.cy = r->width;
; 499  : 
; 500  : 			if(vertical)

	cmp	BYTE PTR _vertical$[ebp], 0
	mov	eax, DWORD PTR [eax+8]

; 501  : 			{
; 502  : 				p.y = GetAlignPoint(style.placement, scale, frame, rsize).y;

	mov	esi, DWORD PTR tv5152[ebp]
	mov	DWORD PTR _r$158460[ebp], eax
	mov	eax, DWORD PTR [eax+36]
	mov	DWORD PTR _rsize$158461[ebp+4], eax
	mov	DWORD PTR _rsize$158461[ebp], eax
	je	$LN18@Lookup@36
	lea	ecx, DWORD PTR _rsize$158461[ebp]
	push	ecx
	lea	edx, DWORD PTR _frame$[ebp]
	push	edx
	lea	eax, DWORD PTR _scale$[ebp]
	push	eax
	lea	edi, DWORD PTR $T758858[ebp]
	call	?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@ABVCSize@@@Z ; ssf::GetAlignPoint

; 503  : 
; 504  : 				for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	mov	edx, DWORD PTR _r$158460[ebp]
	mov	ebx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$[ebp+4], ecx
	test	ebx, ebx
	je	$LN15@Lookup@36
$LL1663@Lookup@36:

; 505  : 				{
; 506  : 					CAutoPtr<Glyph> g = r->GetAt(gpos);

	xor	eax, eax
	test	ebx, ebx
	setne	al
	mov	DWORD PTR tv6073[ebp], eax
	test	eax, eax
	je	$LN2234@Lookup@36
	mov	edi, DWORD PTR [ebx+8]
	mov	DWORD PTR [ebx+8], 0
	mov	DWORD PTR _g$158469[ebp], edi
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 507  : 					g->tl.x = p.x + (int)(g->style.placement.offset.x * scale.cx + 0.5) + r->ascent - g->ascent;

	fld	DWORD PTR [edi+60]
	fmul	DWORD PTR _scale$[ebp]
	fld	QWORD PTR __real@3fe0000000000000
	fadd	ST(1), ST(0)
	fxch	ST(1)
	call	__ftol2_sse
	sub	eax, DWORD PTR [edi+268]
	mov	ecx, DWORD PTR _r$158460[ebp]
	add	eax, DWORD PTR [ecx+24]
	add	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edi+384], eax

; 508  : 					g->tl.y = p.y + (int)(g->style.placement.offset.y * scale.cy + 0.5);

	fld	DWORD PTR [edi+64]
	fmul	DWORD PTR _scale$[ebp+4]
	faddp	ST(1), ST(0)
	call	__ftol2_sse

; 509  : 					p.y += g->width + g->spacing;
; 510  : 					rs->m_glyphs.AddTail(g);

	mov	esi, DWORD PTR $T758843[ebp]
	mov	edx, eax
	mov	eax, DWORD PTR _p$[ebp+4]
	add	edx, eax
	mov	DWORD PTR [edi+388], edx
	mov	ecx, DWORD PTR [edi+280]
	add	ecx, DWORD PTR [edi+276]
	mov	edx, DWORD PTR [esi+40]
	add	esi, 36					; 00000024H
	add	eax, ecx
	mov	DWORD PTR _p$[ebp+4], eax
	mov	DWORD PTR $T762010[ebp], edx
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN1749@Lookup@36
	mov	DWORD PTR _g$158469[ebp], 0
	mov	DWORD PTR [eax+8], edi
$LN1749@Lookup@36:
	mov	DWORD PTR [esi+16], ecx
	mov	ecx, DWORD PTR $T762010[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+4]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN1738@Lookup@36
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN1737@Lookup@36
$LN1738@Lookup@36:
	mov	DWORD PTR [esi], eax
$LN1737@Lookup@36:

; 511  : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR _g$158469[ebp], 0
	mov	DWORD PTR [esi+4], eax
	je	SHORT $LN1766@Lookup@36
	mov	esi, DWORD PTR _g$158469[ebp]
	mov	eax, esi
	call	??1Glyph@ssf@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1766@Lookup@36:

; 503  : 
; 504  : 				for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	cmp	DWORD PTR tv6073[ebp], 0
	je	$LN2234@Lookup@36
	mov	ebx, DWORD PTR [ebx]
	test	ebx, ebx
	jne	$LL1663@Lookup@36
$LN15@Lookup@36:

; 512  : 
; 513  : 				p.x += r->ascent + r->descent;

	mov	eax, DWORD PTR _r$158460[ebp]
	mov	edx, DWORD PTR [eax+28]
	add	edx, DWORD PTR [eax+24]
	add	DWORD PTR _p$[ebp], edx

; 514  : 			}
; 515  : 			else

	jmp	$LN20@Lookup@36
$LN18@Lookup@36:

; 516  : 			{
; 517  : 				p.x = GetAlignPoint(style.placement, scale, frame, rsize).x;

	lea	eax, DWORD PTR _rsize$158461[ebp]
	push	eax
	lea	ecx, DWORD PTR _frame$[ebp]
	push	ecx
	lea	edx, DWORD PTR _scale$[ebp]
	push	edx
	lea	edi, DWORD PTR $T758859[ebp]
	call	?GetAlignPoint@ssf@@YA?AVCPoint@@ABUPlacement@1@ABUSize@1@ABVCRect@@ABVCSize@@@Z ; ssf::GetAlignPoint

; 518  : 
; 519  : 				for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	mov	ecx, DWORD PTR _r$158460[ebp]
	mov	ebx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$[ebp], eax
	test	ebx, ebx
	je	$LN11@Lookup@36
$LL1781@Lookup@36:

; 520  : 				{
; 521  : 					CAutoPtr<Glyph> g = r->GetAt(gpos);

	xor	eax, eax
	test	ebx, ebx
	setne	al
	mov	DWORD PTR tv6146[ebp], eax
	test	eax, eax
	je	$LN2234@Lookup@36
	mov	edi, DWORD PTR [ebx+8]
	mov	DWORD PTR [ebx+8], 0
	mov	DWORD PTR _g$158479[ebp], edi
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 522  : 					g->tl.x = p.x + (int)(g->style.placement.offset.x * scale.cx + 0.5);

	fld	DWORD PTR [edi+60]
	fmul	DWORD PTR _scale$[ebp]
	fld	QWORD PTR __real@3fe0000000000000
	fadd	ST(1), ST(0)
	fxch	ST(1)
	call	__ftol2_sse
	mov	esi, DWORD PTR _p$[ebp]
	add	eax, esi
	mov	DWORD PTR [edi+384], eax

; 523  : 					g->tl.y = p.y + (int)(g->style.placement.offset.y * scale.cy + 0.5) + r->ascent - g->ascent;

	fld	DWORD PTR [edi+64]
	fmul	DWORD PTR _scale$[ebp+4]
	faddp	ST(1), ST(0)
	call	__ftol2_sse
	sub	eax, DWORD PTR [edi+268]
	mov	edx, DWORD PTR _r$158460[ebp]
	add	eax, DWORD PTR [edx+24]
	add	eax, DWORD PTR _p$[ebp+4]
	mov	DWORD PTR [edi+388], eax

; 524  : 					p.x += g->width + g->spacing;

	mov	eax, DWORD PTR [edi+280]
	add	eax, DWORD PTR [edi+276]
	add	esi, eax
	mov	DWORD PTR _p$[ebp], esi

; 525  : 					rs->m_glyphs.AddTail(g);

	mov	esi, DWORD PTR $T758843[ebp]
	mov	ecx, DWORD PTR [esi+40]
	add	esi, 36					; 00000024H
	mov	DWORD PTR $T762231[ebp], ecx
	call	?GetFreeNode@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@AAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::GetFreeNode
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN1867@Lookup@36
	mov	DWORD PTR _g$158479[ebp], 0
	mov	DWORD PTR [eax+8], edi
$LN1867@Lookup@36:
	mov	edx, DWORD PTR $T762231[ebp]
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR [esi+4]
	inc	DWORD PTR [esi+8]
	test	ecx, ecx
	je	SHORT $LN1856@Lookup@36
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN1855@Lookup@36
$LN1856@Lookup@36:
	mov	DWORD PTR [esi], eax
$LN1855@Lookup@36:

; 526  : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR _g$158479[ebp], 0
	mov	DWORD PTR [esi+4], eax
	je	SHORT $LN1884@Lookup@36
	mov	esi, DWORD PTR _g$158479[ebp]
	mov	eax, esi
	call	??1Glyph@ssf@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1884@Lookup@36:

; 518  : 
; 519  : 				for(POSITION gpos = r->GetHeadPosition(); gpos; r->GetNext(gpos))

	cmp	DWORD PTR tv6146[ebp], 0
	je	$LN2234@Lookup@36
	mov	ebx, DWORD PTR [ebx]
	test	ebx, ebx
	jne	$LL1781@Lookup@36
$LN11@Lookup@36:

; 527  : 
; 528  : 				p.y += r->ascent + r->descent;

	mov	eax, DWORD PTR _r$158460[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, DWORD PTR [eax+24]
	add	DWORD PTR _p$[ebp+4], ecx
$LN20@Lookup@36:

; 487  : 		}
; 488  : 
; 489  : 		CRect subrect(p, size);
; 490  : 
; 491  : 		// continue positioning
; 492  : 
; 493  : 		for(POSITION pos = rows.GetHeadPosition(); pos; rows.GetNext(pos))

	cmp	DWORD PTR tv6152[ebp], 0
	je	$LN2234@Lookup@36
	mov	edx, DWORD PTR _pos$158456[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _pos$158456[ebp], eax
	test	eax, eax
	jne	$LN1633@Lookup@36

; 605  : 
; 606  : 		return rs;

	xor	ebx, ebx
$LN19@Lookup@36:

; 529  : 			}
; 530  : 		}
; 531  : 
; 532  : 		// bkg, precalc style.placement.path, transform
; 533  : 
; 534  : 		pos = rs->m_glyphs.GetHeadPosition();

	mov	eax, DWORD PTR $T758843[ebp]
	mov	esi, DWORD PTR [eax+36]

; 535  : 		while(pos)

	cmp	esi, ebx
	je	SHORT $LN9@Lookup@36
$LL10@Lookup@36:

; 536  : 		{
; 537  : 			Glyph* g = rs->m_glyphs.GetNext(pos);

	xor	eax, eax
	cmp	esi, ebx
	setne	al
	cmp	eax, ebx
	je	$LN2234@Lookup@36
	mov	edi, DWORD PTR [esi+8]
	mov	esi, DWORD PTR [esi]

; 538  : 			g->CreateBkg();

	mov	eax, edi
	call	?CreateBkg@Glyph@ssf@@QAEXXZ		; ssf::Glyph::CreateBkg

; 539  : 			g->CreateSplineCoeffs(spdrc);

	lea	eax, DWORD PTR _spdrc$[ebp]
	push	eax
	push	edi
	call	?CreateSplineCoeffs@Glyph@ssf@@QAEXABVCRect@@@Z ; ssf::Glyph::CreateSplineCoeffs

; 540  : 			g->Transform(org, subrect);

	mov	ecx, DWORD PTR _org$[ebp+4]
	mov	edx, DWORD PTR _org$[ebp]
	push	ecx
	push	edx
	lea	eax, DWORD PTR _subrect$[ebp]
	push	eax
	mov	eax, edi
	call	?Transform@Glyph@ssf@@QAEXVCPoint@@ABVCRect@@@Z ; ssf::Glyph::Transform
	cmp	esi, ebx
	jne	SHORT $LL10@Lookup@36
$LN9@Lookup@36:

; 541  : 		}
; 542  : 
; 543  : 		// merge glyphs (TODO: merge 'fill' too)
; 544  : 
; 545  : 		Glyph* g0 = NULL;
; 546  : 
; 547  : 		pos = rs->m_glyphs.GetHeadPosition();

	mov	eax, DWORD PTR $T758843[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	DWORD PTR _g0$[ebp], ebx
	mov	DWORD PTR _pos$[ebp], eax

; 548  : 		while(pos)

	cmp	eax, ebx
	je	$LN7@Lookup@36
	npad	3
$LL8@Lookup@36:

; 549  : 		{
; 550  : 			POSITION cur = pos;

	mov	eax, DWORD PTR _pos$[ebp]

; 551  : 
; 552  : 			Glyph* g = rs->m_glyphs.GetNext(pos);

	xor	ecx, ecx
	test	eax, eax
	setne	cl
	mov	DWORD PTR _cur$158490[ebp], eax
	mov	eax, ecx
	test	eax, eax
	je	$LN2234@Lookup@36
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ebx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax]

; 553  : 
; 554  : 			CRect r = g->bbox + g->tl;

	mov	eax, DWORD PTR [ebx+384]
	mov	ecx, DWORD PTR [ebx+388]
	mov	DWORD PTR _pos$[ebp], edx
	mov	edx, DWORD PTR [ebx+368]
	mov	DWORD PTR _r$158492[ebp], edx
	mov	edx, DWORD PTR [ebx+372]
	mov	DWORD PTR _r$158492[ebp+4], edx
	mov	edx, DWORD PTR [ebx+376]
	push	ecx
	push	eax
	mov	DWORD PTR _r$158492[ebp+8], edx
	mov	edx, DWORD PTR [ebx+380]
	lea	eax, DWORD PTR _r$158492[ebp]
	push	eax
	mov	DWORD PTR _r$158492[ebp+12], edx
	call	DWORD PTR __imp__OffsetRect@12

; 555  : 
; 556  : 			int size = (int)(g->GetBackgroundSize() + 0.5);

	fld	DWORD PTR [ebx+256]
	fadd	DWORD PTR [ebx+252]
	fld	DWORD PTR [ebx+172]
	fmul	ST(0), ST(1)
	fld	QWORD PTR __real@3fe0000000000000
	fmul	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR tv7688[ebp]
	fld	DWORD PTR tv7688[ebp]
	fadd	ST(0), ST(1)
	call	__ftol2_sse

; 557  : 			int depth = (int)(g->GetShadowDepth() + 0.5);

	fld	DWORD PTR [ebx+200]
	fmulp	ST(2), ST(0)
	mov	esi, eax
	fmul	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR tv7683[ebp]
	fadd	DWORD PTR tv7683[ebp]
	call	__ftol2_sse

; 558  : 
; 559  : 			r.InflateRect(size, size);

	push	esi
	push	esi
	mov	esi, DWORD PTR __imp__InflateRect@12
	lea	ecx, DWORD PTR _r$158492[ebp]
	push	ecx
	mov	edi, eax
	call	esi

; 560  : 			r.InflateRect(depth, depth);

	push	edi
	push	edi
	lea	edx, DWORD PTR _r$158492[ebp]
	push	edx
	call	esi

; 561  : 
; 562  : 			r.left >>= 6;
; 563  : 			r.top >>= 6;
; 564  : 			r.right = (r.right + 32) >> 6;

	mov	eax, DWORD PTR _r$158492[ebp+8]

; 565  : 			r.bottom = (r.bottom + 32) >> 6;

	mov	ecx, DWORD PTR _r$158492[ebp+12]
	sar	DWORD PTR _r$158492[ebp], 6
	sar	DWORD PTR _r$158492[ebp+4], 6
	add	eax, 32					; 00000020H
	sar	eax, 6
	add	ecx, 32					; 00000020H
	sar	ecx, 6

; 566  : 
; 567  : 			if((r & clip).IsRectEmpty()) // clip

	lea	edx, DWORD PTR _clip$[ebp]
	mov	DWORD PTR _r$158492[ebp+8], eax
	push	edx
	lea	eax, DWORD PTR _r$158492[ebp]
	mov	DWORD PTR _r$158492[ebp+12], ecx
	xor	edi, edi
	push	eax
	lea	ecx, DWORD PTR $T758861[ebp]
	push	ecx
	mov	DWORD PTR $T758861[ebp], edi
	mov	DWORD PTR $T758861[ebp+4], edi
	mov	DWORD PTR $T758861[ebp+8], edi
	mov	DWORD PTR $T758861[ebp+12], edi
	call	DWORD PTR __imp__IntersectRect@12
	lea	edx, DWORD PTR $T758861[ebp]
	push	edx
	call	DWORD PTR __imp__IsRectEmpty@4
	test	eax, eax
	je	SHORT $LN6@Lookup@36

; 568  : 			{
; 569  : 				rs->m_glyphs.RemoveAt(cur);

	mov	ebx, DWORD PTR $T758843[ebp]
	mov	esi, DWORD PTR _cur$158490[ebp]
	cmp	esi, DWORD PTR [ebx+36]
	jne	SHORT $LN1938@Lookup@36
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ebx+36], eax
	jmp	SHORT $LN1937@Lookup@36
$LN1938@Lookup@36:
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [ecx], edx
$LN1937@Lookup@36:
	cmp	esi, DWORD PTR [ebx+40]
	jne	SHORT $LN1936@Lookup@36
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [ebx+40], eax
	jmp	SHORT $LN1935@Lookup@36
$LN1936@Lookup@36:
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+4], edx
$LN1935@Lookup@36:
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR $T762492[ebp], eax
	cmp	eax, edi
	je	SHORT $LN1971@Lookup@36
	call	??1Glyph@ssf@@QAE@XZ
	mov	eax, DWORD PTR $T762492[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1971@Lookup@36:
	mov	DWORD PTR [esi+8], edi
	mov	ecx, DWORD PTR [ebx+52]
	mov	DWORD PTR [esi], ecx
	dec	DWORD PTR [ebx+44]
	mov	DWORD PTR [ebx+52], esi
	jne	$LN3@Lookup@36
	mov	ecx, DWORD PTR $T758843[ebp]
	add	ecx, 36					; 00000024H
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	jmp	$LN3@Lookup@36
$LN6@Lookup@36:

; 570  : 			}
; 571  : 			else if(g0 && g0->style.IsSimilar(g->style)) // append

	cmp	DWORD PTR _g0$[ebp], edi
	je	$LN4@Lookup@36
	mov	edi, DWORD PTR _g0$[ebp]
	lea	esi, DWORD PTR [ebx+4]
	add	edi, 4
	call	?IsSimilar@Style@ssf@@QAE_NABU12@@Z	; ssf::Style::IsSimilar
	test	al, al
	je	$LN4@Lookup@36

; 572  : 			{
; 573  : 				CPoint o = g->tl - g0->tl;

	mov	esi, DWORD PTR _g0$[ebp]
	mov	eax, DWORD PTR [ebx+388]
	sub	eax, DWORD PTR [esi+388]
	mov	ecx, DWORD PTR [ebx+384]
	sub	ecx, DWORD PTR [esi+384]
	mov	DWORD PTR $T762505[ebp], eax
	mov	DWORD PTR _o$158503[ebp+4], eax

; 574  : 
; 575  : 				g->path.MovePoints(o);

	lea	eax, DWORD PTR [ebx+296]
	lea	edi, DWORD PTR _o$158503[ebp]
	mov	DWORD PTR $T758864[ebp], ecx
	mov	DWORD PTR _o$158503[ebp], ecx
	call	?MovePoints@GlyphPath@ssf@@QAEXABVCPoint@@@Z ; ssf::GlyphPath::MovePoints

; 576  : 
; 577  : 				g0->path.types.Append(g->path.types);

	lea	edx, DWORD PTR [ebx+300]
	push	edx
	lea	eax, DWORD PTR [esi+300]
	call	?Append@?$CAtlArray@EV?$CElementTraits@E@ATL@@@ATL@@QAEIABV12@@Z ; ATL::CAtlArray<unsigned char,ATL::CElementTraits<unsigned char> >::Append

; 578  : 				g0->path.points.Append(g->path.points);

	lea	eax, DWORD PTR [ebx+316]
	push	eax
	lea	eax, DWORD PTR [esi+316]
	call	?Append@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEIABV12@@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::Append

; 579  : 
; 580  : 				g->path_bkg.MovePoints(o);

	lea	eax, DWORD PTR [ebx+332]
	call	?MovePoints@GlyphPath@ssf@@QAEXABVCPoint@@@Z ; ssf::GlyphPath::MovePoints

; 581  : 
; 582  : 				g0->path_bkg.types.Append(g->path_bkg.types);

	lea	ecx, DWORD PTR [ebx+336]
	push	ecx
	lea	eax, DWORD PTR [esi+336]
	call	?Append@?$CAtlArray@EV?$CElementTraits@E@ATL@@@ATL@@QAEIABV12@@Z ; ATL::CAtlArray<unsigned char,ATL::CElementTraits<unsigned char> >::Append

; 583  : 				g0->path_bkg.points.Append(g->path_bkg.points);

	lea	edx, DWORD PTR [ebx+352]
	push	edx
	lea	eax, DWORD PTR [esi+352]
	call	?Append@?$CAtlArray@UtagPOINT@@V?$CElementTraits@UtagPOINT@@@ATL@@@ATL@@QAEIABV12@@Z ; ATL::CAtlArray<tagPOINT,ATL::CElementTraits<tagPOINT> >::Append

; 584  : 
; 585  : 				g0->bbox |= g->bbox + o;

	mov	ecx, DWORD PTR [ebx+372]
	mov	eax, DWORD PTR [ebx+368]
	mov	edx, DWORD PTR [ebx+376]
	mov	DWORD PTR $T758866[ebp], eax
	mov	eax, DWORD PTR [ebx+380]
	mov	DWORD PTR $T758866[ebp+4], ecx
	mov	ecx, DWORD PTR $T762505[ebp]
	mov	DWORD PTR $T758866[ebp+8], edx
	mov	edx, DWORD PTR $T758864[ebp]
	push	ecx
	mov	DWORD PTR $T758866[ebp+12], eax
	push	edx
	lea	eax, DWORD PTR $T758866[ebp]
	push	eax
	call	DWORD PTR __imp__OffsetRect@12
	lea	ecx, DWORD PTR $T758866[ebp]
	push	ecx
	add	esi, 368				; 00000170H
	push	esi
	push	esi
	call	DWORD PTR __imp__UnionRect@12

; 586  : 
; 587  : 				rs->m_glyphs.RemoveAt(cur);

	mov	esi, DWORD PTR $T758843[ebp]
	mov	edi, DWORD PTR _cur$158490[ebp]
	cmp	edi, DWORD PTR [esi+36]
	jne	SHORT $LN1987@Lookup@36
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi+36], edx
	jmp	SHORT $LN1986@Lookup@36
$LN1987@Lookup@36:
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [eax], ecx
$LN1986@Lookup@36:
	cmp	edi, DWORD PTR [esi+40]
	jne	SHORT $LN1985@Lookup@36
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+40], edx
	jmp	SHORT $LN1984@Lookup@36
$LN1985@Lookup@36:
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], ecx
$LN1984@Lookup@36:
	mov	ebx, DWORD PTR [edi+8]
	test	ebx, ebx
	je	SHORT $LN2020@Lookup@36
	mov	eax, ebx
	call	??1Glyph@ssf@@QAE@XZ
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2020@Lookup@36:
	mov	DWORD PTR [edi+8], 0
	mov	edx, DWORD PTR [esi+52]
	mov	DWORD PTR [edi], edx
	dec	DWORD PTR [esi+44]
	mov	DWORD PTR [esi+52], edi
	jne	SHORT $LN3@Lookup@36
	lea	ecx, DWORD PTR [esi+36]
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll

; 588  : 			}
; 589  : 			else // leave alone

	jmp	SHORT $LN3@Lookup@36
$LN4@Lookup@36:

; 590  : 			{
; 591  : 				g0 = g;

	mov	DWORD PTR _g0$[ebp], ebx
$LN3@Lookup@36:

; 548  : 		while(pos)

	cmp	DWORD PTR _pos$[ebp], 0
	jne	$LL8@Lookup@36

; 605  : 
; 606  : 		return rs;

	xor	ebx, ebx
$LN7@Lookup@36:

; 592  : 			}
; 593  : 		}
; 594  : 
; 595  : 		// rasterize
; 596  : 
; 597  : 		pos = rs->m_glyphs.GetHeadPosition();

	mov	eax, DWORD PTR $T758843[ebp]
	mov	esi, DWORD PTR [eax+36]

; 598  : 		while(pos) rs->m_glyphs.GetNext(pos)->Rasterize();

	cmp	esi, ebx
	je	SHORT $LN1@Lookup@36
$LL2@Lookup@36:
	xor	eax, eax
	cmp	esi, ebx
	setne	al
	cmp	eax, ebx
	je	$LN2234@Lookup@36
	mov	eax, DWORD PTR [esi+8]
	mov	esi, DWORD PTR [esi]
	push	eax
	call	?Rasterize@Glyph@ssf@@QAEXXZ		; ssf::Glyph::Rasterize
	cmp	esi, ebx
	jne	SHORT $LL2@Lookup@36
$LN1@Lookup@36:

; 599  : 
; 600  : 		// cache
; 601  : 
; 602  : 		m_rsc.Add(s->m_name, rs);

	mov	esi, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR _rs$[ebp]
	push	eax
	mov	eax, DWORD PTR tv5052[ebp]
	lea	ecx, DWORD PTR [esi+168]
	push	ecx
	call	?Add@?$Cache@PAVRenderedSubtitle@ssf@@@ssf@@QAEXABV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAPAVRenderedSubtitle@2@_N@Z ; ssf::Cache<ssf::RenderedSubtitle *>::Add

; 603  : 
; 604  : 		m_fc.Flush();

	add	esi, 8
	push	esi
	call	?Flush@?$Cache@PAVFontWrapper@ssf@@@ssf@@QAEXXZ ; ssf::Cache<ssf::FontWrapper *>::Flush

; 605  : 
; 606  : 		return rs;

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR _glypsh2fill$[ebp+8], ebx
	jbe	SHORT $LN2059@Lookup@36
	npad	6
$LL2071@Lookup@36:
	mov	eax, DWORD PTR _glypsh2fill$[ebp]
	xor	ecx, ecx
	cmp	eax, ebx
	setne	cl
	cmp	ecx, ebx
	je	$LN2234@Lookup@36
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _glypsh2fill$[ebp+16]
	mov	DWORD PTR _glypsh2fill$[ebp], edx
	mov	DWORD PTR [eax], ecx
	dec	DWORD PTR _glypsh2fill$[ebp+8]
	mov	DWORD PTR _glypsh2fill$[ebp+16], eax
	jne	SHORT $LN2074@Lookup@36
	lea	esi, DWORD PTR _glypsh2fill$[ebp]
	call	?RemoveAll@?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAEXXZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::RemoveAll
$LN2074@Lookup@36:
	cmp	DWORD PTR _glypsh2fill$[ebp+8], ebx
	ja	SHORT $LL2071@Lookup@36
$LN2059@Lookup@36:
	mov	eax, DWORD PTR _glypsh2fill$[ebp+12]
	mov	DWORD PTR _glypsh2fill$[ebp], ebx
	mov	DWORD PTR _glypsh2fill$[ebp+4], ebx
	mov	DWORD PTR _glypsh2fill$[ebp+16], ebx
	cmp	eax, ebx
	je	SHORT $LN2050@Lookup@36
$LL2089@Lookup@36:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, esi
	cmp	esi, ebx
	jne	SHORT $LL2089@Lookup@36
	mov	DWORD PTR _glypsh2fill$[ebp+12], ebx
$LN2050@Lookup@36:
	mov	esi, DWORD PTR _row$[ebp]
	cmp	esi, ebx
	je	SHORT $LN2099@Lookup@36
	mov	ecx, esi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2099@Lookup@36:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _rows$[ebp+8], ebx
	jbe	SHORT $LN2130@Lookup@36
	npad	11
$LL2142@Lookup@36:
	mov	esi, DWORD PTR _rows$[ebp]
	cmp	esi, ebx
	je	$LN2234@Lookup@36
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR _rows$[ebp], edx
	mov	edi, DWORD PTR [esi+8]
	cmp	edi, ebx
	je	SHORT $LN2165@Lookup@36
	mov	ecx, edi
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2165@Lookup@36:
	mov	DWORD PTR [esi+8], ebx
	mov	eax, DWORD PTR _rows$[ebp+16]
	mov	DWORD PTR [esi], eax
	dec	DWORD PTR _rows$[ebp+8]
	mov	DWORD PTR _rows$[ebp+16], esi
	jne	SHORT $LN2145@Lookup@36
	lea	esi, DWORD PTR _rows$[ebp]
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VRow@ssf@@@ATL@@V?$CAutoPtrElementTraits@VRow@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Row>,ATL::CAutoPtrElementTraits<ssf::Row> >::RemoveAll
$LN2145@Lookup@36:
	cmp	DWORD PTR _rows$[ebp+8], ebx
	ja	SHORT $LL2142@Lookup@36
$LN2130@Lookup@36:
	mov	eax, DWORD PTR _rows$[ebp+12]
	mov	DWORD PTR _rows$[ebp], ebx
	mov	DWORD PTR _rows$[ebp+4], ebx
	mov	DWORD PTR _rows$[ebp+16], ebx
	cmp	eax, ebx
	je	SHORT $LN2121@Lookup@36
$LL2181@Lookup@36:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	_free
	add	esp, 4
	mov	eax, esi
	cmp	esi, ebx
	jne	SHORT $LL2181@Lookup@36
	mov	DWORD PTR _rows$[ebp+12], ebx
$LN2121@Lookup@36:
	lea	ecx, DWORD PTR _glyphs$[ebp]
	call	?RemoveAll@?$CAtlList@V?$CAutoPtr@VGlyph@ssf@@@ATL@@V?$CAutoPtrElementTraits@VGlyph@ssf@@@2@@ATL@@QAEXXZ ; ATL::CAtlList<ATL::CAutoPtr<ssf::Glyph>,ATL::CAutoPtrElementTraits<ssf::Glyph> >::RemoveAll

; 607  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	eax, DWORD PTR $T758843[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN2447@Lookup@36:
	npad	3
$LN2455@Lookup@36:
	DD	$LN362@Lookup@36
	DD	$LN361@Lookup@36
	DD	$LN360@Lookup@36
	DD	$LN359@Lookup@36
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$0:
	lea	ecx, DWORD PTR _glyphs$[ebp]
	jmp	??1?$CAutoPtrList@VGlyph@ssf@@@ATL@@QAE@XZ
__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$3:
	lea	edi, DWORD PTR _g$157878[ebp]
	jmp	??1?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtr<ssf::Glyph>::~CAutoPtr<ssf::Glyph>
__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$4:
	lea	esi, DWORD PTR _rows$[ebp]
	jmp	??1?$CAutoPtrList@VRow@ssf@@@ATL@@QAE@XZ
__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$5:
	lea	edi, DWORD PTR _row$[ebp]
	jmp	??1?$CAutoPtr@VRow@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtr<ssf::Row>::~CAutoPtr<ssf::Row>
__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$6:
	lea	edi, DWORD PTR _g$158126[ebp]
	jmp	??1?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtr<ssf::Glyph>::~CAutoPtr<ssf::Glyph>
__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$11:
	lea	esi, DWORD PTR _glypsh2fill$[ebp]
	jmp	??1?$CAtlList@PAVGlyph@ssf@@V?$CElementTraits@PAVGlyph@ssf@@@ATL@@@ATL@@QAE@XZ ; ATL::CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >::~CAtlList<ssf::Glyph *,ATL::CElementTraits<ssf::Glyph *> >
__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$13:
	lea	edi, DWORD PTR _g$158469[ebp]
	jmp	??1?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtr<ssf::Glyph>::~CAutoPtr<ssf::Glyph>
__unwindfunclet$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z$14:
	lea	edi, DWORD PTR _g$158479[ebp]
	jmp	??1?$CAutoPtr@VGlyph@ssf@@@ATL@@QAE@XZ	; ATL::CAutoPtr<ssf::Glyph>::~CAutoPtr<ssf::Glyph>
__ehhandler$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Lookup@Renderer@ssf@@QAEPAVRenderedSubtitle@2@PBVSubtitle@2@ABVCSize@@ABVCRect@@@Z ENDP ; ssf::Renderer::Lookup
PUBLIC	?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z ; ssf::Renderer::NextSegment
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z$0
__ehfuncinfo$?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z
_TEXT	SEGMENT
_names$ = -84						; size = 48
_iBin$763797 = -36					; size = 4
_nHash$763798 = -32					; size = 4
_pPrev$763800 = -28					; size = 4
_pNode$763758 = -24					; size = 4
_pPrev$763720 = -24					; size = 4
tv469 = -20						; size = 4
_iBin$763718 = -20					; size = 4
tv654 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_cur$157751 = 8						; size = 4
_this$ = 8						; size = 4
_pNext$763779 = 12					; size = 4
_nHash$763719 = 12					; size = 4
_subs$ = 12						; size = 4
?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z PROC ; ssf::Renderer::NextSegment, COMDAT

; 82   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 72					; 00000048H

; 83   : 		StringMapW<bool> names;

	fld	DWORD PTR __real@3f400000
	push	ebx
	fstp	DWORD PTR _names$[ebp+12]
	xor	ebx, ebx
	fld	DWORD PTR __real@3e800000
	push	esi
	fstp	DWORD PTR _names$[ebp+16]
	push	edi
	fld	DWORD PTR __real@40100000
	lea	ecx, DWORD PTR _names$[ebp]
	fstp	DWORD PTR _names$[ebp+20]
	mov	DWORD PTR _names$[ebp], ebx
	mov	DWORD PTR _names$[ebp+4], ebx
	mov	DWORD PTR _names$[ebp+8], 17		; 00000011H
	mov	DWORD PTR _names$[ebp+24], -1
	mov	DWORD PTR _names$[ebp+28], ebx
	mov	DWORD PTR _names$[ebp+32], ebx
	mov	DWORD PTR _names$[ebp+36], 10		; 0000000aH
	mov	DWORD PTR _names$[ebp+40], ebx
	mov	DWORD PTR _names$[ebp+44], ebx
	call	?UpdateRehashThresholds@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEXXZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::UpdateRehashThresholds
	mov	DWORD PTR __$EHRec$[ebp+8], ebx

; 84   : 		POSITION pos = subs.GetHeadPosition();

	mov	eax, DWORD PTR _subs$[ebp]
	mov	esi, DWORD PTR [eax]

; 85   : 		while(pos) names[subs.GetNext(pos)->m_name] = true;

	cmp	esi, ebx
	je	SHORT $LN4@NextSegmen
$LN167@NextSegmen:
	mov	ecx, DWORD PTR [esi+8]
	mov	edi, DWORD PTR [ecx+8]
	mov	esi, DWORD PTR [esi]
	lea	edx, DWORD PTR _pPrev$763720[ebp]
	push	edx
	lea	eax, DWORD PTR _nHash$763719[ebp]
	push	eax
	lea	ecx, DWORD PTR _iBin$763718[ebp]
	push	ecx
	push	edi
	lea	eax, DWORD PTR _names$[ebp]
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::GetNode
	cmp	eax, ebx
	jne	SHORT $LN49@NextSegmen
	cmp	DWORD PTR _names$[ebp], ebx
	jne	SHORT $LN47@NextSegmen
	mov	edx, DWORD PTR _names$[ebp+8]
	push	1
	push	edx
	lea	eax, DWORD PTR _names$[ebp]
	push	eax
	call	?InitHashTable@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE_NI_N@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::InitHashTable
	test	al, al
	je	SHORT $LN150@NextSegmen
$LN47@NextSegmen:
	mov	ecx, DWORD PTR _nHash$763719[ebp]
	mov	edx, DWORD PTR _iBin$763718[ebp]
	push	ecx
	push	edx
	push	edi
	lea	eax, DWORD PTR _names$[ebp]
	push	eax
	call	?NewNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@AAEPAVCNode@12@PB_WII@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::NewNode
$LN49@NextSegmen:
	mov	BYTE PTR [eax+4], 1
	cmp	esi, ebx
	jne	SHORT $LN167@NextSegmen
$LN4@NextSegmen:

; 86   : 
; 87   : 		pos = m_sra.GetStartPosition();

	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 248				; 000000f8H
	xor	eax, eax
	mov	DWORD PTR tv469[ebp], esi
	cmp	DWORD PTR [esi+4], ebx
	je	SHORT $LN57@NextSegmen
	mov	edx, DWORD PTR [esi+8]
	cmp	edx, ebx
	jbe	SHORT $LN53@NextSegmen
	mov	edi, DWORD PTR [esi]
	mov	ecx, edi
$LL55@NextSegmen:
	cmp	DWORD PTR [ecx], ebx
	jne	SHORT $LN151@NextSegmen
	inc	eax
	add	ecx, 4
	cmp	eax, edx
	jb	SHORT $LL55@NextSegmen
$LN53@NextSegmen:
	xor	eax, eax
$LN57@NextSegmen:
	mov	edi, eax

; 88   : 		while(pos)

	cmp	eax, ebx
	je	$LN2@NextSegmen
	jmp	SHORT $LN3@NextSegmen
$LN149@NextSegmen:

; 85   : 		while(pos) names[subs.GetNext(pos)->m_name] = true;

	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN168@NextSegmen:
$LN150@NextSegmen:
	push	-2147024882				; 8007000eH
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN169@NextSegmen:
$LN151@NextSegmen:

; 86   : 
; 87   : 		pos = m_sra.GetStartPosition();

	mov	eax, DWORD PTR [edi+eax*4]
	jmp	SHORT $LN57@NextSegmen
	npad	6
$LL160@NextSegmen:

; 88   : 		while(pos)

	xor	ebx, ebx
$LN3@NextSegmen:

; 89   : 		{
; 90   : 			POSITION cur = pos;

	mov	DWORD PTR _cur$157751[ebp], edi

; 91   : 			const CStringW& name = m_sra.GetNextKey(pos);

	cmp	edi, ebx
	je	SHORT $LN149@NextSegmen
	lea	eax, DWORD PTR [edi+24]
	mov	DWORD PTR tv654[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _pNode$763758[ebp], edi
	cmp	eax, ebx
	je	SHORT $LN83@NextSegmen
	mov	ebx, eax
	mov	DWORD PTR _pNext$763779[ebp], eax
	jmp	SHORT $LN80@NextSegmen
$LN83@NextSegmen:
	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [edi+28]
	xor	edx, edx
	div	ecx
	inc	edx
	npad	6
$LL81@NextSegmen:
	cmp	edx, ecx
	jae	SHORT $LN163@NextSegmen
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [eax+edx*4]
	je	SHORT $LN79@NextSegmen
	mov	ebx, DWORD PTR [eax]
$LN79@NextSegmen:
	inc	edx
	test	ebx, ebx
	je	SHORT $LL81@NextSegmen
$LN163@NextSegmen:
	mov	DWORD PTR _pNext$763779[ebp], ebx
$LN80@NextSegmen:

; 92   : 			if(!names.Lookup(name)) m_sra.RemoveAtPos(cur);

	mov	ecx, DWORD PTR _pNode$763758[ebp]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR _pPrev$763800[ebp]
	push	edx
	lea	ecx, DWORD PTR _nHash$763798[ebp]
	push	ecx
	lea	edx, DWORD PTR _iBin$763797[ebp]
	push	edx
	push	eax
	lea	eax, DWORD PTR _names$[ebp]
	mov	edi, ebx
	call	?GetNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@ABEPAVCNode@12@PB_WAAI1AAPAV312@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::GetNode
	test	eax, eax
	jne	SHORT $LN135@NextSegmen
	mov	eax, DWORD PTR _cur$157751[ebp]
	mov	eax, DWORD PTR [eax+28]
	xor	edx, edx
	div	DWORD PTR [esi+8]
	mov	esi, DWORD PTR [esi]
	mov	ecx, DWORD PTR _cur$157751[ebp]
	cmp	ecx, DWORD PTR [esi+edx*4]
	je	SHORT $LN159@NextSegmen
	mov	ecx, DWORD PTR [esi+edx*4]
	mov	eax, DWORD PTR [ecx+24]
	mov	ebx, DWORD PTR _cur$157751[ebp]
	cmp	eax, ebx
	je	SHORT $LN134@NextSegmen
	npad	5
$LL94@NextSegmen:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx+24]
	cmp	eax, ebx
	jne	SHORT $LL94@NextSegmen
$LN134@NextSegmen:
	mov	ebx, DWORD PTR _pNext$763779[ebp]
	test	ecx, ecx
	jne	SHORT $LN124@NextSegmen
$LN159@NextSegmen:
	mov	eax, DWORD PTR tv654[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+edx*4], ecx
	jmp	SHORT $LN117@NextSegmen
$LN124@NextSegmen:
	mov	edx, DWORD PTR tv654[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+24], eax
$LN117@NextSegmen:
	mov	eax, DWORD PTR _cur$157751[ebp]
	mov	esi, DWORD PTR tv469[ebp]
	call	?FreeNode@?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@VSubRect@ssf@@V?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@VSubRect@ssf@@@2@@ATL@@AAEXPAVCNode@12@@Z ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,ssf::SubRect,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<ssf::SubRect> >::FreeNode
$LN135@NextSegmen:

; 88   : 		while(pos)

	test	ebx, ebx
	jne	$LL160@NextSegmen
$LN2@NextSegmen:

; 93   : 		}
; 94   : 	}

	lea	ecx, DWORD PTR _names$[ebp]
	push	ecx
	call	??1?$CAtlMap@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@_NV?$CStringElementTraits@V?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@2@V?$CElementTraits@_N@2@@ATL@@QAE@XZ ; ATL::CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >::~CAtlMap<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >,bool,ATL::CStringElementTraits<ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > > >,ATL::CElementTraits<bool> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN165@NextSegmen:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z$0:
	lea	eax, DWORD PTR _names$[ebp]
	jmp	??1?$StringMapW@_NV?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@@ssf@@QAE@XZ
__ehhandler$?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NextSegment@Renderer@ssf@@QAEXABV?$CAutoPtrList@VSubtitle@ssf@@@ATL@@@Z ENDP ; ssf::Renderer::NextSegment
END
