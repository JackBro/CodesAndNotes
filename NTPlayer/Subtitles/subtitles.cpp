#include "stdafx.h"
#include "subtitles.h"
#include "VobSubFile.h"
#include "RTS.h"

void SetSubStreamStyle(const CLSID& clsid, void* pSubStream, bool bApplyDefStyle)
{
    if (clsid == __uuidof(CVobSubFile))
    {
        CVobSubFile* pVSF = (CVobSubFile*)(ISubStream*)pSubStream;
        if (bApplyDefStyle)
        {
            //pVSF->SetAlignment(s.fOverridePlacement, s.nHorPos, s.nVerPos, 1, 1);
        }
    }
    else if (clsid == __uuidof(CVobSubStream))
    {
        CVobSubStream* pVSS = (CVobSubStream*)(ISubStream*)pSubStream;
        if (bApplyDefStyle)
        {
            //pVSS->SetAlignment(s.fOverridePlacement, s.nHorPos, s.nVerPos, 1, 1);
        }
    }
    else if (clsid == __uuidof(CRenderedTextSubtitle))
    {
        CRenderedTextSubtitle* pRTS = (CRenderedTextSubtitle*)(ISubStream*)pSubStream;
        STSStyle style;
//         if (bApplyDefStyle || pRTS->m_fUsingAutoGeneratedDefaultStyle)
//         {                
//             style = s.subdefstyle;
// 
//             if (s.fOverridePlacement)
//             {
//                 style.scrAlignment = 2;
//                 int w = pRTS->m_dstScreenSize.cx;
//                 int h = pRTS->m_dstScreenSize.cy;
//                 int mw = w - style.marginRect.left - style.marginRect.right;
//                 style.marginRect.bottom = h - MulDiv(h, s.nVerPos, 100);
//                 style.marginRect.left = MulDiv(w, s.nHorPos, 100) - mw / 2;
//                 style.marginRect.right = w - (style.marginRect.left + mw);
//             }
// 
//             bool res = pRTS->SetDefaultStyle(style);
//             UNREFERENCED_PARAMETER(res);
//         }

//         if (pRTS->GetDefaultStyle(style) && style.relativeTo == 2)
//         {
//             //style.relativeTo = s.subdefstyle.relativeTo;
//             pRTS->SetDefaultStyle(style);
//         }
        bool res = pRTS->SetDefaultStyle(style);

        //pRTS->SetOverride(s.fUseDefaultSubtitlesStyle, &s.subdefstyle);

        pRTS->Deinit();
    }
}
